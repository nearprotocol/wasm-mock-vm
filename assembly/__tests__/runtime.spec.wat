(module
 (type $FUNCSIG$iii (func (param i32 i32) (result i32)))
 (type $FUNCSIG$vi (func (param i32)))
 (type $FUNCSIG$ii (func (param i32) (result i32)))
 (type $FUNCSIG$v (func))
 (type $FUNCSIG$i (func (result i32)))
 (type $FUNCSIG$iiii (func (param i32 i32 i32) (result i32)))
 (type $FUNCSIG$viiii (func (param i32 i32 i32 i32)))
 (type $FUNCSIG$viii (func (param i32 i32 i32)))
 (type $FUNCSIG$vii (func (param i32 i32)))
 (type $FUNCSIG$iiiiii (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $FUNCSIG$jjjjjj (func (param i64 i64 i64 i64 i64) (result i64)))
 (type $FUNCSIG$jjjj (func (param i64 i64 i64) (result i64)))
 (type $FUNCSIG$ij (func (param i64) (result i32)))
 (type $FUNCSIG$jj (func (param i64) (result i64)))
 (type $FUNCSIG$vjj (func (param i64 i64)))
 (type $FUNCSIG$ijii (func (param i64 i32 i32) (result i32)))
 (type $FUNCSIG$viji (func (param i32 i64 i32)))
 (type $FUNCSIG$iiiii (func (param i32 i32 i32 i32) (result i32)))
 (type $FUNCSIG$viij (func (param i32 i32 i64)))
 (type $FUNCSIG$iij (func (param i32 i64) (result i32)))
 (type $FUNCSIG$jii (func (param i32 i32) (result i64)))
 (type $FUNCSIG$vjjii (func (param i64 i64 i32 i32)))
 (type $FUNCSIG$vj (func (param i64)))
 (type $FUNCSIG$vji (func (param i64 i32)))
 (type $FUNCSIG$jiij (func (param i32 i32 i64) (result i64)))
 (type $FUNCSIG$ji (func (param i32) (result i64)))
 (type $FUNCSIG$jjj (func (param i64 i64) (result i64)))
 (type $FUNCSIG$iiji (func (param i32 i64 i32) (result i32)))
 (type $FUNCSIG$jjjjj (func (param i64 i64 i64 i64) (result i64)))
 (type $FUNCSIG$j (func (result i64)))
 (type $FUNCSIG$iiiiji (func (param i32 i32 i32 i64 i32) (result i32)))
 (type $FUNCSIG$jjjjjjjjj (func (param i64 i64 i64 i64 i64 i64 i64 i64) (result i64)))
 (type $FUNCSIG$iijj (func (param i32 i64 i64) (result i32)))
 (type $FUNCSIG$iiiiiji (func (param i32 i32 i32 i32 i64 i32) (result i32)))
 (type $FUNCSIG$jjjjjjjjjj (func (param i64 i64 i64 i64 i64 i64 i64 i64 i64) (result i64)))
 (type $FUNCSIG$vjjj (func (param i64 i64 i64)))
 (type $FUNCSIG$vdii (func (param f64 i32 i32)))
 (type $FUNCSIG$vdiii (func (param f64 i32 i32 i32)))
 (import "env" "memory" (memory $0 1))
 (data (i32.const 8) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00:\00l\00e\00n\00")
 (data (i32.const 32) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00:\00f\00r\00o\00n\00t\00")
 (data (i32.const 64) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00:\00b\00a\00c\00k\00")
 (data (i32.const 96) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00:\00:\00")
 (data (i32.const 120) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00:\00r\00")
 (data (i32.const 144) " \00\00\00\01\00\00\00\01\00\00\00 \00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00")
 (data (i32.const 192) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00=\00")
 (data (i32.const 216) "\80\00\00\00\01\00\00\00\01\00\00\00\80\00\00\00A\00B\00C\00D\00E\00F\00G\00H\00I\00J\00K\00L\00M\00N\00O\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\000\001\002\003\004\005\006\007\008\009\00+\00/\00")
 (data (i32.const 360) "*\00\00\00\01\00\00\00\01\00\00\00*\00\00\00b\00l\00o\00c\00k\00_\00i\00n\00d\00e\00x\00_\00s\00e\00e\00d\00e\00d\00_\00a\00t\00")
 (data (i32.const 424) "\"\00\00\00\01\00\00\00\01\00\00\00\"\00\00\00r\00a\00n\00d\00o\00m\00_\00b\00u\00f\00f\00e\00r\00_\00k\00e\00y\00")
 (data (i32.const 480) ".\00\00\00\01\00\00\00\01\00\00\00.\00\00\00r\00a\00n\00d\00o\00m\00_\00b\00u\00f\00f\00e\00r\00_\00i\00n\00d\00e\00x\00_\00k\00e\00y\00")
 (data (i32.const 544) "\12\00\00\00\01\00\00\00\01\00\00\00\12\00\00\00E\00n\00c\00o\00d\00i\00n\00g\00s\00")
 (data (i32.const 584) "\"\00\00\00\01\00\00\00\01\00\00\00\"\00\00\00b\00a\00s\00e\005\008\00 \00r\00o\00u\00n\00d\00 \00t\00r\00i\00p\00")
 (data (i32.const 640) "\1c\00\00\00\01\00\00\00\01\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 688) "&\00\00\00\01\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s\00")
 (data (i32.const 744) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00")
 (data (i32.const 800) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00~\00l\00i\00b\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s\00")
 (data (i32.const 856) "t\00\00\00\01\00\00\00\01\00\00\00t\00\00\001\002\003\004\005\006\007\008\009\00A\00B\00C\00D\00E\00F\00G\00H\00J\00K\00L\00M\00N\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\00")
 (data (i32.const 992) "\00\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 1008) "\1c\00\00\00\01\00\00\00\01\00\00\00\1c\00\00\00N\00o\00n\00-\00z\00e\00r\00o\00 \00c\00a\00r\00r\00y\00")
 (data (i32.const 1056) "<\00\00\00\01\00\00\00\01\00\00\00<\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00r\00u\00n\00t\00i\00m\00e\00-\00t\00s\00/\00b\00a\00s\00e\005\008\00.\00t\00s\00")
 (data (i32.const 1136) "\1c\00\00\00\01\00\00\00\01\00\00\00\1c\00\00\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s\00")
 (data (i32.const 1184) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00n\00u\00l\00l\00")
 (data (i32.const 1208) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\001\00T\00M\00u\00")
 (data (i32.const 1232) "N\00\00\00\01\00\00\00\01\00\00\00N\00\00\00W\00r\00o\00n\00g\00 \00e\00n\00c\00o\00d\00e\00d\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00b\00a\00s\00e\005\008\00 \00e\00n\00c\00o\00d\00i\00n\00g\00")
 (data (i32.const 1328) "\8a\00\00\00\01\00\00\00\01\00\00\00\8a\00\00\00n\00o\00d\00e\00_\00m\00o\00d\00u\00l\00e\00s\00/\00@\00a\00s\00-\00p\00e\00c\00t\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00i\00n\00t\00e\00r\00n\00a\00l\00/\00c\00o\00m\00p\00a\00r\00i\00s\00o\00n\00/\00a\00s\00s\00e\00r\00t\00.\00t\00s\00")
 (data (i32.const 1488) "\"\00\00\00\01\00\00\00\01\00\00\00\"\00\00\00b\00a\00s\00e\006\004\00 \00r\00o\00u\00n\00d\00 \00t\00r\00i\00p\00")
 (data (i32.const 1544) "\1a\00\00\00\01\00\00\00\01\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00")
 (data (i32.const 1592) "\1e\00\00\00\01\00\00\00\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00s\00t\00u\00b\00.\00t\00s\00")
 (data (i32.const 1640) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00A\00A\00F\00a\00Z\00A\00=\00=\00")
 (data (i32.const 1672) ".\00\00\00\01\00\00\00\01\00\00\00.\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00k\00e\00y\00s\00 \00c\00o\00n\00t\00e\00n\00t\00s\00")
 (data (i32.const 1736) "\\\00\00\00\01\00\00\00\01\00\00\00\\\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00e\00c\00o\00d\00e\00d\00 \00v\00a\00l\00u\00e\00 \00a\00f\00t\00e\00r\00 \00b\00a\00s\00e\006\004\00 \00r\00o\00u\00n\00d\00t\00r\00i\00p\00")
 (data (i32.const 1848) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00S\00t\00o\00r\00a\00g\00e\00")
 (data (i32.const 1880) " \00\00\00\01\00\00\00\01\00\00\00 \00\00\00S\00t\00r\00i\00n\00g\00 \00R\00o\00u\00n\00d\00t\00r\00i\00p\00")
 (data (i32.const 1928) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00s\00o\00m\00e\00K\00e\00y\00")
 (data (i32.const 1960) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00m\00y\00V\00a\00l\00u\00e\001\00")
 (data (i32.const 1992) "\18\00\00\00\01\00\00\00\01\00\00\00\18\00\00\00s\00o\00m\00e\00O\00t\00h\00e\00r\00K\00e\00y\00")
 (data (i32.const 2032) "\14\00\00\00\01\00\00\00\01\00\00\00\14\00\00\00o\00t\00h\00e\00r\00V\00a\00l\00u\00e\00")
 (data (i32.const 2072) "\1e\00\00\00\01\00\00\00\01\00\00\00\1e\00\00\00B\00y\00t\00e\00s\00 \00R\00o\00u\00n\00d\00t\00r\00i\00p\00")
 (data (i32.const 2120) "D\00\00\00\01\00\00\00\01\00\00\00D\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00b\00y\00t\00e\00s\00 \00v\00a\00l\00u\00e\00 \00f\00r\00o\00m\00 \00s\00t\00o\00r\00a\00g\00e\00")
 (data (i32.const 2208) "\1c\00\00\00\01\00\00\00\01\00\00\00\1c\00\00\00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00K\00e\00y\00")
 (data (i32.const 2256) "n\00\00\00\01\00\00\00\01\00\00\00n\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00d\00 \00v\00a\00l\00u\00e\00 \00o\00n\00 \00g\00e\00t\00t\00i\00n\00g\00 \00b\00y\00t\00e\00s\00 \00w\00i\00t\00h\00 \00a\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 2384) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00G\00e\00n\00e\00r\00i\00c\00 \00G\00e\00t\00/\00S\00e\00t\00 \00R\00o\00u\00n\00d\00t\00r\00i\00p\00")
 (data (i32.const 2456) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00m\00y\00s\00t\00e\00r\00i\00o\00u\00s\00S\00t\00r\00a\00n\00g\00e\00r\00")
 (data (i32.const 2512) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\00H\00e\00l\00l\00o\00 \00w\00o\00r\00l\00d\00")
 (data (i32.const 2552) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00m\00e\00s\00s\00a\00g\00e\001\00")
 (data (i32.const 2584) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00t\00r\00u\00e\00")
 (data (i32.const 2608) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00f\00a\00l\00s\00e\00")
 (data (i32.const 2640) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\000\00")
 (data (i32.const 2664) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\009\00")
 (data (i32.const 2688) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00A\00")
 (data (i32.const 2712) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00a\00")
 (data (i32.const 2736) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00,\00")
 (data (i32.const 2760) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\"\00")
 (data (i32.const 2784) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\\\00")
 (data (i32.const 2808) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\\\00\"\00")
 (data (i32.const 2832) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\\\00\\\00")
 (data (i32.const 2856) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\08\00")
 (data (i32.const 2880) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\\\00b\00")
 (data (i32.const 2904) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\n\00")
 (data (i32.const 2928) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\\\00n\00")
 (data (i32.const 2952) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\0d\00")
 (data (i32.const 2976) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\\\00r\00")
 (data (i32.const 3000) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\t\00")
 (data (i32.const 3024) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\\\00t\00")
 (data (i32.const 3048) "H\00\00\00\01\00\00\00\01\00\00\00H\00\00\00U\00n\00s\00u\00p\00p\00o\00r\00t\00e\00d\00 \00c\00o\00n\00t\00r\00o\00l\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00 \00c\00o\00d\00e\00:\00 \00")
 (data (i32.const 3136) "\90\01\00\00\01\00\00\00\00\00\00\00\90\01\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\00")
 (data (i32.const 3552) "\10\00\00\00\01\00\00\00\17\00\00\00\10\00\00\00P\0c\00\00P\0c\00\00\90\01\00\00d\00\00\00")
 (data (i32.const 3584) "F\00\00\00\01\00\00\00\01\00\00\00F\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00j\00s\00o\00n\00/\00e\00n\00c\00o\00d\00e\00r\00.\00t\00s\00")
 (data (i32.const 3672) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00:\00")
 (data (i32.const 3696) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00{\00")
 (data (i32.const 3720) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00s\00e\00n\00d\00e\00r\00")
 (data (i32.const 3752) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00t\00e\00x\00t\00")
 (data (i32.const 3776) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00n\00u\00m\00b\00e\00r\00")
 (data (i32.const 3808) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00i\00s\00R\00e\00a\00d\00")
 (data (i32.const 3840) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00}\00")
 (data (i32.const 3864) "\1c\00\00\00\01\00\00\00\01\00\00\00\1c\00\00\00A\00r\00r\00a\00y\00 \00i\00s\00 \00e\00m\00p\00t\00y\00")
 (data (i32.const 3912) "(\00\00\00\01\00\00\00\01\00\00\00(\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00i\00n\00p\00u\00t\00 \00e\00n\00d\00")
 (data (i32.const 3968) "F\00\00\00\01\00\00\00\01\00\00\00F\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00j\00s\00o\00n\00/\00d\00e\00c\00o\00d\00e\00r\00.\00t\00s\00")
 (data (i32.const 4056) "^\00\00\00\01\00\00\00\01\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y\00")
 (data (i32.const 4168) "\18\00\00\00\01\00\00\00\01\00\00\00\18\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00,\00\'\00")
 (data (i32.const 4208) ":\00\00\00\01\00\00\00\01\00\00\00:\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00d\00o\00u\00b\00l\00e\00-\00q\00u\00o\00t\00e\00d\00 \00s\00t\00r\00i\00n\00g\00")
 (data (i32.const 4288) "8\00\00\00\01\00\00\00\01\00\00\008\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00c\00o\00n\00t\00r\00o\00l\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00")
 (data (i32.const 4360) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00/\00")
 (data (i32.const 4384) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00b\00")
 (data (i32.const 4408) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00n\00")
 (data (i32.const 4432) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00r\00")
 (data (i32.const 4456) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00t\00")
 (data (i32.const 4480) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00u\00")
 (data (i32.const 4504) "&\00\00\00\01\00\00\00\01\00\00\00&\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\\\00u\00 \00d\00i\00g\00i\00t\00")
 (data (i32.const 4560) "<\00\00\00\01\00\00\00\01\00\00\00<\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00s\00c\00a\00p\00e\00d\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00:\00 \00")
 (data (i32.const 4640) "\18\00\00\00\01\00\00\00\01\00\00\00\18\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00:\00\'\00")
 (data (i32.const 4680) "0\00\00\00\01\00\00\00\01\00\00\000\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00n\00d\00 \00o\00f\00 \00o\00b\00j\00e\00c\00t\00")
 (data (i32.const 4744) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00[\00")
 (data (i32.const 4768) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00]\00")
 (data (i32.const 4792) ".\00\00\00\01\00\00\00\01\00\00\00.\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00n\00d\00 \00o\00f\00 \00a\00r\00r\00a\00y\00")
 (data (i32.const 4856) "\14\00\00\00\01\00\00\00\01\00\00\00\14\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00")
 (data (i32.const 4896) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\'\00")
 (data (i32.const 4920) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00-\00")
 (data (i32.const 4944) "\"\00\00\00\01\00\00\00\01\00\00\00\"\00\00\00C\00a\00n\00n\00o\00t\00 \00p\00a\00r\00s\00e\00 \00J\00S\00O\00N\00")
 (data (i32.const 5000) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00K\00e\00y\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t\00")
 (data (i32.const 5056) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\00~\00l\00i\00b\00/\00m\00a\00p\00.\00t\00s\00")
 (data (i32.const 5096) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00K\00e\00y\00:\00 \00")
 (data (i32.const 5128) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\00 \00w\00i\00t\00h\00 \00t\00y\00p\00e\00 \00")
 (data (i32.const 5168) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\00T\00e\00x\00t\00M\00e\00s\00s\00a\00g\00e\00")
 (data (i32.const 5208) " \00\00\00\01\00\00\00\01\00\00\00 \00\00\00i\00s\00 \00n\00o\00t\00 \00n\00u\00l\00l\00a\00b\00l\00e\00.\00")
 (data (i32.const 5256) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00n\00e\00a\00r\00F\00i\00l\00e\00")
 (data (i32.const 5288) " \00\00\00\01\00\00\00\01\00\00\00 \00\00\00V\00a\00l\00u\00e\00 \00w\00i\00t\00h\00 \00K\00e\00y\00:\00 \00")
 (data (i32.const 5336) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00 \00i\00s\00 \00n\00o\00t\00 \00a\00n\00 \00o\00b\00j\00e\00c\00t\00 \00o\00r\00 \00n\00u\00l\00l\00")
 (data (i32.const 5408) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00S\00t\00r\00i\00n\00g\00")
 (data (i32.const 5440) "0\00\00\00\01\00\00\00\01\00\00\000\00\00\00 \00i\00s\00 \00n\00o\00t\00 \00a\00 \00s\00t\00r\00i\00n\00g\00 \00o\00r\00 \00n\00u\00l\00l\00")
 (data (i32.const 5504) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00u\006\004\00")
 (data (i32.const 5528) "~\00\00\00\01\00\00\00\01\00\00\00~\00\00\00 \00i\00s\00 \00a\00n\00 \006\004\00-\00b\00i\00t\00 \00i\00n\00t\00e\00g\00e\00r\00 \00a\00n\00d\00 \00i\00s\00 \00e\00x\00p\00e\00c\00t\00e\00d\00 \00t\00o\00 \00b\00e\00 \00e\00n\00c\00o\00d\00e\00d\00 \00a\00s\00 \00a\00 \00s\00t\00r\00i\00n\00g\00")
 (data (i32.const 5672) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00b\00o\00o\00l\00")
 (data (i32.const 5696) " \00\00\00\01\00\00\00\01\00\00\00 \00\00\00 \00i\00s\00 \00n\00o\00t\00 \00a\00 \00s\00t\00r\00i\00n\00g\00")
 (data (i32.const 5744) "d\00\00\00\01\00\00\00\01\00\00\00d\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00(\00s\00e\00n\00d\00e\00r\00)\00 \00f\00o\00r\00 \00r\00e\00t\00r\00i\00e\00v\00e\00d\00 \00o\00b\00j\00e\00c\00t\00")
 (data (i32.const 5864) "`\00\00\00\01\00\00\00\01\00\00\00`\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00(\00t\00e\00x\00t\00)\00 \00f\00o\00r\00 \00r\00e\00t\00r\00i\00e\00v\00e\00d\00 \00o\00b\00j\00e\00c\00t\00")
 (data (i32.const 5976) "d\00\00\00\01\00\00\00\01\00\00\00d\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00(\00n\00u\00m\00b\00e\00r\00)\00 \00f\00o\00r\00 \00r\00e\00t\00r\00i\00e\00v\00e\00d\00 \00o\00b\00j\00e\00c\00t\00")
 (data (i32.const 6096) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00")
 (data (i32.const 6136) "^\00\00\00\01\00\00\00\01\00\00\00^\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00g\00e\00t\00<\00T\00>\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 6248) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00m\00e\00s\00s\00a\00g\00e\002\00")
 (data (i32.const 6280) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00u\006\004\00k\00e\00y\00")
 (data (i32.const 6312) "L\00\00\00\01\00\00\00\01\00\00\00L\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00u\006\004\00 \00r\00o\00u\00n\00d\00t\00r\00i\00p\00")
 (data (i32.const 6408) "`\00\00\00\01\00\00\00\01\00\00\00`\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00u\006\004\00 \00g\00e\00t\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 6520) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00u\003\002\00k\00e\00y\00")
 (data (i32.const 6552) "L\00\00\00\01\00\00\00\01\00\00\00L\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00u\003\002\00 \00r\00o\00u\00n\00d\00t\00r\00i\00p\00")
 (data (i32.const 6648) "`\00\00\00\01\00\00\00\01\00\00\00`\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00u\003\002\00 \00g\00e\00t\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 6760) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00i\003\002\00k\00e\00y\00")
 (data (i32.const 6792) "L\00\00\00\01\00\00\00\01\00\00\00L\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00i\003\002\00 \00r\00o\00u\00n\00d\00t\00r\00i\00p\00")
 (data (i32.const 6888) "`\00\00\00\01\00\00\00\01\00\00\00`\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00i\003\002\00 \00g\00e\00t\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 7000) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00b\00o\00o\00l\00k\00e\00y\00")
 (data (i32.const 7032) "N\00\00\00\01\00\00\00\01\00\00\00N\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00b\00o\00o\00l\00 \00r\00o\00u\00n\00d\00t\00r\00i\00p\00")
 (data (i32.const 7128) "b\00\00\00\01\00\00\00\01\00\00\00b\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00b\00o\00o\00l\00 \00g\00e\00t\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 7248) "\12\00\00\00\01\00\00\00\01\00\00\00\12\00\00\00s\00t\00r\00i\00n\00g\00k\00e\00y\00")
 (data (i32.const 7288) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\00S\00t\00r\00i\00n\00g\00V\00a\00l\00u\00e\00")
 (data (i32.const 7328) "R\00\00\00\01\00\00\00\01\00\00\00R\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00s\00t\00r\00i\00n\00g\00 \00r\00o\00u\00n\00d\00t\00r\00i\00p\00")
 (data (i32.const 7432) "l\00\00\00\01\00\00\00\01\00\00\00l\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00d\00a\00t\00a\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00g\00e\00t\00<\00T\00>\00 \00s\00t\00r\00i\00n\00g\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 7560) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00K\00e\00y\00s\00")
 (data (i32.const 7584) "R\00\00\00\01\00\00\00\01\00\00\00R\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00k\00e\00y\00s\00 \00c\00o\00n\00t\00e\00n\00t\00s\00 \00f\00o\00r\00 \00e\00m\00p\00t\00y\00 \00s\00t\00o\00r\00a\00g\00e\00")
 (data (i32.const 7688) "\12\00\00\00\01\00\00\00\01\00\00\00\12\00\00\00s\00o\00m\00e\00A\00p\00p\00l\00e\00")
 (data (i32.const 7728) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00m\00y\00A\00p\00p\00l\00e\00")
 (data (i32.const 7760) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00s\00o\00m\00e\00K\00e\00y\002\00")
 (data (i32.const 7792) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00s\00o\00m\00e\00K\00e\00y\006\00")
 (data (i32.const 7824) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00m\00y\00V\00a\00l\00u\00e\002\00")
 (data (i32.const 7856) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00s\00o\00m\00e\00K\00e\00y\003\00")
 (data (i32.const 7888) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00s\00t\00a\00r\00t\00:\00 \00")
 (data (i32.const 7920) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00 \00-\00 \00")
 (data (i32.const 7944) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00 \00:\00e\00n\00d\00")
 (data (i32.const 7976) "*\00\00\00\01\00\00\00\01\00\00\00*\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00k\00e\00y\00s\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 8040) "8\00\00\00\01\00\00\00\01\00\00\008\00\00\00S\00t\00o\00r\00a\00g\00e\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00k\00e\00y\00")
 (data (i32.const 8112) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\00n\00o\00n\00e\00x\00i\00s\00t\00i\00n\00g\00")
 (data (i32.const 8152) "4\00\00\00\01\00\00\00\01\00\00\004\00\00\00S\00t\00o\00r\00a\00g\00e\00 \00h\00a\00s\00 \00u\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00k\00e\00y\00")
 (data (i32.const 8224) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00S\00t\00o\00r\00a\00g\00e\00 \00c\00o\00n\00t\00a\00i\00n\00s\00 \00k\00e\00y\00 \00t\00h\00a\00t\00 \00w\00a\00s\00 \00d\00e\00l\00e\00t\00e\00d\00")
 (data (i32.const 8320) "4\00\00\00\01\00\00\00\01\00\00\004\00\00\00S\00o\00m\00e\00 \00o\00t\00h\00e\00r\00 \00k\00e\00y\00 \00g\00o\00t\00 \00d\00e\00l\00e\00t\00e\00d\00")
 (data (i32.const 8392) "T\00\00\00\01\00\00\00\01\00\00\00T\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00k\00e\00y\00s\00 \00l\00e\00n\00g\00t\00h\00 \00a\00f\00t\00e\00r\00 \00r\00e\00m\00o\00v\00i\00n\00g\00 \00a\00 \00k\00e\00y\00")
 (data (i32.const 8496) "B\00\00\00\01\00\00\00\01\00\00\00B\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00k\00e\00y\00s\00w\00i\00t\00h\00d\00e\00l\00e\00t\00e\00 \00c\00o\00n\00t\00e\00n\00t\00s\00")
 (data (i32.const 8584) "\"\00\00\00\01\00\00\00\01\00\00\00\"\00\00\00M\00a\00p\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00n\00d\00l\00e\00")
 (data (i32.const 8640) "\14\00\00\00\01\00\00\00\01\00\00\00\14\00\00\00e\00m\00p\00t\00y\00 \00m\00a\00p\00s\00")
 (data (i32.const 8680) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00m\00a\00p\00I\00d\00")
 (data (i32.const 8712) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00z\00z\00z\00")
 (data (i32.const 8736) "<\00\00\00\01\00\00\00\01\00\00\00<\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00a\00l\00u\00e\00s\00 \00i\00n\00 \00e\00m\00p\00t\00y\00 \00m\00a\00p\00")
 (data (i32.const 8816) "\1c\00\00\00\01\00\00\00\01\00\00\00\1c\00\00\00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00k\00e\00y\00")
 (data (i32.const 8864) ">\00\00\00\01\00\00\00\01\00\00\00>\00\00\00M\00a\00p\00 \00c\00o\00n\00t\00a\00i\00n\00s\00 \00a\00 \00n\00o\00n\00 \00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 8944) "X\00\00\00\01\00\00\00\01\00\00\00X\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00r\00e\00s\00u\00l\00t\00 \00o\00n\00 \00g\00e\00t\00 \00w\00i\00t\00h\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 9048) "\18\00\00\00\01\00\00\00\01\00\00\00\18\00\00\00s\00o\00m\00e\00 \00e\00n\00t\00r\00i\00e\00s\00")
 (data (i32.const 9088) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00m\00a\00p\00K\00e\00y\001\00")
 (data (i32.const 9120) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00m\00a\00p\00K\00e\00y\003\00")
 (data (i32.const 9152) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00j\00o\00e\00")
 (data (i32.const 9176) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00H\00o\00w\00d\00y\00")
 (data (i32.const 9208) "X\00\00\00\01\00\00\00\01\00\00\00X\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00a\00l\00u\00e\00s\00 \00s\00i\00z\00e\00 \00i\00n\00 \00m\00a\00p\00 \00w\00i\00t\00h\00 \002\00 \00e\00n\00t\00r\00i\00e\00s\00")
 (data (i32.const 9312) "`\00\00\00\01\00\00\00\01\00\00\00`\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00a\00l\00u\00e\00s\00 \00c\00o\00n\00t\00e\00n\00t\00s\00 \00i\00n\00 \00m\00a\00p\00 \00w\00i\00t\00h\00 \002\00 \00e\00n\00t\00r\00i\00e\00s\00")
 (data (i32.const 9424) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00m\00a\00p\00K\00e\00y\002\00")
 (data (i32.const 9456) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00m\00a\00p\00K\00e\00y\004\00")
 (data (i32.const 9488) "f\00\00\00\01\00\00\00\01\00\00\00f\00\00\00M\00a\00p\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00a\00 \00k\00e\00y\00 \00t\00h\00a\00t\00 \00w\00a\00s\00 \00a\00d\00d\00e\00d\00 \00(\00m\00a\00p\00K\00e\00y\001\00)\00")
 (data (i32.const 9608) "f\00\00\00\01\00\00\00\01\00\00\00f\00\00\00M\00a\00p\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00a\00 \00k\00e\00y\00 \00t\00h\00a\00t\00 \00w\00a\00s\00 \00a\00d\00d\00e\00d\00 \00(\00m\00a\00p\00K\00e\00y\003\00)\00")
 (data (i32.const 9728) ":\00\00\00\01\00\00\00\01\00\00\00:\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00r\00e\00s\00u\00l\00t\00 \00f\00r\00o\00m\00 \00m\00a\00p\00 \00g\00e\00t\00")
 (data (i32.const 9808) "T\00\00\00\01\00\00\00\01\00\00\00T\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00a\00l\00u\00e\00s\00 \00s\00i\00z\00e\00 \00i\00n\00 \00m\00a\00p\00 \00a\00f\00t\00e\00r\00 \00d\00e\00l\00e\00t\00e\00")
 (data (i32.const 9912) "\\\00\00\00\01\00\00\00\01\00\00\00\\\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00a\00l\00u\00e\00s\00 \00c\00o\00n\00t\00e\00n\00t\00s\00 \00i\00n\00 \00m\00a\00p\00 \00a\00f\00t\00e\00r\00 \00d\00e\00l\00e\00t\00e\00")
 (data (i32.const 10024) "F\00\00\00\01\00\00\00\01\00\00\00F\00\00\00M\00a\00p\00 \00c\00o\00n\00t\00a\00i\00n\00s\00 \00a\00 \00k\00e\00y\00 \00t\00h\00a\00t\00 \00w\00a\00s\00 \00d\00e\00l\00e\00t\00e\00d\00")
 (data (i32.const 10112) "\9a\00\00\00\01\00\00\00\01\00\00\00\9a\00\00\00M\00a\00p\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00a\00 \00k\00e\00y\00 \00t\00h\00a\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00t\00h\00e\00r\00e\00 \00a\00f\00t\00e\00r\00 \00d\00e\00l\00e\00t\00i\00o\00n\00 \00o\00f\00 \00a\00n\00o\00t\00h\00e\00r\00 \00k\00e\00y\00")
 (data (i32.const 10288) "T\00\00\00\01\00\00\00\01\00\00\00T\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00r\00e\00s\00u\00l\00t\00 \00f\00r\00o\00m\00 \00m\00a\00p\00 \00g\00e\00t\00 \00a\00f\00t\00e\00r\00 \00d\00e\00l\00e\00t\00e\00")
 (data (i32.const 10392) "\\\00\00\00\01\00\00\00\01\00\00\00\\\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00r\00e\00s\00u\00l\00t\00 \00f\00r\00o\00m\00 \00m\00a\00p\00 \00g\00e\00t\00 \00o\00n\00 \00a\00 \00d\00e\00l\00e\00t\00e\00d\00 \00k\00e\00y\00")
 (data (i32.const 10504) "0\00\00\00\01\00\00\00\01\00\00\000\00\00\00s\00h\00o\00u\00l\00d\00 \00h\00a\00n\00d\00l\00e\00 \00p\00r\00i\00m\00i\00t\00i\00v\00e\00s\00")
 (data (i32.const 10568) "\1a\00\00\00\01\00\00\00\01\00\00\00\1a\00\00\00m\00a\00p\00P\00r\00i\00m\00i\00t\00i\00v\00e\00s\00")
 (data (i32.const 10616) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00K\00e\00y\00 \00\'\00")
 (data (i32.const 10648) ">\00\00\00\01\00\00\00\01\00\00\00>\00\00\00\'\00 \00i\00s\00 \00n\00o\00t\00 \00p\00r\00e\00s\00e\00n\00t\00 \00i\00n\00 \00t\00h\00e\00 \00s\00t\00o\00r\00a\00g\00e\00")
 (data (i32.const 10728) ">\00\00\00\01\00\00\00\01\00\00\00>\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00r\00u\00n\00t\00i\00m\00e\00-\00t\00s\00/\00s\00t\00o\00r\00a\00g\00e\00.\00t\00s\00")
 (data (i32.const 10808) "<\00\00\00\01\00\00\00\01\00\00\00<\00\00\00w\00r\00o\00n\00g\00 \00v\00a\00l\00u\00e\00 \00o\00n\00 \00m\00a\00p\00 \00g\00e\00t\00 \00f\00o\00r\00 \00i\003\002\00")
 (data (i32.const 10888) "(\00\00\00\01\00\00\00\01\00\00\00(\00\00\00s\00h\00o\00u\00l\00d\00 \00h\00a\00n\00d\00l\00e\00 \00a\00r\00r\00a\00y\00s\00")
 (data (i32.const 10944) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00m\00a\00p\00A\00r\00r\00a\00y\00")
 (data (i32.const 10976) "\12\00\00\00\01\00\00\00\01\00\00\00\12\00\00\001\002\003\004\005\006\007\008\009\00")
 (data (i32.const 11016) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00A\00r\00r\00a\00y\00<\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00/\00S\00t\00r\00i\00n\00g\00>\00")
 (data (i32.const 11088) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00 \00i\00s\00 \00n\00o\00t\00 \00a\00n\00 \00a\00r\00r\00a\00y\00 \00o\00r\00 \00n\00u\00l\00l\00.\00")
 (data (i32.const 11160) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00V\00e\00c\00t\00o\00r\00s\00")
 (data (i32.const 11192) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\00s\00h\00o\00u\00l\00d\00 \00w\00o\00r\00k\00")
 (data (i32.const 11232) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00v\00e\00c\00t\00o\00r\001\00")
 (data (i32.const 11264) ",\00\00\00\01\00\00\00\01\00\00\00,\00\00\00V\00e\00c\00t\00o\00r\00 \00n\00o\00t\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00d\00")
 (data (i32.const 11328) "B\00\00\00\01\00\00\00\01\00\00\00B\00\00\00E\00m\00p\00t\00y\00 \00v\00e\00c\00t\00o\00r\00 \00h\00a\00s\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 11416) "H\00\00\00\01\00\00\00\01\00\00\00H\00\00\00E\00m\00p\00t\00y\00 \00v\00e\00c\00t\00o\00r\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00l\00y\00 \00h\00a\00s\00 \00i\00n\00d\00e\00x\00 \000\00")
 (data (i32.const 11504) "B\00\00\00\01\00\00\00\01\00\00\00B\00\00\00i\00s\00E\00m\00p\00t\00y\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00 \00o\00n\00 \00e\00m\00p\00t\00y\00 \00v\00e\00c\00t\00o\00r\00")
 (data (i32.const 11592) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00b\00b\00")
 (data (i32.const 11616) "6\00\00\00\01\00\00\00\01\00\00\006\00\00\00V\00e\00c\00t\00o\00r\00 \00h\00a\00s\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 11688) "L\00\00\00\01\00\00\00\01\00\00\00L\00\00\00N\00o\00n\00 \00e\00m\00p\00t\00y\00 \00v\00e\00c\00t\00o\00r\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00h\00a\00v\00e\00 \00i\00n\00d\00e\00x\00 \000\00")
 (data (i32.const 11784) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00V\00e\00c\00t\00o\00r\00 \00s\00i\00z\00e\00 \001\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00l\00y\00 \00h\00a\00s\00 \00i\00n\00d\00e\00x\00 \001\00")
 (data (i32.const 11880) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00i\00s\00E\00m\00p\00t\00y\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00 \00o\00n\00 \00n\00o\00n\00-\00e\00m\00p\00t\00y\00 \00v\00e\00c\00t\00o\00r\00")
 (data (i32.const 11976) "h\00\00\00\01\00\00\00\01\00\00\00h\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00r\00u\00n\00t\00i\00m\00e\00-\00t\00s\00/\00c\00o\00l\00l\00e\00c\00t\00i\00o\00n\00s\00/\00p\00e\00r\00s\00i\00s\00t\00e\00n\00t\00V\00e\00c\00t\00o\00r\00.\00t\00s\00")
 (data (i32.const 12096) "(\00\00\00\01\00\00\00\01\00\00\00(\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00b\00a\00c\00k\00 \00e\00n\00t\00r\00y\00")
 (data (i32.const 12152) "(\00\00\00\01\00\00\00\01\00\00\00(\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00l\00a\00s\00t\00 \00e\00n\00t\00r\00y\00")
 (data (i32.const 12208) "*\00\00\00\01\00\00\00\01\00\00\00*\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00f\00r\00o\00n\00t\00 \00e\00n\00t\00r\00y\00")
 (data (i32.const 12272) "*\00\00\00\01\00\00\00\01\00\00\00*\00\00\00I\00n\00c\00o\00r\00r\00e\00c\00t\00 \00f\00i\00r\00s\00t\00 \00e\00n\00t\00r\00y\00")
 (data (i32.const 12336) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00i\00n\00c\00o\00r\00r\00e\00c\00t\00 \00v\00e\00c\00t\00o\00r\00 \00c\00o\00n\00t\00e\00n\00t\00s\00")
 (data (i32.const 12408) "\04\00\00\00\01\00\00\00\00\00\00\00\04\00\00\00X-\00\00")
 (data (i32.const 12432) "R\00\00\00\01\00\00\00\01\00\00\00R\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00e\00c\00t\00o\00r\00 \00c\00o\00n\00t\00e\00n\00t\00s\00.\00 \00E\00x\00p\00e\00c\00t\00e\00d\00 \00[\00b\00b\00]\00")
 (data (i32.const 12536) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00b\00c\00")
 (data (i32.const 12560) "F\00\00\00\01\00\00\00\01\00\00\00F\00\00\00V\00e\00c\00t\00o\00r\00 \00s\00i\00z\00e\00 \002\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00h\00a\00v\00e\00 \00i\00n\00d\00e\00x\00 \001\00")
 (data (i32.const 12648) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00V\00e\00c\00t\00o\00r\00 \00s\00i\00z\00e\00 \002\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00l\00y\00 \00h\00a\00s\00 \00i\00n\00d\00e\00x\00 \002\00")
 (data (i32.const 12744) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00X-\00\00\081\00\00")
 (data (i32.const 12768) "Z\00\00\00\01\00\00\00\01\00\00\00Z\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00e\00c\00t\00o\00r\00 \00c\00o\00n\00t\00e\00n\00t\00s\00.\00 \00E\00x\00p\00e\00c\00t\00e\00d\00 \00[\00b\00a\00,\00 \00b\00b\00]\00")
 (data (i32.const 12880) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00b\00d\00")
 (data (i32.const 12904) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00X-\00\00`2\00\00")
 (data (i32.const 12928) "Z\00\00\00\01\00\00\00\01\00\00\00Z\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00e\00c\00t\00o\00r\00 \00c\00o\00n\00t\00e\00n\00t\00s\00.\00 \00E\00x\00p\00e\00c\00t\00e\00d\00 \00[\00b\00a\00,\00 \00b\00d\00]\00")
 (data (i32.const 13040) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00a\00a\00")
 (data (i32.const 13064) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00\003\00\00`2\00\00")
 (data (i32.const 13088) "Z\00\00\00\01\00\00\00\01\00\00\00Z\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00e\00c\00t\00o\00r\00 \00c\00o\00n\00t\00e\00n\00t\00s\00.\00 \00E\00x\00p\00e\00c\00t\00e\00d\00 \00[\00a\00a\00,\00 \00b\00d\00]\00")
 (data (i32.const 13200) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00b\00e\00")
 (data (i32.const 13224) "\0c\00\00\00\01\00\00\00\00\00\00\00\0c\00\00\00\003\00\00`2\00\00\a03\00\00")
 (data (i32.const 13256) "b\00\00\00\01\00\00\00\01\00\00\00b\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00e\00c\00t\00o\00r\00 \00c\00o\00n\00t\00e\00n\00t\00s\00.\00 \00E\00x\00p\00e\00c\00t\00e\00d\00 \00[\00a\00a\00,\00 \00b\00d\00,\00 \00b\00e\00]\00")
 (data (i32.const 13376) "\1e\00\00\00\01\00\00\00\01\00\00\00\1e\00\00\00V\00e\00c\00t\00o\00r\00 \00i\00s\00 \00e\00m\00p\00t\00y\00")
 (data (i32.const 13424) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00\003\00\00`2\00\00")
 (data (i32.const 13448) "P\00\00\00\01\00\00\00\01\00\00\00P\00\00\00V\00e\00c\00t\00o\00r\00 \00h\00a\00s\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00 \00l\00e\00n\00g\00t\00h\00 \00a\00f\00t\00e\00r\00 \00d\00e\00l\00e\00t\00e\00")
 (data (i32.const 13544) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00b\00a\00")
 (data (i32.const 13568) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00\f84\00\00`2\00\00")
 (data (i32.const 13592) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00b\00f\00")
 (data (i32.const 13616) "\0c\00\00\00\01\00\00\00\00\00\00\00\0c\00\00\00\f84\00\00`2\00\00(5\00\00")
 (data (i32.const 13648) "b\00\00\00\01\00\00\00\01\00\00\00b\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00v\00e\00c\00t\00o\00r\00 \00c\00o\00n\00t\00e\00n\00t\00s\00.\00 \00E\00x\00p\00e\00c\00t\00e\00d\00 \00[\00b\00a\00,\00 \00b\00d\00,\00 \00b\00f\00]\00")
 (data (i32.const 13768) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00\f84\00\00`2\00\00")
 (data (i32.const 13792) "\12\00\00\00\01\00\00\00\01\00\00\00\12\00\00\00v\00e\00c\00t\00o\00r\00i\003\002\00")
 (data (i32.const 13832) ">\00\00\00\01\00\00\00\01\00\00\00>\00\00\00V\00e\00c\00t\00o\00r\00 \00i\003\002\00 \00h\00a\00s\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 13912) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00D\00e\00q\00u\00e\00")
 (data (i32.const 13944) "\0e\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00d\00e\00q\00u\00e\00i\00d\00")
 (data (i32.const 13976) "6\00\00\00\01\00\00\00\01\00\00\006\00\00\00e\00m\00p\00t\00y\00 \00d\00e\00q\00u\00e\00 \00l\00e\00n\00g\00t\00h\00 \00i\00s\00 \00w\00r\00o\00n\00g\00")
 (data (i32.const 14048) "8\00\00\00\01\00\00\00\01\00\00\008\00\00\00e\00m\00p\00t\00y\00 \00d\00e\00q\00u\00e\00 \00c\00o\00n\00t\00a\00i\00n\00s\00 \00i\00n\00d\00e\00x\00 \000\00")
 (data (i32.const 14120) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00e\00m\00p\00t\00y\00 \00d\00e\00q\00u\00e\00 \00r\00e\00t\00u\00r\00n\00s\00 \00f\00a\00l\00s\00e\00 \00f\00o\00r\00 \00i\00s\00E\00m\00p\00t\00y\00")
 (data (i32.const 14216) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\001\00")
 (data (i32.const 14240) "*\00\00\00\01\00\00\00\01\00\00\00*\00\00\00d\00e\00q\00u\00e\00 \00l\00e\00n\00g\00t\00h\00 \00i\00s\00 \00w\00r\00o\00n\00g\00")
 (data (i32.const 14304) "<\00\00\00\01\00\00\00\01\00\00\00<\00\00\00d\00e\00q\00u\00e\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00i\00n\00d\00e\00x\00 \000\00")
 (data (i32.const 14384) "<\00\00\00\01\00\00\00\01\00\00\00<\00\00\00d\00e\00q\00u\00e\00 \00r\00e\00t\00u\00r\00n\00s\00 \00t\00r\00u\00e\00 \00f\00o\00r\00 \00i\00s\00E\00m\00p\00t\00y\00")
 (data (i32.const 14464) "f\00\00\00\01\00\00\00\01\00\00\00f\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00r\00u\00n\00t\00i\00m\00e\00-\00t\00s\00/\00c\00o\00l\00l\00e\00c\00t\00i\00o\00n\00s\00/\00p\00e\00r\00s\00i\00s\00t\00e\00n\00t\00D\00e\00q\00u\00e\00.\00t\00s\00")
 (data (i32.const 14584) "8\00\00\00\01\00\00\00\01\00\00\008\00\00\00w\00r\00o\00n\00g\00 \00e\00l\00e\00m\00e\00n\00t\00 \00v\00a\00l\00u\00e\00 \00u\00s\00i\00n\00g\00 \00[\00]\00")
 (data (i32.const 14656) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00w\00r\00o\00n\00g\00 \00b\00a\00c\00k\00 \00e\00l\00e\00m\00e\00n\00t\00")
 (data (i32.const 14712) "&\00\00\00\01\00\00\00\01\00\00\00&\00\00\00w\00r\00o\00n\00g\00 \00f\00r\00o\00n\00t\00 \00e\00l\00e\00m\00e\00n\00t\00")
 (data (i32.const 14768) "&\00\00\00\01\00\00\00\01\00\00\00&\00\00\00w\00r\00o\00n\00g\00 \00f\00i\00r\00s\00t\00 \00e\00l\00e\00m\00e\00n\00t\00")
 (data (i32.const 14824) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00w\00r\00o\00n\00g\00 \00l\00a\00s\00t\00 \00e\00l\00e\00m\00e\00n\00t\00")
 (data (i32.const 14880) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00-\002\00")
 (data (i32.const 14904) "<\00\00\00\01\00\00\00\01\00\00\00<\00\00\00d\00e\00q\00u\00e\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00i\00n\00d\00e\00x\00 \001\00")
 (data (i32.const 14984) "\1c\00\00\00\01\00\00\00\01\00\00\00\1c\00\00\00D\00e\00q\00u\00e\00 \00i\00s\00 \00e\00m\00p\00t\00y\00")
 (data (i32.const 15032) "D\00\00\00\01\00\00\00\01\00\00\00D\00\00\00d\00e\00q\00u\00e\00 \00o\00f\00 \00l\00e\00n\00g\00t\00h\00 \001\00 \00c\00o\00n\00t\00a\00i\00n\00s\00 \00i\00n\00d\00e\00x\00 \001\00")
 (data (i32.const 15120) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00T\00o\00p\00N\00")
 (data (i32.const 15144) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00t\00o\00p\00n\00i\00d\00")
 (data (i32.const 15176) "\18\00\00\00\01\00\00\00\01\00\00\00\18\00\00\00t\00o\00p\00n\00 \00i\00s\00 \00n\00u\00l\00l\00")
 (data (i32.const 15216) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00e\00m\00p\00t\00y\00 \00t\00o\00p\00n\00 \00-\00 \00w\00r\00o\00n\00g\00 \00r\00e\00s\00u\00l\00t\00 \00f\00o\00r\00 \00i\00s\00E\00m\00p\00t\00y\00")
 (data (i32.const 15312) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00e\00m\00p\00t\00y\00 \00t\00o\00p\00n\00 \00-\00 \00w\00r\00o\00n\00g\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 15384) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00e\00m\00p\00t\00y\00 \00t\00o\00p\00n\00 \00-\00 \00c\00o\00n\00t\00a\00i\00n\00s\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 15480) "V\00\00\00\01\00\00\00\01\00\00\00V\00\00\00k\00e\00y\00s\00 \00t\00o\00 \00r\00a\00t\00i\00n\00g\00s\00 \00f\00o\00r\00 \00e\00m\00p\00t\00y\00 \00t\00o\00p\00n\00 \00i\00s\00 \00n\00o\00t\00 \00e\00m\00p\00t\00y\00")
 (data (i32.const 15584) "\\\00\00\00\01\00\00\00\01\00\00\00\\\00\00\00g\00e\00t\00 \00t\00o\00p\00 \00f\00o\00r\00 \00e\00m\00p\00t\00y\00 \00t\00o\00p\00n\00 \00r\00e\00t\00u\00r\00n\00e\00d\00 \00n\00o\00n\00 \00e\00m\00p\00t\00y\00 \00l\00i\00s\00t\00")
 (data (i32.const 15696) "X\00\00\00\01\00\00\00\01\00\00\00X\00\00\00g\00e\00t\00T\00o\00p\00W\00i\00t\00h\00R\00a\00t\00i\00n\00g\00 \00f\00o\00r\00 \00e\00m\00p\00t\00y\00 \00t\00o\00p\00n\00 \00i\00s\00 \00n\00o\00t\00 \00e\00m\00p\00t\00y\00")
 (data (i32.const 15800) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00k\001\00")
 (data (i32.const 15824) ">\00\00\00\01\00\00\00\01\00\00\00>\00\00\00t\00o\00p\00n\00 \00-\00 \00w\00r\00o\00n\00g\00 \00r\00e\00s\00u\00l\00t\00 \00f\00o\00r\00 \00i\00s\00E\00m\00p\00t\00y\00")
 (data (i32.const 15904) "&\00\00\00\01\00\00\00\01\00\00\00&\00\00\00t\00o\00p\00n\00 \00-\00 \00w\00r\00o\00n\00g\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 15960) ">\00\00\00\01\00\00\00\01\00\00\00>\00\00\00t\00o\00p\00n\00 \00-\00 \00c\00o\00n\00t\00a\00i\00n\00s\00 \00n\00o\00n\00e\00x\00i\00s\00t\00e\00n\00t\00 \00k\00e\00y\00")
 (data (i32.const 16040) "d\00\00\00\01\00\00\00\01\00\00\00d\00\00\00t\00o\00p\00n\00 \00-\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00a\00 \00k\00e\00y\00 \00t\00h\00a\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00t\00h\00e\00r\00e\00")
 (data (i32.const 16160) "\04\00\00\00\01\00\00\00\00\00\00\00\04\00\00\00\c8=\00\00")
 (data (i32.const 16184) "<\00\00\00\01\00\00\00\01\00\00\00<\00\00\00k\00e\00y\00s\00 \00t\00o\00 \00r\00a\00t\00i\00n\00g\00s\00 \00w\00r\00o\00n\00g\00 \00f\00o\00r\00 \00t\00o\00p\00n\00")
 (data (i32.const 16264) "\04\00\00\00\01\00\00\00\00\00\00\00\04\00\00\00\c8=\00\00")
 (data (i32.const 16288) "P\00\00\00\01\00\00\00\01\00\00\00P\00\00\00g\00e\00t\00 \00t\00o\00p\00 \00f\00o\00r\00 \00t\00o\00p\00n\00 \00r\00e\00t\00u\00r\00n\00e\00d\00 \00n\00o\00n\00 \00e\00m\00p\00t\00y\00 \00l\00i\00s\00t\00")
 (data (i32.const 16384) "&\00\00\00\01\00\00\00\01\00\00\00&\00\00\00w\00r\00o\00n\00g\00 \00k\00e\00y\00 \00i\00n\00 \00g\00e\00t\00T\00o\00p\00")
 (data (i32.const 16440) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00g\00e\00t\00T\00o\00p\00F\00r\00o\00m\00K\00e\00y\00:\00 \00k\00e\00y\00")
 (data (i32.const 16496) "\1e\00\00\00\01\00\00\00\01\00\00\00\1e\00\00\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t\00")
 (data (i32.const 16544) "d\00\00\00\01\00\00\00\01\00\00\00d\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00r\00u\00n\00t\00i\00m\00e\00-\00t\00s\00/\00c\00o\00l\00l\00e\00c\00t\00i\00o\00n\00s\00/\00p\00e\00r\00s\00i\00s\00t\00e\00n\00t\00T\00o\00p\00n\00.\00t\00s\00")
 (data (i32.const 16664) "F\00\00\00\01\00\00\00\01\00\00\00F\00\00\00g\00e\00t\00T\00o\00p\00F\00r\00o\00m\00K\00e\00y\00 \00f\00o\00r\00 \00t\00o\00p\00n\00 \00w\00r\00o\00n\00g\00 \00r\00e\00s\00u\00l\00t\00")
 (data (i32.const 16752) "l\00\00\00\01\00\00\00\01\00\00\00l\00\00\00g\00e\00t\00T\00o\00p\00W\00i\00t\00h\00R\00a\00t\00i\00n\00g\00 \00f\00o\00r\00 \00t\00o\00p\00n\00 \00w\00i\00t\00h\00 \001\00 \00e\00l\00e\00m\00e\00n\00t\00 \00i\00s\00 \00w\00r\00o\00n\00g\00 \00s\00i\00z\00e\00")
 (data (i32.const 16880) "Z\00\00\00\01\00\00\00\01\00\00\00Z\00\00\00g\00e\00t\00T\00o\00p\00W\00i\00t\00h\00R\00a\00t\00i\00n\00g\00F\00r\00o\00m\00K\00e\00y\00 \00f\00o\00r\00 \00t\00o\00p\00n\00 \00i\00s\00 \00n\00o\00t\00 \00e\00m\00p\00t\00y\00")
 (data (i32.const 16992) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00k\00")
 (data (i32.const 17016) "\04\00\00\00\01\00\00\00\00\00\00\00\04\00\00\00\c8=\00\00")
 (data (i32.const 17040) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00\c8=\00\00pB\00\00")
 (data (i32.const 17064) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00\c8=\00\00pB\00\00")
 (data (i32.const 17088) "\08\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00\c8=\00\00pB\00\00")
 (data (i32.const 17112) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00g\00e\00t\00 \00t\00o\00p\00 \00f\00o\00r\00 \00t\00o\00p\00n\00 \00i\00s\00 \00w\00r\00o\00n\00g\00")
 (data (i32.const 17184) "^\00\00\00\01\00\00\00\01\00\00\00^\00\00\00g\00e\00t\00 \00t\00o\00p\00 \00f\00o\00r\00 \00t\00o\00p\00n\00 \00i\00s\00 \00w\00r\00o\00n\00g\00 \00w\00h\00e\00n\00 \00l\00i\00m\00i\00t\00 \00i\00s\00 \00a\00p\00p\00l\00i\00e\00d\00")
 (data (i32.const 17296) "\04\00\00\00\01\00\00\00\00\00\00\00\04\00\00\00pB\00\00")
 (data (i32.const 17320) "\04\00\00\00\01\00\00\00\00\00\00\00\04\00\00\00pB\00\00")
 (data (i32.const 17344) "\10\00\00\00\01\00\00\00\01\00\00\00\10\00\00\00p\00r\00o\00m\00i\00s\00e\00s\00")
 (data (i32.const 17376) "0\00\00\00\01\00\00\00\01\00\00\000\00\00\00w\00r\00o\00n\00g\00 \00l\00e\00n\00g\00t\00h\00 \00f\00o\00r\00 \00r\00e\00s\00u\00l\00t\00s\00")
 (data (i32.const 17440) ",\00\00\00\01\00\00\00\01\00\00\00,\00\00\00c\00o\00n\00t\00r\00a\00c\00t\00N\00a\00m\00e\00F\00o\00r\00P\00r\00o\00m\00i\00s\00e\00")
 (data (i32.const 17504) "\14\00\00\00\01\00\00\00\01\00\00\00\14\00\00\00m\00e\00t\00h\00o\00d\00N\00a\00m\00e\00")
 (data (i32.const 17544) "@\00\00\00\01\00\00\00\01\00\00\00@\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00r\00u\00n\00t\00i\00m\00e\00-\00t\00s\00/\00c\00o\00n\00t\00r\00a\00c\00t\00.\00t\00s\00")
 (data (i32.const 17624) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00M\00a\00t\00h\00")
 (data (i32.const 17648) "L\00\00\00\01\00\00\00\01\00\00\00L\00\00\00C\00a\00n\00n\00o\00t\00 \00c\00o\00n\00v\00e\00r\00t\00 \00i\00n\00p\00u\00t\00 \00U\00i\00n\00t\008\00A\00r\00r\00a\00y\00 \00t\00o\00 \00u\003\002\00")
 (data (i32.const 17744) "8\00\00\00\01\00\00\00\01\00\00\008\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00r\00u\00n\00t\00i\00m\00e\00-\00t\00s\00/\00m\00a\00t\00h\00.\00t\00s\00")
 (data (i32.const 17816) "\14\00\00\00\01\00\00\00\01\00\00\00\14\00\00\00w\00r\00o\00n\00g\00 \00h\00a\00s\00h\00")
 (data (i32.const 17856) "\0c\00\00\00\01\00\00\00\01\00\00\00\0c\00\00\00t\00o\00H\00a\00s\00h\00")
 (data (i32.const 17888) "0\00\00\00\01\00\00\00\01\00\00\000\00\00\00w\00r\00o\00n\00g\00 \00h\00a\00s\00h\00 \00o\00f\00 \00t\00h\00e\00 \00s\00t\00r\00i\00n\00g\00")
 (data (i32.const 17952) "\0c\00\00\00\01\00\00\00\00\00\00\00\0c\00\00\00\01\00\00\00\06\00\00\00\07\00\00\00")
 (data (i32.const 17984) ">\00\00\00\01\00\00\00\01\00\00\00>\00\00\00w\00r\00o\00n\00g\00 \00o\00u\00t\00p\00u\00t\00 \00l\00e\00n\00g\00t\00h\00 \00f\00o\00r\00 \00h\00a\00s\00h\002\005\006\00")
 (data (i32.const 18064) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00w\00r\00o\00n\00g\00 \00c\00o\00n\00t\00e\00n\00t\00s\00 \00o\00f\00 \00h\00a\00s\00h\002\005\006\00")
 (data (i32.const 18136) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00b\00o\00b\00")
 (data (i32.const 18160) "\18\00\00\00\01\00\00\00\01\00\00\00\18\00\00\00W\00r\00o\00n\00g\00 \00s\00e\00n\00d\00e\00r\00")
 (data (i32.const 18200) "\1e\00\00\00\01\00\00\00\01\00\00\00\1e\00\00\00c\00o\00n\00t\00r\00a\00c\00t\00a\00c\00c\00o\00u\00n\00t\00")
 (data (i32.const 18248) "&\00\00\00\01\00\00\00\01\00\00\00&\00\00\00W\00r\00o\00n\00g\00 \00c\00o\00n\00t\00r\00a\00c\00t\00 \00n\00a\00m\00e\00")
 (data (i32.const 18304) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00s\00")
 (data (i32.const 18328) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00k\00e\00y\00")
 (data (i32.const 18352) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00v\00a\00l\00u\00e\00")
 (data (i32.const 18384) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00n\00a\00m\00e\00")
 (data (i32.const 18408) "6\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\001\00\00\00\02\00\00\00\10\00\00\00\00\00\00\00\93 \00\00\02\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\93\04\00\00\02\00\00\00\10\00\00\00\0d\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\10\00\00\00\10\00\00\00\11\00\00\00\10\00\00\00\00\00\00\00\93 \00\00\02\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\93\00\00\00\02\00\00\00\10\00\00\00\13\00\00\00\98 A\00\00\00\00\00\10\00\00\00\13\00\00\00\10\00\00\00\13\00\00\00\10\00\00\00\13\00\00\00\10\00\00\00\13\00\00\00\10\00\00\00\13\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\93 \00\00\02\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\93 \00\00\02\00\00\00\10\00\00\00\00\00\00\00\93 \00\00\02\00\00\00\10\00\00\00\00\00\00\00\93 \00\00\02\00\00\00\13\01\00\00\02\00\00\00\10\00\00\00\00\00\00\00\93\00\00\00\02\00\00\00")
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "__aspect" "getStackTrace" (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/getStackTrace (result i32)))
 (import "__aspect" "reportInvalidExpectCall" (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportInvalidExpectCall))
 (import "__aspect" "getStackTrace" (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/getStackTrace (result i32)))
 (import "__aspect" "reportTest" (func $node_modules/@as-pect/assembly/assembly/internal/Test/reportTest (param i32 i32)))
 (import "__aspect" "reportDescribe" (func $node_modules/@as-pect/assembly/assembly/internal/Describe/reportDescribe (param i32)))
 (import "__aspect" "reportEndDescribe" (func $node_modules/@as-pect/assembly/assembly/internal/Describe/reportEndDescribe))
 (import "vm" "saveState" (func $assembly/index/saveState))
 (import "__aspect" "reportBeforeAll" (func $node_modules/@as-pect/assembly/assembly/internal/Test/reportBeforeAll (param i32)))
 (import "vm" "restoreState" (func $assembly/index/restoreState))
 (import "__aspect" "reportAfterAll" (func $node_modules/@as-pect/assembly/assembly/internal/Test/reportAfterAll (param i32)))
 (import "__aspect" "reportBeforeEach" (func $node_modules/@as-pect/assembly/assembly/internal/Test/reportBeforeEach (param i32)))
 (import "__aspect" "reportAfterEach" (func $node_modules/@as-pect/assembly/assembly/internal/Test/reportAfterEach (param i32)))
 (import "env" "storage_write" (func $~lib/near-runtime-ts/runtime_api/runtime_api.storage_write (param i64 i64 i64 i64 i64) (result i64)))
 (import "env" "storage_read" (func $~lib/near-runtime-ts/runtime_api/runtime_api.storage_read (param i64 i64 i64) (result i64)))
 (import "env" "register_len" (func $~lib/near-runtime-ts/runtime_api/runtime_api.register_len (param i64) (result i64)))
 (import "env" "read_register" (func $~lib/near-runtime-ts/runtime_api/runtime_api.read_register (param i64 i64)))
 (import "env" "storage_remove" (func $~lib/near-runtime-ts/runtime_api/runtime_api.storage_remove (param i64 i64 i64) (result i64)))
 (import "env" "storage_iter_prefix" (func $~lib/near-runtime-ts/runtime_api/runtime_api.storage_iter_prefix (param i64 i64) (result i64)))
 (import "env" "storage_iter_next" (func $~lib/near-runtime-ts/runtime_api/runtime_api.storage_iter_next (param i64 i64 i64) (result i64)))
 (import "__aspect" "logString" (func $node_modules/@as-pect/assembly/assembly/internal/log/logString (param i32)))
 (import "env" "storage_iter_range" (func $~lib/near-runtime-ts/runtime_api/runtime_api.storage_iter_range (param i64 i64 i64 i64) (result i64)))
 (import "env" "storage_has_key" (func $~lib/near-runtime-ts/runtime_api/runtime_api.storage_has_key (param i64 i64) (result i64)))
 (import "__aspect" "logArray" (func $node_modules/@as-pect/assembly/assembly/internal/log/logArray (param i32)))
 (import "env" "promise_results_count" (func $~lib/near-runtime-ts/runtime_api/runtime_api.promise_results_count (result i64)))
 (import "env" "promise_result" (func $~lib/near-runtime-ts/runtime_api/runtime_api.promise_result (param i64 i64) (result i64)))
 (import "env" "promise_create" (func $~lib/near-runtime-ts/runtime_api/runtime_api.promise_create (param i64 i64 i64 i64 i64 i64 i64 i64) (result i64)))
 (import "env" "promise_then" (func $~lib/near-runtime-ts/runtime_api/runtime_api.promise_then (param i64 i64 i64 i64 i64 i64 i64 i64 i64) (result i64)))
 (import "env" "promise_and" (func $~lib/near-runtime-ts/runtime_api/runtime_api.promise_and (param i64 i64) (result i64)))
 (import "env" "sha256" (func $~lib/near-runtime-ts/runtime_api/runtime_api.sha256 (param i64 i64 i64)))
 (import "env" "block_index" (func $~lib/near-runtime-ts/runtime_api/runtime_api.block_index (result i64)))
 (import "env" "random_seed" (func $~lib/near-runtime-ts/runtime_api/runtime_api.random_seed (param i64)))
 (import "env" "signer_account_id" (func $~lib/near-runtime-ts/runtime_api/runtime_api.signer_account_id (param i64)))
 (import "vm" "setCurrent_account_id" (func $assembly/index/setCurrent_account_id (param i32)))
 (import "env" "current_account_id" (func $~lib/near-runtime-ts/runtime_api/runtime_api.current_account_id (param i64)))
 (import "env" "input" (func $nearFile/input (param i64)))
 (import "env" "register_len" (func $nearFile/register_len (param i64) (result i64)))
 (import "env" "panic" (func $nearFile/panic))
 (import "env" "read_register" (func $nearFile/read_register (param i64 i64)))
 (import "env" "value_return" (func $nearFile/value_return (param i64 i64)))
 (import "__aspect" "reportActualArray" (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualArray (param i32 i32)))
 (import "__aspect" "reportActualValue" (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualFloat (param f64 i32 i32)))
 (import "__aspect" "reportActualValue" (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualInteger (param i32 i32 i32)))
 (import "__aspect" "reportActualNull" (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualNull (param i32)))
 (import "__aspect" "reportActualReference" (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualReferenceExternal (param i32 i32 i32)))
 (import "__aspect" "reportActualString" (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualString (param i32 i32)))
 (import "__aspect" "reportActualLong" (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualLong (param i32 i32 i32)))
 (import "__aspect" "reportActualBool" (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualBool (param i32 i32)))
 (import "__aspect" "reportActualFunction" (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualFunction (param i32 i32)))
 (import "__aspect" "reportExpectedArray" (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedArray (param i32 i32 i32)))
 (import "__aspect" "reportExpectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedFloat (param f64 i32 i32 i32)))
 (import "__aspect" "reportExpectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedInteger (param i32 i32 i32 i32)))
 (import "__aspect" "reportExpectedNull" (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedNull (param i32 i32)))
 (import "__aspect" "reportExpectedReference" (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedReferenceExternal (param i32 i32 i32 i32)))
 (import "__aspect" "reportExpectedString" (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedString (param i32 i32 i32)))
 (import "__aspect" "reportExpectedFalsy" (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedFalsy (param i32 i32)))
 (import "__aspect" "reportExpectedFinite" (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedFinite (param i32 i32)))
 (import "__aspect" "reportExpectedTruthy" (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedTruthy (param i32 i32)))
 (import "__aspect" "reportExpectedLong" (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedLong (param i32 i32 i32 i32)))
 (import "__aspect" "reportExpectedBool" (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedBool (param i32 i32 i32)))
 (import "__aspect" "reportExpectedFunction" (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedFunction (param i32 i32 i32)))
 (table $0 33 funcref)
 (elem (i32.const 0) $null $start:assembly/__tests__/runtime.spec~anonymous|0~anonymous|0 $start:assembly/__tests__/runtime.spec~anonymous|0~anonymous|1 $start:assembly/__tests__/runtime.spec~anonymous|0 $start:node_modules/@as-pect/assembly/assembly/internal/noOp~anonymous|0 $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|0 $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|1 $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|2 $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|3 $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|4 $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|5 $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|6 $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|7~anonymous|0 $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|7 $start:assembly/__tests__/runtime.spec~anonymous|1 $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#values~anonymous|0 $start:assembly/__tests__/runtime.spec~anonymous|2~anonymous|0 $start:assembly/__tests__/runtime.spec~anonymous|2~anonymous|1 $start:assembly/__tests__/runtime.spec~anonymous|2~anonymous|2 $start:assembly/__tests__/runtime.spec~anonymous|2~anonymous|3 $start:assembly/__tests__/runtime.spec~anonymous|2 $start:assembly/__tests__/runtime.spec~anonymous|3~anonymous|0 $start:assembly/__tests__/runtime.spec~anonymous|3 $start:assembly/__tests__/runtime.spec~anonymous|4~anonymous|0 $start:assembly/__tests__/runtime.spec~anonymous|4 $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop~anonymous|0 $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey~anonymous|0 $start:assembly/__tests__/runtime.spec~anonymous|5~anonymous|0 $start:assembly/__tests__/runtime.spec~anonymous|5 $start:assembly/__tests__/runtime.spec~anonymous|6~anonymous|0 $start:assembly/__tests__/runtime.spec~anonymous|6 $start:assembly/__tests__/runtime.spec~anonymous|7~anonymous|0 $start:assembly/__tests__/runtime.spec~anonymous|7)
 (global $~lib/rt/stub/startOffset (mut i32) (i32.const 0))
 (global $~lib/rt/stub/offset (mut i32) (i32.const 0))
 (global $~lib/near-runtime-ts/storage/storage (mut i32) (i32.const 0))
 (global $~lib/near-runtime-ts/collections/index/collections._KEY_LENGTH_SUFFIX i32 (i32.const 24))
 (global $~lib/near-runtime-ts/collections/index/collections._KEY_FRONT_INDEX_SUFFIX i32 (i32.const 48))
 (global $~lib/near-runtime-ts/collections/index/collections._KEY_BACK_INDEX_SUFFIX i32 (i32.const 80))
 (global $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX i32 (i32.const 112))
 (global $~lib/near-runtime-ts/collections/index/collections._KEY_RATING_SUFFIX i32 (i32.const 136))
 (global $~lib/near-runtime-ts/collections/index/collections._RATING_OFFSET i64 (i64.const 2147483648))
 (global $~lib/bignum/utils/HEX_CHARS i32 (i32.const 160))
 (global $~lib/bignum/globals/__divmod_quot_lo (mut i64) (i64.const 0))
 (global $~lib/bignum/globals/__divmod_quot_hi (mut i64) (i64.const 0))
 (global $~lib/bignum/globals/__divmod_rem (mut i64) (i64.const 0))
 (global $~lib/bignum/globals/__res128_lo (mut i64) (i64.const 0))
 (global $~lib/bignum/globals/__res128_hi (mut i64) (i64.const 0))
 (global $~lib/bignum/globals/__float_u128_lo (mut i64) (i64.const 0))
 (global $~lib/bignum/globals/__float_u128_hi (mut i64) (i64.const 0))
 (global $~lib/near-runtime-ts/contract/context (mut i32) (i32.const 0))
 (global $~lib/near-runtime-ts/base64/base64.PADCHAR i32 (i32.const 208))
 (global $~lib/near-runtime-ts/base64/base64.ALPHA i32 (i32.const 232))
 (global $~lib/near-runtime-ts/math/math._BLOCK_INDEX_SEED_AT_KEY i32 (i32.const 376))
 (global $~lib/near-runtime-ts/math/math._RANDOM_BUFFER_KEY i32 (i32.const 440))
 (global $~lib/near-runtime-ts/math/math._RANDOM_BUFFER_INDEX_KEY i32 (i32.const 496))
 (global $~lib/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.type (mut i32) (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.signed (mut i32) (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.float (mut f64) (f64.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.integer (mut i32) (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference (mut i32) (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.offset (mut i32) (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace (mut i32) (i32.const -1))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.isManaged (mut i32) (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.ready (mut i32) (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.type (mut i32) (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.signed (mut i32) (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.float (mut f64) (f64.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.integer (mut i32) (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference (mut i32) (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.offset (mut i32) (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated (mut i32) (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace (mut i32) (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.isManaged (mut i32) (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/noOp/noOp i32 (i32.const 4))
 (global $~lib/argc (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-json/decoder/TRUE_STR i32 (i32.const 2600))
 (global $~lib/assemblyscript-json/decoder/FALSE_STR i32 (i32.const 2624))
 (global $~lib/assemblyscript-json/decoder/NULL_STR i32 (i32.const 1200))
 (global $~lib/assemblyscript-json/decoder/CHAR_0 (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-json/decoder/CHAR_9 (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-json/decoder/CHAR_A (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-json/decoder/CHAR_A_LOWER (mut i32) (i32.const 0))
 (global $nearFile/JSON.handler (mut i32) (i32.const 0))
 (global $nearFile/JSON.decoder (mut i32) (i32.const 0))
 (global $~lib/builtins/u32.MAX_VALUE i32 (i32.const -1))
 (global $node_modules/@as-pect/assembly/assembly/internal/log/ignoreLogs (mut i32) (i32.const 0))
 (global $~lib/builtins/i32.MAX_VALUE i32 (i32.const 2147483647))
 (global $~lib/builtins/i32.MIN_VALUE i32 (i32.const -2147483648))
 (global $~lib/number/U32.MAX_VALUE i32 (i32.const -1))
 (global $node_modules/@as-pect/assembly/assembly/internal/RTrace/RTrace.enabled (mut i32) (i32.const 1))
 (global $~lib/started (mut i32) (i32.const 0))
 (global $~lib/rt/__rtti_base i32 (i32.const 18408))
 (global $~lib/heap/__heap_base i32 (i32.const 18844))
 (export "__start" (func $start))
 (export "memory" (memory $0))
 (export "__alloc" (func $~lib/rt/stub/__alloc))
 (export "__retain" (func $~lib/rt/stub/__retain))
 (export "__release" (func $~lib/rt/stub/__release))
 (export "__collect" (func $~lib/rt/stub/__collect))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "contextTests" (func $assembly/__tests__/runtime.spec/contextTests))
 (export "simple" (func $assembly/__tests__/runtime.spec/__wrapper_simple))
 (export "setKeyValue" (func $assembly/__tests__/runtime.spec/__wrapper_setKeyValue))
 (export "getValueByKey" (func $assembly/__tests__/runtime.spec/__wrapper_getValueByKey))
 (export "setValue" (func $assembly/__tests__/runtime.spec/__wrapper_setValue))
 (export "getValue" (func $assembly/__tests__/runtime.spec/__wrapper_getValue))
 (export "__ready" (func $node_modules/@as-pect/assembly/assembly/index/__ready))
 (export "__call" (func $node_modules/@as-pect/assembly/assembly/internal/call/__call))
 (export "__sendActual" (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/__sendActual))
 (export "__sendExpected" (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/__sendExpected))
 (export "__ignoreLogs" (func $node_modules/@as-pect/assembly/assembly/internal/log/__ignoreLogs))
 (export "__disableRTrace" (func $node_modules/@as-pect/assembly/assembly/internal/RTrace/__disableRTrace))
 (export "__getUsizeArrayId" (func $node_modules/@as-pect/assembly/assembly/internal/RTrace/__getUsizeArrayId))
 (export "__cleanup" (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/__cleanup))
 (func $~lib/rt/stub/maybeGrowMemory (; 61 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  memory.size
  local.set $1
  local.get $1
  i32.const 16
  i32.shl
  local.set $2
  local.get $0
  local.get $2
  i32.gt_u
  if
   local.get $0
   local.get $2
   i32.sub
   i32.const 65535
   i32.add
   i32.const 65535
   i32.const -1
   i32.xor
   i32.and
   i32.const 16
   i32.shr_u
   local.set $3
   local.get $1
   local.tee $4
   local.get $3
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $4
   local.get $4
   memory.grow
   i32.const 0
   i32.lt_s
   if
    local.get $3
    memory.grow
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
  end
  local.get $0
  global.set $~lib/rt/stub/offset
 )
 (func $~lib/rt/stub/__alloc (; 62 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.const 1073741808
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.const 16
  i32.add
  local.set $2
  local.get $0
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.tee $3
  i32.const 16
  local.tee $4
  local.get $3
  local.get $4
  i32.gt_u
  select
  local.set $5
  local.get $2
  local.get $5
  i32.add
  call $~lib/rt/stub/maybeGrowMemory
  local.get $2
  i32.const 16
  i32.sub
  local.set $6
  local.get $6
  local.get $5
  i32.store
  local.get $6
  i32.const -1
  i32.store offset=4
  local.get $6
  local.get $1
  i32.store offset=8
  local.get $6
  local.get $0
  i32.store offset=12
  local.get $2
 )
 (func $~lib/rt/stub/__retain (; 63 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
 )
 (func $~lib/rt/stub/__release (; 64 ;) (type $FUNCSIG$vi) (param $0 i32)
  nop
 )
 (func $~lib/rt/stub/__collect (; 65 ;) (type $FUNCSIG$v)
  nop
 )
 (func $start:~lib/near-runtime-ts/index (; 66 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  i32.const 0
  local.set $0
  i32.const 0
  local.set $1
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 3
   call $~lib/rt/stub/__alloc
   local.set $1
   local.get $1
   local.set $0
  end
  local.get $0
  global.set $~lib/near-runtime-ts/storage/storage
  i32.const 0
  local.set $2
  i32.const 0
  local.set $3
  local.get $2
  i32.eqz
  if
   i32.const 0
   i32.const 4
   call $~lib/rt/stub/__alloc
   local.set $3
   local.get $3
   local.set $2
  end
  local.get $2
  global.set $~lib/near-runtime-ts/contract/context
 )
 (func $~lib/memory/memory.fill (; 67 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  block $~lib/util/memory/memset|inlined.0
   local.get $0
   local.set $5
   local.get $1
   local.set $4
   local.get $2
   local.set $3
   local.get $3
   i32.eqz
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   local.get $4
   i32.store8
   local.get $5
   local.get $3
   i32.add
   i32.const 1
   i32.sub
   local.get $4
   i32.store8
   local.get $3
   i32.const 2
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   i32.const 1
   i32.add
   local.get $4
   i32.store8
   local.get $5
   i32.const 2
   i32.add
   local.get $4
   i32.store8
   local.get $5
   local.get $3
   i32.add
   i32.const 2
   i32.sub
   local.get $4
   i32.store8
   local.get $5
   local.get $3
   i32.add
   i32.const 3
   i32.sub
   local.get $4
   i32.store8
   local.get $3
   i32.const 6
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   i32.const 3
   i32.add
   local.get $4
   i32.store8
   local.get $5
   local.get $3
   i32.add
   i32.const 4
   i32.sub
   local.get $4
   i32.store8
   local.get $3
   i32.const 8
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   i32.const 0
   local.get $5
   i32.sub
   i32.const 3
   i32.and
   local.set $6
   local.get $5
   local.get $6
   i32.add
   local.set $5
   local.get $3
   local.get $6
   i32.sub
   local.set $3
   local.get $3
   i32.const -4
   i32.and
   local.set $3
   i32.const -1
   i32.const 255
   i32.div_u
   local.get $4
   i32.const 255
   i32.and
   i32.mul
   local.set $7
   local.get $5
   local.get $7
   i32.store
   local.get $5
   local.get $3
   i32.add
   i32.const 4
   i32.sub
   local.get $7
   i32.store
   local.get $3
   i32.const 8
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   i32.const 4
   i32.add
   local.get $7
   i32.store
   local.get $5
   i32.const 8
   i32.add
   local.get $7
   i32.store
   local.get $5
   local.get $3
   i32.add
   i32.const 12
   i32.sub
   local.get $7
   i32.store
   local.get $5
   local.get $3
   i32.add
   i32.const 8
   i32.sub
   local.get $7
   i32.store
   local.get $3
   i32.const 24
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   i32.const 12
   i32.add
   local.get $7
   i32.store
   local.get $5
   i32.const 16
   i32.add
   local.get $7
   i32.store
   local.get $5
   i32.const 20
   i32.add
   local.get $7
   i32.store
   local.get $5
   i32.const 24
   i32.add
   local.get $7
   i32.store
   local.get $5
   local.get $3
   i32.add
   i32.const 28
   i32.sub
   local.get $7
   i32.store
   local.get $5
   local.get $3
   i32.add
   i32.const 24
   i32.sub
   local.get $7
   i32.store
   local.get $5
   local.get $3
   i32.add
   i32.const 20
   i32.sub
   local.get $7
   i32.store
   local.get $5
   local.get $3
   i32.add
   i32.const 16
   i32.sub
   local.get $7
   i32.store
   i32.const 24
   local.get $5
   i32.const 4
   i32.and
   i32.add
   local.set $6
   local.get $5
   local.get $6
   i32.add
   local.set $5
   local.get $3
   local.get $6
   i32.sub
   local.set $3
   local.get $7
   i64.extend_i32_u
   local.get $7
   i64.extend_i32_u
   i64.const 32
   i64.shl
   i64.or
   local.set $8
   block $break|0
    loop $continue|0
     local.get $3
     i32.const 32
     i32.ge_u
     i32.eqz
     br_if $break|0
     local.get $5
     local.get $8
     i64.store
     local.get $5
     i32.const 8
     i32.add
     local.get $8
     i64.store
     local.get $5
     i32.const 16
     i32.add
     local.get $8
     i64.store
     local.get $5
     i32.const 24
     i32.add
     local.get $8
     i64.store
     local.get $3
     i32.const 32
     i32.sub
     local.set $3
     local.get $5
     i32.const 32
     i32.add
     local.set $5
     br $continue|0
    end
    unreachable
   end
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (; 68 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  i32.const 1073741808
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   i32.const 656
   i32.const 704
   i32.const 23
   i32.const 56
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $2
  i32.shl
  local.tee $1
  i32.const 0
  call $~lib/rt/stub/__alloc
  local.set $3
  local.get $3
  i32.const 0
  local.get $1
  call $~lib/memory/memory.fill
  local.get $0
  i32.eqz
  if
   i32.const 12
   i32.const 2
   call $~lib/rt/stub/__alloc
   local.set $6
   local.get $6
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  local.tee $4
  local.get $3
  local.tee $5
  local.get $4
  i32.load
  local.tee $4
  i32.ne
  if
   local.get $5
   local.set $7
   local.get $7
   drop
   local.get $4
   local.set $8
   nop
  end
  local.get $5
  i32.store
  local.get $0
  local.get $3
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
 )
 (func $~lib/typedarray/Uint8Array#constructor (; 69 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 12
   i32.const 6
   call $~lib/rt/stub/__alloc
   local.set $2
   local.get $2
  end
  local.get $1
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $0
  local.get $0
 )
 (func $~lib/typedarray/Uint8Array#__set (; 70 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.ge_u
  if
   i32.const 760
   i32.const 816
   i32.const 159
   i32.const 44
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.add
  local.get $2
  i32.store8
 )
 (func $assembly/__tests__/util/_testBytes (; 71 ;) (type $FUNCSIG$i) (result i32)
  (local $0 i32)
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint8Array#__set
  local.get $0
  i32.const 1
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $0
  i32.const 2
  i32.const 90
  call $~lib/typedarray/Uint8Array#__set
  local.get $0
  i32.const 3
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $0
 )
 (func $~lib/string/String#get:length (; 72 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.const 16
  i32.sub
  i32.load offset=12
  i32.const 1
  i32.shr_u
 )
 (func $~lib/string/String#charAt (; 73 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.get $0
  call $~lib/string/String#get:length
  i32.ge_u
  if
   i32.const 1008
   local.set $3
   local.get $3
   return
  end
  i32.const 2
  i32.const 1
  call $~lib/rt/stub/__alloc
  local.set $2
  local.get $2
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
  i32.store16
  local.get $2
  local.set $4
  local.get $4
 )
 (func $~lib/typedarray/Uint8Array#__get (; 74 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.ge_u
  if
   i32.const 760
   i32.const 816
   i32.const 148
   i32.const 44
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.add
  i32.load8_u
 )
 (func $~lib/util/memory/memcpy (; 75 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  block $break|0
   loop $continue|0
    local.get $2
    if (result i32)
     local.get $1
     i32.const 3
     i32.and
    else
     i32.const 0
    end
    i32.eqz
    br_if $break|0
    local.get $0
    local.tee $5
    i32.const 1
    i32.add
    local.set $0
    local.get $5
    local.get $1
    local.tee $5
    i32.const 1
    i32.add
    local.set $1
    local.get $5
    i32.load8_u
    i32.store8
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $continue|0
   end
   unreachable
  end
  local.get $0
  i32.const 3
  i32.and
  i32.const 0
  i32.eq
  if
   block $break|1
    loop $continue|1
     local.get $2
     i32.const 16
     i32.ge_u
     i32.eqz
     br_if $break|1
     local.get $0
     local.get $1
     i32.load
     i32.store
     local.get $0
     i32.const 4
     i32.add
     local.get $1
     i32.const 4
     i32.add
     i32.load
     i32.store
     local.get $0
     i32.const 8
     i32.add
     local.get $1
     i32.const 8
     i32.add
     i32.load
     i32.store
     local.get $0
     i32.const 12
     i32.add
     local.get $1
     i32.const 12
     i32.add
     i32.load
     i32.store
     local.get $1
     i32.const 16
     i32.add
     local.set $1
     local.get $0
     i32.const 16
     i32.add
     local.set $0
     local.get $2
     i32.const 16
     i32.sub
     local.set $2
     br $continue|1
    end
    unreachable
   end
   local.get $2
   i32.const 8
   i32.and
   if
    local.get $0
    local.get $1
    i32.load
    i32.store
    local.get $0
    i32.const 4
    i32.add
    local.get $1
    i32.const 4
    i32.add
    i32.load
    i32.store
    local.get $0
    i32.const 8
    i32.add
    local.set $0
    local.get $1
    i32.const 8
    i32.add
    local.set $1
   end
   local.get $2
   i32.const 4
   i32.and
   if
    local.get $0
    local.get $1
    i32.load
    i32.store
    local.get $0
    i32.const 4
    i32.add
    local.set $0
    local.get $1
    i32.const 4
    i32.add
    local.set $1
   end
   local.get $2
   i32.const 2
   i32.and
   if
    local.get $0
    local.get $1
    i32.load16_u
    i32.store16
    local.get $0
    i32.const 2
    i32.add
    local.set $0
    local.get $1
    i32.const 2
    i32.add
    local.set $1
   end
   local.get $2
   i32.const 1
   i32.and
   if
    local.get $0
    local.tee $5
    i32.const 1
    i32.add
    local.set $0
    local.get $5
    local.get $1
    local.tee $5
    i32.const 1
    i32.add
    local.set $1
    local.get $5
    i32.load8_u
    i32.store8
   end
   return
  end
  local.get $2
  i32.const 32
  i32.ge_u
  if
   block $break|2
    block $case2|2
     block $case1|2
      block $case0|2
       local.get $0
       i32.const 3
       i32.and
       local.set $5
       local.get $5
       i32.const 1
       i32.eq
       br_if $case0|2
       local.get $5
       i32.const 2
       i32.eq
       br_if $case1|2
       local.get $5
       i32.const 3
       i32.eq
       br_if $case2|2
       br $break|2
      end
      local.get $1
      i32.load
      local.set $3
      local.get $0
      local.tee $5
      i32.const 1
      i32.add
      local.set $0
      local.get $5
      local.get $1
      local.tee $5
      i32.const 1
      i32.add
      local.set $1
      local.get $5
      i32.load8_u
      i32.store8
      local.get $0
      local.tee $5
      i32.const 1
      i32.add
      local.set $0
      local.get $5
      local.get $1
      local.tee $5
      i32.const 1
      i32.add
      local.set $1
      local.get $5
      i32.load8_u
      i32.store8
      local.get $0
      local.tee $5
      i32.const 1
      i32.add
      local.set $0
      local.get $5
      local.get $1
      local.tee $5
      i32.const 1
      i32.add
      local.set $1
      local.get $5
      i32.load8_u
      i32.store8
      local.get $2
      i32.const 3
      i32.sub
      local.set $2
      block $break|3
       loop $continue|3
        local.get $2
        i32.const 17
        i32.ge_u
        i32.eqz
        br_if $break|3
        local.get $1
        i32.const 1
        i32.add
        i32.load
        local.set $4
        local.get $0
        local.get $3
        i32.const 24
        i32.shr_u
        local.get $4
        i32.const 8
        i32.shl
        i32.or
        i32.store
        local.get $1
        i32.const 5
        i32.add
        i32.load
        local.set $3
        local.get $0
        i32.const 4
        i32.add
        local.get $4
        i32.const 24
        i32.shr_u
        local.get $3
        i32.const 8
        i32.shl
        i32.or
        i32.store
        local.get $1
        i32.const 9
        i32.add
        i32.load
        local.set $4
        local.get $0
        i32.const 8
        i32.add
        local.get $3
        i32.const 24
        i32.shr_u
        local.get $4
        i32.const 8
        i32.shl
        i32.or
        i32.store
        local.get $1
        i32.const 13
        i32.add
        i32.load
        local.set $3
        local.get $0
        i32.const 12
        i32.add
        local.get $4
        i32.const 24
        i32.shr_u
        local.get $3
        i32.const 8
        i32.shl
        i32.or
        i32.store
        local.get $1
        i32.const 16
        i32.add
        local.set $1
        local.get $0
        i32.const 16
        i32.add
        local.set $0
        local.get $2
        i32.const 16
        i32.sub
        local.set $2
        br $continue|3
       end
       unreachable
      end
      br $break|2
     end
     local.get $1
     i32.load
     local.set $3
     local.get $0
     local.tee $5
     i32.const 1
     i32.add
     local.set $0
     local.get $5
     local.get $1
     local.tee $5
     i32.const 1
     i32.add
     local.set $1
     local.get $5
     i32.load8_u
     i32.store8
     local.get $0
     local.tee $5
     i32.const 1
     i32.add
     local.set $0
     local.get $5
     local.get $1
     local.tee $5
     i32.const 1
     i32.add
     local.set $1
     local.get $5
     i32.load8_u
     i32.store8
     local.get $2
     i32.const 2
     i32.sub
     local.set $2
     block $break|4
      loop $continue|4
       local.get $2
       i32.const 18
       i32.ge_u
       i32.eqz
       br_if $break|4
       local.get $1
       i32.const 2
       i32.add
       i32.load
       local.set $4
       local.get $0
       local.get $3
       i32.const 16
       i32.shr_u
       local.get $4
       i32.const 16
       i32.shl
       i32.or
       i32.store
       local.get $1
       i32.const 6
       i32.add
       i32.load
       local.set $3
       local.get $0
       i32.const 4
       i32.add
       local.get $4
       i32.const 16
       i32.shr_u
       local.get $3
       i32.const 16
       i32.shl
       i32.or
       i32.store
       local.get $1
       i32.const 10
       i32.add
       i32.load
       local.set $4
       local.get $0
       i32.const 8
       i32.add
       local.get $3
       i32.const 16
       i32.shr_u
       local.get $4
       i32.const 16
       i32.shl
       i32.or
       i32.store
       local.get $1
       i32.const 14
       i32.add
       i32.load
       local.set $3
       local.get $0
       i32.const 12
       i32.add
       local.get $4
       i32.const 16
       i32.shr_u
       local.get $3
       i32.const 16
       i32.shl
       i32.or
       i32.store
       local.get $1
       i32.const 16
       i32.add
       local.set $1
       local.get $0
       i32.const 16
       i32.add
       local.set $0
       local.get $2
       i32.const 16
       i32.sub
       local.set $2
       br $continue|4
      end
      unreachable
     end
     br $break|2
    end
    local.get $1
    i32.load
    local.set $3
    local.get $0
    local.tee $5
    i32.const 1
    i32.add
    local.set $0
    local.get $5
    local.get $1
    local.tee $5
    i32.const 1
    i32.add
    local.set $1
    local.get $5
    i32.load8_u
    i32.store8
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    block $break|5
     loop $continue|5
      local.get $2
      i32.const 19
      i32.ge_u
      i32.eqz
      br_if $break|5
      local.get $1
      i32.const 3
      i32.add
      i32.load
      local.set $4
      local.get $0
      local.get $3
      i32.const 8
      i32.shr_u
      local.get $4
      i32.const 24
      i32.shl
      i32.or
      i32.store
      local.get $1
      i32.const 7
      i32.add
      i32.load
      local.set $3
      local.get $0
      i32.const 4
      i32.add
      local.get $4
      i32.const 8
      i32.shr_u
      local.get $3
      i32.const 24
      i32.shl
      i32.or
      i32.store
      local.get $1
      i32.const 11
      i32.add
      i32.load
      local.set $4
      local.get $0
      i32.const 8
      i32.add
      local.get $3
      i32.const 8
      i32.shr_u
      local.get $4
      i32.const 24
      i32.shl
      i32.or
      i32.store
      local.get $1
      i32.const 15
      i32.add
      i32.load
      local.set $3
      local.get $0
      i32.const 12
      i32.add
      local.get $4
      i32.const 8
      i32.shr_u
      local.get $3
      i32.const 24
      i32.shl
      i32.or
      i32.store
      local.get $1
      i32.const 16
      i32.add
      local.set $1
      local.get $0
      i32.const 16
      i32.add
      local.set $0
      local.get $2
      i32.const 16
      i32.sub
      local.set $2
      br $continue|5
     end
     unreachable
    end
    br $break|2
   end
  end
  local.get $2
  i32.const 16
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
  local.get $2
  i32.const 8
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
  local.get $2
  i32.const 4
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
  local.get $2
  i32.const 2
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
  local.get $2
  i32.const 1
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
 )
 (func $~lib/memory/memory.copy (; 76 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  block $~lib/util/memory/memmove|inlined.0
   local.get $0
   local.set $5
   local.get $1
   local.set $4
   local.get $2
   local.set $3
   local.get $5
   local.get $4
   i32.eq
   if
    br $~lib/util/memory/memmove|inlined.0
   end
   local.get $4
   local.get $3
   i32.add
   local.get $5
   i32.le_u
   if (result i32)
    i32.const 1
   else
    local.get $5
    local.get $3
    i32.add
    local.get $4
    i32.le_u
   end
   if
    local.get $5
    local.get $4
    local.get $3
    call $~lib/util/memory/memcpy
    br $~lib/util/memory/memmove|inlined.0
   end
   local.get $5
   local.get $4
   i32.lt_u
   if
    local.get $4
    i32.const 7
    i32.and
    local.get $5
    i32.const 7
    i32.and
    i32.eq
    if
     block $break|0
      loop $continue|0
       local.get $5
       i32.const 7
       i32.and
       i32.eqz
       br_if $break|0
       local.get $3
       i32.eqz
       if
        br $~lib/util/memory/memmove|inlined.0
       end
       local.get $3
       i32.const 1
       i32.sub
       local.set $3
       local.get $5
       local.tee $6
       i32.const 1
       i32.add
       local.set $5
       local.get $6
       local.get $4
       local.tee $6
       i32.const 1
       i32.add
       local.set $4
       local.get $6
       i32.load8_u
       i32.store8
       br $continue|0
      end
      unreachable
     end
     block $break|1
      loop $continue|1
       local.get $3
       i32.const 8
       i32.ge_u
       i32.eqz
       br_if $break|1
       local.get $5
       local.get $4
       i64.load
       i64.store
       local.get $3
       i32.const 8
       i32.sub
       local.set $3
       local.get $5
       i32.const 8
       i32.add
       local.set $5
       local.get $4
       i32.const 8
       i32.add
       local.set $4
       br $continue|1
      end
      unreachable
     end
    end
    block $break|2
     loop $continue|2
      local.get $3
      i32.eqz
      br_if $break|2
      local.get $5
      local.tee $6
      i32.const 1
      i32.add
      local.set $5
      local.get $6
      local.get $4
      local.tee $6
      i32.const 1
      i32.add
      local.set $4
      local.get $6
      i32.load8_u
      i32.store8
      local.get $3
      i32.const 1
      i32.sub
      local.set $3
      br $continue|2
     end
     unreachable
    end
   else
    local.get $4
    i32.const 7
    i32.and
    local.get $5
    i32.const 7
    i32.and
    i32.eq
    if
     block $break|3
      loop $continue|3
       local.get $5
       local.get $3
       i32.add
       i32.const 7
       i32.and
       i32.eqz
       br_if $break|3
       local.get $3
       i32.eqz
       if
        br $~lib/util/memory/memmove|inlined.0
       end
       local.get $5
       local.get $3
       i32.const 1
       i32.sub
       local.tee $3
       i32.add
       local.get $4
       local.get $3
       i32.add
       i32.load8_u
       i32.store8
       br $continue|3
      end
      unreachable
     end
     block $break|4
      loop $continue|4
       local.get $3
       i32.const 8
       i32.ge_u
       i32.eqz
       br_if $break|4
       local.get $3
       i32.const 8
       i32.sub
       local.set $3
       local.get $5
       local.get $3
       i32.add
       local.get $4
       local.get $3
       i32.add
       i64.load
       i64.store
       br $continue|4
      end
      unreachable
     end
    end
    block $break|5
     loop $continue|5
      local.get $3
      i32.eqz
      br_if $break|5
      local.get $5
      local.get $3
      i32.const 1
      i32.sub
      local.tee $3
      i32.add
      local.get $4
      local.get $3
      i32.add
      i32.load8_u
      i32.store8
      br $continue|5
     end
     unreachable
    end
   end
  end
 )
 (func $~lib/memory/memory.repeat (; 77 ;) (type $FUNCSIG$viiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 0
  local.set $4
  local.get $2
  local.get $3
  i32.mul
  local.set $5
  block $break|0
   loop $continue|0
    local.get $4
    local.get $5
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $0
    local.get $4
    i32.add
    local.get $1
    local.get $2
    call $~lib/memory/memory.copy
    local.get $4
    local.get $2
    i32.add
    local.set $4
    br $continue|0
   end
   unreachable
  end
 )
 (func $~lib/string/String#repeat (; 78 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  call $~lib/string/String#get:length
  local.set $2
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $2
   i64.extend_i32_s
   local.get $1
   i64.extend_i32_s
   i64.mul
   i64.const 268435456
   i64.gt_u
  end
  if
   i32.const 656
   i32.const 1152
   i32.const 299
   i32.const 6
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $2
   i32.eqz
  end
  if
   i32.const 1008
   local.set $4
   local.get $4
   return
  end
  local.get $1
  i32.const 1
  i32.eq
  if
   local.get $0
   local.set $5
   local.get $5
   return
  end
  local.get $2
  local.get $1
  i32.mul
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/stub/__alloc
  local.set $3
  local.get $3
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  local.get $1
  call $~lib/memory/memory.repeat
  local.get $3
  local.set $6
  local.get $6
 )
 (func $~lib/string/String#concat (; 79 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  local.get $1
  local.set $8
  local.get $8
  drop
  local.get $1
  i32.const 0
  i32.eq
  if
   i32.const 1200
   local.tee $2
   local.get $1
   local.tee $3
   i32.ne
   if
    local.get $2
    local.set $9
    local.get $9
    drop
    local.get $3
    local.set $10
    nop
   end
   local.get $2
   local.set $1
  end
  local.get $0
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $4
  local.get $1
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $5
  local.get $4
  local.get $5
  i32.add
  local.set $6
  local.get $6
  i32.const 0
  i32.eq
  if
   i32.const 1008
   local.set $11
   local.get $11
   local.set $2
   local.get $1
   local.set $12
   nop
   local.get $2
   return
  end
  local.get $6
  i32.const 1
  call $~lib/rt/stub/__alloc
  local.set $13
  local.get $13
  local.set $7
  local.get $7
  local.get $0
  local.get $4
  call $~lib/memory/memory.copy
  local.get $7
  local.get $4
  i32.add
  local.get $1
  local.get $5
  call $~lib/memory/memory.copy
  local.get $7
  local.set $2
  local.get $1
  local.set $14
  nop
  local.get $2
 )
 (func $~lib/string/String.__concat (; 80 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $3
  local.get $3
  drop
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  i32.const 1200
  local.get $0
  i32.const 0
  i32.ne
  select
  local.get $1
  call $~lib/string/String#concat
  local.set $2
  local.get $0
  local.set $5
  nop
  local.get $1
  local.set $6
  nop
  local.get $2
 )
 (func $~lib/near-runtime-ts/base58/base58.encode (; 81 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  local.get $0
  local.set $15
  local.get $15
  drop
  i32.const 872
  call $~lib/string/String#get:length
  local.set $1
  i32.const 872
  i32.const 0
  call $~lib/string/String#charAt
  local.set $2
  i32.const 0
  local.set $3
  i32.const 0
  local.set $4
  i32.const 0
  local.set $5
  local.get $0
  local.set $16
  local.get $16
  i32.load offset=8
  local.set $6
  block $break|0
   loop $continue|0
    local.get $5
    local.get $6
    i32.ne
    if (result i32)
     local.get $0
     local.get $5
     call $~lib/typedarray/Uint8Array#__get
     i32.const 0
     i32.eq
    else
     i32.const 0
    end
    i32.eqz
    br_if $break|0
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $continue|0
   end
   unreachable
  end
  local.get $6
  local.get $5
  i32.sub
  i32.const 2
  i32.mul
  i32.const 1
  i32.add
  i32.const 0
  i32.shr_u
  local.set $7
  i32.const 0
  local.get $7
  call $~lib/typedarray/Uint8Array#constructor
  local.set $8
  block $break|1
   loop $continue|1
    local.get $5
    local.get $6
    i32.ne
    i32.eqz
    br_if $break|1
    local.get $0
    local.get $5
    call $~lib/typedarray/Uint8Array#__get
    local.set $9
    i32.const 0
    local.set $10
    block $break|2
     local.get $7
     i32.const 1
     i32.sub
     local.set $11
     loop $loop|2
      local.get $9
      i32.const 0
      i32.ne
      if (result i32)
       i32.const 1
      else
       local.get $10
       local.get $4
       i32.lt_s
      end
      if (result i32)
       local.get $11
       i32.const -1
       i32.ne
      else
       i32.const 0
      end
      i32.eqz
      br_if $break|2
      local.get $9
      i32.const 256
      local.get $8
      local.get $11
      call $~lib/typedarray/Uint8Array#__get
      i32.mul
      i32.const 0
      i32.shr_u
      i32.add
      local.set $9
      local.get $8
      local.get $11
      local.get $9
      local.get $1
      i32.rem_s
      i32.const 0
      i32.shr_u
      call $~lib/typedarray/Uint8Array#__set
      local.get $9
      local.get $1
      i32.div_s
      i32.const 0
      i32.shr_u
      local.set $9
      local.get $11
      i32.const 1
      i32.sub
      local.set $11
      local.get $10
      i32.const 1
      i32.add
      local.set $10
      br $loop|2
     end
     unreachable
    end
    local.get $9
    i32.const 0
    i32.eq
    i32.eqz
    if
     i32.const 1024
     i32.const 1072
     i32.const 42
     i32.const 6
     call $~lib/builtins/abort
     unreachable
    end
    local.get $10
    local.set $4
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $continue|1
   end
   unreachable
  end
  local.get $7
  local.get $4
  i32.sub
  local.set $10
  block $break|3
   loop $continue|3
    local.get $10
    local.get $7
    i32.ne
    if (result i32)
     local.get $8
     local.get $10
     call $~lib/typedarray/Uint8Array#__get
     i32.const 0
     i32.eq
    else
     i32.const 0
    end
    i32.eqz
    br_if $break|3
    local.get $10
    i32.const 1
    i32.add
    local.set $10
    br $continue|3
   end
   unreachable
  end
  local.get $2
  local.get $3
  call $~lib/string/String#repeat
  local.set $9
  block $break|4
   loop $loop|4
    local.get $10
    local.get $7
    i32.lt_s
    i32.eqz
    br_if $break|4
    local.get $9
    i32.const 872
    local.get $8
    local.get $10
    call $~lib/typedarray/Uint8Array#__get
    call $~lib/string/String#charAt
    local.tee $11
    call $~lib/string/String.__concat
    local.tee $12
    local.tee $13
    local.get $9
    local.tee $14
    i32.ne
    if
     local.get $13
     local.set $17
     local.get $17
     drop
     local.get $14
     local.set $18
     nop
    end
    local.get $13
    local.set $9
    local.get $11
    local.set $19
    nop
    local.get $12
    local.set $20
    nop
    local.get $10
    i32.const 1
    i32.add
    local.set $10
    br $loop|4
   end
   unreachable
  end
  local.get $9
  local.set $12
  local.get $2
  local.set $21
  nop
  local.get $8
  local.set $22
  nop
  local.get $0
  local.set $23
  nop
  local.get $12
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#constructor (; 82 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 7
   call $~lib/rt/stub/__alloc
   local.set $5
   local.get $5
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $2
  local.get $1
  local.tee $3
  local.get $2
  i32.load offset=4
  local.tee $2
  i32.ne
  if
   local.get $3
   local.set $6
   local.get $6
   drop
   local.get $2
   local.set $7
   nop
  end
  local.get $3
  i32.store offset=4
  local.get $1
  local.set $8
  nop
  local.get $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String> (; 83 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  i32.const 0
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#constructor
  local.set $1
  local.get $0
  local.set $3
  nop
  local.get $1
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.report<~lib/string/String> (; 84 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
  local.get $0
  local.set $1
  local.get $1
  local.set $3
  local.get $3
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.isManaged
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference
   local.set $4
   nop
  end
  local.get $1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference
  i32.const 1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.isManaged
  i32.const 5
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.type
  local.get $0
  local.set $5
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<~lib/string/String> (; 85 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  local.set $3
  local.get $3
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.ready
  i32.eqz
  if
   call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportInvalidExpectCall
   local.get $0
   local.set $4
   nop
   return
  end
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
  local.get $1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
  local.get $0
  local.set $2
  local.get $2
  local.set $5
  local.get $5
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.isManaged
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
   local.set $6
   nop
  end
  local.get $2
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
  i32.const 1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.isManaged
  i32.const 5
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.type
  local.get $0
  local.set $7
  nop
 )
 (func $~lib/util/string/compareImpl (; 86 ;) (type $FUNCSIG$iiiiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  local.get $0
  local.set $10
  local.get $10
  drop
  local.get $2
  local.set $11
  local.get $11
  drop
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  local.set $5
  local.get $2
  local.get $3
  i32.const 1
  i32.shl
  i32.add
  local.set $6
  local.get $4
  i32.const 4
  i32.ge_u
  if (result i32)
   local.get $5
   i32.const 7
   i32.and
   local.get $6
   i32.const 7
   i32.and
   i32.or
   i32.eqz
  else
   i32.const 0
  end
  if
   block $break|0
    loop $continue|0
     local.get $5
     i64.load
     local.get $6
     i64.load
     i64.ne
     if
      br $break|0
     end
     local.get $5
     i32.const 8
     i32.add
     local.set $5
     local.get $6
     i32.const 8
     i32.add
     local.set $6
     local.get $4
     i32.const 4
     i32.sub
     local.set $4
     local.get $4
     i32.const 4
     i32.ge_u
     br_if $continue|0
    end
   end
  end
  block $break|1
   loop $continue|1
    local.get $4
    local.tee $7
    i32.const 1
    i32.sub
    local.set $4
    local.get $7
    i32.eqz
    br_if $break|1
    local.get $5
    i32.load16_u
    local.set $7
    local.get $6
    i32.load16_u
    local.set $8
    local.get $7
    local.get $8
    i32.ne
    if
     local.get $7
     local.get $8
     i32.sub
     local.set $9
     local.get $0
     local.set $12
     nop
     local.get $2
     local.set $13
     nop
     local.get $9
     return
    end
    local.get $5
    i32.const 2
    i32.add
    local.set $5
    local.get $6
    i32.const 2
    i32.add
    local.set $6
    br $continue|1
   end
   unreachable
  end
  i32.const 0
  local.set $8
  local.get $0
  local.set $14
  nop
  local.get $2
  local.set $15
  nop
  local.get $8
 )
 (func $~lib/string/String.__eq (; 87 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  local.get $0
  local.set $4
  local.get $4
  drop
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  local.get $1
  i32.eq
  if
   i32.const 1
   local.set $2
   local.get $0
   local.set $6
   nop
   local.get $1
   local.set $7
   nop
   local.get $2
   return
  end
  local.get $0
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 0
   i32.eq
  end
  if
   i32.const 0
   local.set $2
   local.get $0
   local.set $8
   nop
   local.get $1
   local.set $9
   nop
   local.get $2
   return
  end
  local.get $0
  call $~lib/string/String#get:length
  local.set $3
  local.get $3
  local.get $1
  call $~lib/string/String#get:length
  i32.ne
  if
   i32.const 0
   local.set $2
   local.get $0
   local.set $10
   nop
   local.get $1
   local.set $11
   nop
   local.get $2
   return
  end
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  local.get $3
  call $~lib/util/string/compareImpl
  i32.eqz
  local.set $2
  local.get $0
  local.set $12
  nop
  local.get $1
  local.set $13
  nop
  local.get $2
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/comparison/assert/assert (; 88 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.set $2
  local.get $2
  drop
  local.get $0
  i32.eqz
  if
   local.get $1
   local.set $3
   nop
   local.get $1
   i32.const 1344
   i32.const 9
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.set $4
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<~lib/string/String> (; 89 ;) (type $FUNCSIG$viiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  local.set $4
  local.get $4
  drop
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $3
  local.set $6
  local.get $6
  drop
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.report<~lib/string/String>
  local.get $1
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<~lib/string/String>
  local.get $2
  local.get $1
  local.get $0
  call $~lib/string/String.__eq
  i32.xor
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/assert/assert
  local.get $0
  local.set $7
  nop
  local.get $1
  local.set $8
  nop
  local.get $3
  local.set $9
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.clear (; 90 ;) (type $FUNCSIG$v)
  (local $0 i32)
  i32.const 0
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.type
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference
  i32.const 0
  i32.gt_u
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.isManaged
   if
    global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference
    local.set $0
    nop
   end
   i32.const 0
   global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference
   i32.const 0
   global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.isManaged
  end
  i32.const -1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.clear (; 91 ;) (type $FUNCSIG$v)
  (local $0 i32)
  i32.const 0
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.type
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
  i32.const 0
  i32.eq
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.isManaged
   if
    global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
    local.set $0
    nop
   end
   i32.const 0
   global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
   i32.const 0
   global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.isManaged
  end
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe (; 92 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $2
  local.set $4
  local.get $4
  drop
  local.get $0
  i32.load offset=4
  local.get $1
  local.get $0
  i32.load
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<~lib/string/String>
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.clear
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.clear
  local.get $1
  local.set $5
  nop
  local.get $2
  local.set $6
  nop
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|0~anonymous|0 (; 93 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  call $assembly/__tests__/util/_testBytes
  local.set $0
  local.get $0
  call $~lib/near-runtime-ts/base58/base58.encode
  local.set $1
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $2
  i32.const 1224
  i32.const 1248
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  local.set $3
  nop
  local.get $1
  local.set $4
  nop
  local.get $2
  local.set $5
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Test/it (; 94 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  local.get $0
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Test/reportTest
  local.get $0
  local.set $3
  nop
 )
 (func $~lib/array/Array<~lib/string/String>#constructor (; 95 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 16
   i32.const 8
   call $~lib/rt/stub/__alloc
   local.set $2
   local.get $2
  end
  local.get $1
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
  local.get $1
  i32.store offset=12
  local.get $0
 )
 (func $~lib/rt/stub/__realloc (; 96 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.const 0
  i32.ne
  if (result i32)
   local.get $0
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 1608
   i32.const 43
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 16
  i32.sub
  local.set $2
  local.get $2
  i32.load
  local.set $3
  local.get $2
  i32.load offset=4
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 1608
   i32.const 46
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $3
  i32.add
  global.get $~lib/rt/stub/offset
  i32.eq
  local.set $4
  local.get $1
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $5
  local.get $1
  local.get $3
  i32.gt_u
  if
   local.get $4
   if
    local.get $1
    i32.const 1073741808
    i32.gt_u
    if
     unreachable
    end
    local.get $0
    local.get $5
    i32.add
    call $~lib/rt/stub/maybeGrowMemory
    local.get $2
    local.get $5
    i32.store
   else
    local.get $5
    local.tee $6
    local.get $3
    i32.const 1
    i32.shl
    local.tee $7
    local.get $6
    local.get $7
    i32.gt_u
    select
    local.get $2
    i32.load offset=8
    call $~lib/rt/stub/__alloc
    local.set $6
    local.get $6
    local.get $0
    local.get $2
    i32.load offset=12
    call $~lib/memory/memory.copy
    local.get $6
    local.tee $0
    i32.const 16
    i32.sub
    local.set $2
   end
  else
   local.get $4
   if
    local.get $0
    local.get $5
    i32.add
    global.set $~lib/rt/stub/offset
    local.get $2
    local.get $5
    i32.store
   end
  end
  local.get $2
  local.get $1
  i32.store offset=12
  local.get $0
 )
 (func $~lib/array/ensureSize (; 97 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load offset=8
  local.set $3
  local.get $1
  local.get $3
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 1073741808
   local.get $2
   i32.shr_u
   i32.gt_u
   if
    i32.const 656
    i32.const 1560
    i32.const 14
    i32.const 47
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load
   local.set $4
   local.get $1
   local.get $2
   i32.shl
   local.set $5
   local.get $4
   local.get $5
   call $~lib/rt/stub/__realloc
   local.set $6
   local.get $6
   local.get $3
   i32.add
   i32.const 0
   local.get $5
   local.get $3
   i32.sub
   call $~lib/memory/memory.fill
   local.get $6
   local.get $4
   i32.ne
   if
    local.get $0
    local.get $6
    local.set $7
    local.get $7
    i32.store
    local.get $0
    local.get $6
    i32.store offset=4
   end
   local.get $0
   local.get $5
   i32.store offset=8
  end
 )
 (func $~lib/array/Array<~lib/string/String>#push (; 98 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 1
  i32.add
  local.set $3
  local.get $0
  local.get $3
  i32.const 2
  call $~lib/array/ensureSize
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  local.set $6
  local.get $6
  i32.store
  local.get $0
  local.get $3
  i32.store offset=12
  local.get $3
  local.set $4
  local.get $1
  local.set $7
  nop
  local.get $4
 )
 (func $~lib/util/string/joinStringArray (; 99 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  local.get $2
  local.set $12
  local.get $12
  drop
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 1008
   local.set $13
   local.get $13
   local.set $4
   local.get $2
   local.set $14
   nop
   local.get $4
   return
  end
  local.get $3
  i32.eqz
  if
   local.get $0
   i32.load
   local.tee $4
   if (result i32)
    local.get $4
   else
    i32.const 1008
   end
   local.set $15
   local.get $15
   local.set $4
   local.get $2
   local.set $16
   nop
   local.get $4
   return
  end
  i32.const 0
  local.set $5
  i32.const 0
  local.set $6
  block $break|0
   i32.const 0
   local.set $4
   loop $loop|0
    local.get $4
    local.get $1
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $0
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $7
    local.get $6
    local.tee $8
    i32.ne
    if
     local.get $7
     local.set $17
     local.get $17
     drop
     local.get $8
     local.set $18
     nop
    end
    local.get $7
    local.set $6
    local.get $6
    i32.const 0
    i32.ne
    if
     local.get $5
     local.get $6
     call $~lib/string/String#get:length
     i32.add
     local.set $5
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $loop|0
   end
   unreachable
  end
  i32.const 0
  local.set $9
  local.get $2
  call $~lib/string/String#get:length
  local.set $10
  local.get $5
  local.get $10
  local.get $3
  i32.mul
  i32.add
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/stub/__alloc
  local.set $11
  block $break|1
   i32.const 0
   local.set $4
   loop $loop|1
    local.get $4
    local.get $3
    i32.lt_s
    i32.eqz
    br_if $break|1
    local.get $0
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $8
    local.get $6
    local.tee $7
    i32.ne
    if
     local.get $8
     local.set $19
     local.get $19
     drop
     local.get $7
     local.set $20
     nop
    end
    local.get $8
    local.set $6
    local.get $6
    i32.const 0
    i32.ne
    if
     local.get $6
     call $~lib/string/String#get:length
     local.set $8
     local.get $11
     local.get $9
     i32.const 1
     i32.shl
     i32.add
     local.get $6
     local.get $8
     i32.const 1
     i32.shl
     call $~lib/memory/memory.copy
     local.get $9
     local.get $8
     i32.add
     local.set $9
    end
    local.get $10
    if
     local.get $11
     local.get $9
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $10
     i32.const 1
     i32.shl
     call $~lib/memory/memory.copy
     local.get $9
     local.get $10
     i32.add
     local.set $9
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $loop|1
   end
   unreachable
  end
  local.get $0
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $7
  local.get $6
  local.tee $4
  i32.ne
  if
   local.get $7
   local.set $21
   local.get $21
   drop
   local.get $4
   local.set $22
   nop
  end
  local.get $7
  local.set $6
  local.get $6
  i32.const 0
  i32.ne
  if
   local.get $11
   local.get $9
   i32.const 1
   i32.shl
   i32.add
   local.get $6
   local.get $6
   call $~lib/string/String#get:length
   i32.const 1
   i32.shl
   call $~lib/memory/memory.copy
  end
  local.get $11
  local.set $23
  local.get $23
  local.set $7
  local.get $2
  local.set $24
  nop
  local.get $6
  local.set $25
  nop
  local.get $7
 )
 (func $~lib/array/Array<~lib/string/String>#join (; 100 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinStringArray
  local.set $4
  local.get $1
  local.set $6
  nop
  local.get $4
  return
 )
 (func $~lib/near-runtime-ts/base64/base64.encode (; 101 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  local.get $0
  local.set $9
  local.get $9
  drop
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $3
  local.get $0
  local.set $10
  local.get $10
  i32.load offset=8
  local.get $0
  local.set $11
  local.get $11
  i32.load offset=8
  i32.const 3
  i32.rem_s
  i32.sub
  local.set $4
  local.get $0
  local.set $12
  local.get $12
  i32.load offset=8
  i32.const 0
  i32.eq
  if
   i32.const 1008
   local.set $13
   local.get $13
   local.set $5
   local.get $0
   local.set $14
   nop
   local.get $3
   local.set $15
   nop
   local.get $5
   return
  end
  block $break|0
   i32.const 0
   local.set $1
   loop $loop|0
    local.get $1
    local.get $4
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $0
    local.get $1
    call $~lib/typedarray/Uint8Array#__get
    i32.const 16
    i32.shl
    local.get $0
    local.get $1
    i32.const 1
    i32.add
    call $~lib/typedarray/Uint8Array#__get
    i32.const 8
    i32.shl
    i32.or
    local.get $0
    local.get $1
    i32.const 2
    i32.add
    call $~lib/typedarray/Uint8Array#__get
    i32.or
    local.set $2
    local.get $3
    global.get $~lib/near-runtime-ts/base64/base64.ALPHA
    local.get $2
    i32.const 18
    i32.shr_u
    call $~lib/string/String#charAt
    local.tee $5
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $3
    global.get $~lib/near-runtime-ts/base64/base64.ALPHA
    local.get $2
    i32.const 12
    i32.shr_u
    i32.const 63
    i32.and
    call $~lib/string/String#charAt
    local.tee $6
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $3
    global.get $~lib/near-runtime-ts/base64/base64.ALPHA
    local.get $2
    i32.const 6
    i32.shr_u
    i32.const 63
    i32.and
    call $~lib/string/String#charAt
    local.tee $7
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $3
    global.get $~lib/near-runtime-ts/base64/base64.ALPHA
    local.get $2
    i32.const 63
    i32.and
    call $~lib/string/String#charAt
    local.tee $8
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $5
    local.set $16
    nop
    local.get $6
    local.set $17
    nop
    local.get $7
    local.set $18
    nop
    local.get $8
    local.set $19
    nop
    local.get $1
    i32.const 3
    i32.add
    local.set $1
    br $loop|0
   end
   unreachable
  end
  block $break|1
   block $case1|1
    block $case0|1
     local.get $0
     local.set $20
     local.get $20
     i32.load offset=8
     local.get $4
     i32.sub
     local.set $8
     local.get $8
     i32.const 1
     i32.eq
     br_if $case0|1
     local.get $8
     i32.const 2
     i32.eq
     br_if $case1|1
     br $break|1
    end
    local.get $0
    local.get $1
    call $~lib/typedarray/Uint8Array#__get
    i32.const 16
    i32.shl
    local.set $2
    local.get $3
    global.get $~lib/near-runtime-ts/base64/base64.ALPHA
    local.get $2
    i32.const 18
    i32.shr_u
    call $~lib/string/String#charAt
    local.tee $8
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $3
    global.get $~lib/near-runtime-ts/base64/base64.ALPHA
    local.get $2
    i32.const 12
    i32.shr_u
    i32.const 63
    i32.and
    call $~lib/string/String#charAt
    local.tee $7
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $3
    global.get $~lib/near-runtime-ts/base64/base64.PADCHAR
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $3
    global.get $~lib/near-runtime-ts/base64/base64.PADCHAR
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $8
    local.set $21
    nop
    local.get $7
    local.set $22
    nop
    br $break|1
   end
   local.get $0
   local.get $1
   call $~lib/typedarray/Uint8Array#__get
   i32.const 16
   i32.shl
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   call $~lib/typedarray/Uint8Array#__get
   i32.const 8
   i32.shl
   i32.or
   local.set $2
   local.get $3
   global.get $~lib/near-runtime-ts/base64/base64.ALPHA
   local.get $2
   i32.const 18
   i32.shr_u
   call $~lib/string/String#charAt
   local.tee $7
   call $~lib/array/Array<~lib/string/String>#push
   drop
   local.get $3
   global.get $~lib/near-runtime-ts/base64/base64.ALPHA
   local.get $2
   i32.const 12
   i32.shr_u
   i32.const 63
   i32.and
   call $~lib/string/String#charAt
   local.tee $8
   call $~lib/array/Array<~lib/string/String>#push
   drop
   local.get $3
   global.get $~lib/near-runtime-ts/base64/base64.ALPHA
   local.get $2
   i32.const 6
   i32.shr_u
   i32.const 63
   i32.and
   call $~lib/string/String#charAt
   local.tee $6
   call $~lib/array/Array<~lib/string/String>#push
   drop
   local.get $3
   global.get $~lib/near-runtime-ts/base64/base64.PADCHAR
   call $~lib/array/Array<~lib/string/String>#push
   drop
   local.get $7
   local.set $23
   nop
   local.get $8
   local.set $24
   nop
   local.get $6
   local.set $25
   nop
   br $break|1
  end
  local.get $3
  i32.const 1008
  call $~lib/array/Array<~lib/string/String>#join
  local.set $6
  local.get $3
  local.set $26
  nop
  local.get $0
  local.set $27
  nop
  local.get $6
 )
 (func $~lib/string/String#indexOf (; 102 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $1
  local.set $8
  local.get $8
  drop
  local.get $1
  call $~lib/string/String#get:length
  local.set $3
  local.get $3
  i32.eqz
  if
   i32.const 0
   local.set $4
   local.get $1
   local.set $9
   nop
   local.get $4
   return
  end
  local.get $0
  call $~lib/string/String#get:length
  local.set $5
  local.get $5
  i32.eqz
  if
   i32.const -1
   local.set $4
   local.get $1
   local.set $10
   nop
   local.get $4
   return
  end
  local.get $2
  local.tee $4
  i32.const 0
  local.tee $6
  local.get $4
  local.get $6
  i32.gt_s
  select
  local.tee $4
  local.get $5
  local.tee $6
  local.get $4
  local.get $6
  i32.lt_s
  select
  local.set $7
  block $break|0
   local.get $5
   local.get $3
   i32.sub
   local.set $5
   loop $loop|0
    local.get $7
    local.get $5
    i32.le_s
    i32.eqz
    br_if $break|0
    local.get $0
    local.get $7
    local.get $1
    i32.const 0
    local.get $3
    call $~lib/util/string/compareImpl
    i32.eqz
    if
     local.get $7
     local.set $4
     local.get $1
     local.set $11
     nop
     local.get $4
     return
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $loop|0
   end
   unreachable
  end
  i32.const -1
  local.set $4
  local.get $1
  local.set $12
  nop
  local.get $4
 )
 (func $~lib/near-runtime-ts/base64/base64.getByte64 (; 103 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $4
  local.get $4
  drop
  global.get $~lib/near-runtime-ts/base64/base64.ALPHA
  local.get $0
  local.get $1
  call $~lib/string/String#charAt
  local.tee $2
  i32.const 0
  call $~lib/string/String#indexOf
  local.set $3
  local.get $2
  local.set $5
  nop
  local.get $0
  local.set $6
  nop
  local.get $3
 )
 (func $~lib/near-runtime-ts/base64/base64.decode (; 104 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  local.get $0
  local.set $12
  local.get $12
  drop
  i32.const 0
  local.set $3
  local.get $0
  call $~lib/string/String#get:length
  local.set $4
  local.get $4
  i32.const 0
  i32.eq
  if
   i32.const 0
   i32.const 0
   call $~lib/typedarray/Uint8Array#constructor
   local.set $5
   local.get $0
   local.set $13
   nop
   local.get $5
   return
  end
  local.get $0
  local.get $4
  i32.const 1
  i32.sub
  call $~lib/string/String#charAt
  local.tee $5
  i32.const 208
  call $~lib/string/String.__eq
  if
   i32.const 1
   local.set $3
   local.get $0
   local.get $4
   i32.const 2
   i32.sub
   call $~lib/string/String#charAt
   local.tee $6
   i32.const 208
   call $~lib/string/String.__eq
   if
    i32.const 2
    local.set $3
   end
   local.get $4
   i32.const 4
   i32.sub
   local.set $4
   local.get $6
   local.set $14
   nop
  end
  local.get $4
  i32.const 4
  i32.rem_u
  i32.const 0
  i32.eq
  if (result i32)
   local.get $4
   i32.const 4
   i32.div_u
   i32.const 3
   i32.mul
  else
   local.get $4
   i32.const 4
   i32.div_u
   i32.const 1
   i32.add
   i32.const 3
   i32.mul
  end
  local.set $6
  local.get $3
  i32.const 0
  i32.gt_s
  if (result i32)
   i32.const 3
   local.get $3
   i32.sub
  else
   i32.const 0
  end
  local.set $7
  local.get $6
  local.get $7
  i32.add
  local.set $8
  i32.const 0
  local.get $8
  call $~lib/typedarray/Uint8Array#constructor
  local.set $9
  i32.const 0
  local.set $10
  block $break|0
   i32.const 0
   local.set $1
   loop $loop|0
    local.get $1
    local.get $4
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $0
    local.get $1
    call $~lib/near-runtime-ts/base64/base64.getByte64
    i32.const 18
    i32.shl
    local.get $0
    local.get $1
    i32.const 1
    i32.add
    call $~lib/near-runtime-ts/base64/base64.getByte64
    i32.const 12
    i32.shl
    i32.or
    local.get $0
    local.get $1
    i32.const 2
    i32.add
    call $~lib/near-runtime-ts/base64/base64.getByte64
    i32.const 6
    i32.shl
    i32.or
    local.get $0
    local.get $1
    i32.const 3
    i32.add
    call $~lib/near-runtime-ts/base64/base64.getByte64
    i32.or
    local.set $2
    local.get $9
    local.get $10
    local.tee $11
    i32.const 1
    i32.add
    local.set $10
    local.get $11
    local.get $2
    i32.const 16
    i32.shr_u
    call $~lib/typedarray/Uint8Array#__set
    local.get $9
    local.get $10
    local.tee $11
    i32.const 1
    i32.add
    local.set $10
    local.get $11
    local.get $2
    i32.const 8
    i32.shr_u
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $9
    local.get $10
    local.tee $11
    i32.const 1
    i32.add
    local.set $10
    local.get $11
    local.get $2
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $1
    i32.const 4
    i32.add
    local.set $1
    br $loop|0
   end
   unreachable
  end
  block $break|1
   block $case1|1
    block $case0|1
     local.get $3
     local.set $11
     local.get $11
     i32.const 1
     i32.eq
     br_if $case0|1
     local.get $11
     i32.const 2
     i32.eq
     br_if $case1|1
     br $break|1
    end
    local.get $0
    local.get $1
    call $~lib/near-runtime-ts/base64/base64.getByte64
    i32.const 18
    i32.shl
    local.get $0
    local.get $1
    i32.const 1
    i32.add
    call $~lib/near-runtime-ts/base64/base64.getByte64
    i32.const 12
    i32.shl
    i32.or
    local.get $0
    local.get $1
    i32.const 2
    i32.add
    call $~lib/near-runtime-ts/base64/base64.getByte64
    i32.const 6
    i32.shl
    i32.or
    local.set $2
    local.get $9
    local.get $10
    local.tee $11
    i32.const 1
    i32.add
    local.set $10
    local.get $11
    local.get $2
    i32.const 16
    i32.shr_u
    call $~lib/typedarray/Uint8Array#__set
    local.get $9
    local.get $10
    local.tee $11
    i32.const 1
    i32.add
    local.set $10
    local.get $11
    local.get $2
    i32.const 8
    i32.shr_u
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    br $break|1
   end
   local.get $0
   local.get $1
   call $~lib/near-runtime-ts/base64/base64.getByte64
   i32.const 18
   i32.shl
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   call $~lib/near-runtime-ts/base64/base64.getByte64
   i32.const 12
   i32.shl
   i32.or
   local.set $2
   local.get $9
   local.get $10
   local.tee $11
   i32.const 1
   i32.add
   local.set $10
   local.get $11
   local.get $2
   i32.const 16
   i32.shr_u
   call $~lib/typedarray/Uint8Array#__set
   br $break|1
  end
  local.get $9
  local.set $11
  local.get $5
  local.set $15
  nop
  local.get $0
  local.set $16
  nop
  local.get $11
 )
 (func $assembly/__tests__/runtime.spec/_arrayEqual (; 105 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  local.get $0
  local.set $4
  local.get $4
  drop
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 0
   i32.eq
  end
  if
   local.get $0
   local.get $1
   i32.eq
   local.set $2
   local.get $0
   local.set $6
   nop
   local.get $1
   local.set $7
   nop
   local.get $2
   return
  end
  local.get $0
  local.set $8
  local.get $8
  i32.load offset=8
  local.get $1
  local.set $9
  local.get $9
  i32.load offset=8
  i32.ne
  if
   i32.const 0
   local.set $2
   local.get $0
   local.set $10
   nop
   local.get $1
   local.set $11
   nop
   local.get $2
   return
  end
  block $break|0
   i32.const 0
   local.set $2
   loop $loop|0
    local.get $2
    local.get $0
    local.set $12
    local.get $12
    i32.load offset=8
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $0
    local.get $2
    call $~lib/typedarray/Uint8Array#__get
    local.get $1
    local.get $2
    call $~lib/typedarray/Uint8Array#__get
    i32.ne
    if
     i32.const 0
     local.set $3
     local.get $0
     local.set $13
     nop
     local.get $1
     local.set $14
     nop
     local.get $3
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $loop|0
   end
   unreachable
  end
  i32.const 1
  local.set $2
  local.get $0
  local.set $15
  nop
  local.get $1
  local.set $16
  nop
  local.get $2
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#constructor (; 106 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  i32.eqz
  if
   i32.const 5
   i32.const 9
   call $~lib/rt/stub/__alloc
   local.set $2
   local.get $2
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store8 offset=4
  local.get $0
  local.get $1
  i32.store8 offset=4
  local.get $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool> (; 107 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  i32.const 0
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#constructor
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<bool> (; 108 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.ready
  i32.eqz
  if
   call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportInvalidExpectCall
   return
  end
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
  local.get $1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
  i32.const 11
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.type
  local.get $0
  i32.const 0
  i32.ne
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.integer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<bool> (; 109 ;) (type $FUNCSIG$viiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $3
  local.set $4
  local.get $4
  drop
  local.get $0
  local.set $5
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
  i32.const 11
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.type
  local.get $5
  i32.const 0
  i32.ne
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.integer
  local.get $1
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<bool>
  local.get $2
  local.get $1
  i32.const 0
  i32.ne
  local.get $0
  i32.const 0
  i32.ne
  i32.eq
  i32.xor
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/assert/assert
  local.get $3
  local.set $6
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe (; 110 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  local.set $3
  local.get $3
  drop
  local.get $0
  i32.load8_u offset=4
  local.get $1
  local.get $0
  i32.load
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<bool>
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.clear
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.clear
  local.get $2
  local.set $4
  nop
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|0~anonymous|1 (; 111 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  call $assembly/__tests__/util/_testBytes
  local.set $0
  local.get $0
  call $~lib/near-runtime-ts/base64/base64.encode
  local.set $1
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $2
  i32.const 1656
  i32.const 1688
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  i32.const 1656
  call $~lib/near-runtime-ts/base64/base64.decode
  local.set $3
  local.get $3
  local.get $0
  call $assembly/__tests__/runtime.spec/_arrayEqual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $4
  i32.const 1
  i32.const 1752
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  local.set $5
  nop
  local.get $1
  local.set $6
  nop
  local.get $2
  local.set $7
  nop
  local.get $3
  local.set $8
  nop
  local.get $4
  local.set $9
  nop
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|0 (; 112 ;) (type $FUNCSIG$v)
  i32.const 600
  i32.const 1
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 1504
  i32.const 2
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
 )
 (func $start:node_modules/@as-pect/assembly/assembly/internal/noOp~anonymous|0 (; 113 ;) (type $FUNCSIG$v)
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Describe/describe (; 114 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Describe/reportDescribe
  i32.const 0
  global.set $~lib/argc
  local.get $1
  call_indirect (type $FUNCSIG$v)
  call $node_modules/@as-pect/assembly/assembly/internal/Describe/reportEndDescribe
  local.get $0
  local.set $3
  nop
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|0 (; 115 ;) (type $FUNCSIG$v)
  call $assembly/index/saveState
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|1 (; 116 ;) (type $FUNCSIG$v)
  call $assembly/index/restoreState
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|2 (; 117 ;) (type $FUNCSIG$v)
  call $assembly/index/saveState
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|3 (; 118 ;) (type $FUNCSIG$v)
  call $assembly/index/restoreState
 )
 (func $~lib/string/String.UTF8.byteLength (; 119 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  local.set $6
  local.get $6
  drop
  local.get $0
  local.set $2
  local.get $2
  local.get $0
  i32.const 16
  i32.sub
  i32.load offset=12
  i32.add
  local.set $3
  local.get $1
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  local.set $4
  block $break|0
   loop $continue|0
    local.get $2
    local.get $3
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $2
    i32.load16_u
    local.set $5
    local.get $5
    i32.const 128
    i32.lt_u
    if
     local.get $1
     if (result i32)
      local.get $5
      i32.eqz
     else
      i32.const 0
     end
     if
      br $break|0
     end
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     local.get $2
     i32.const 2
     i32.add
     local.set $2
    else
     local.get $5
     i32.const 2048
     i32.lt_u
     if
      local.get $4
      i32.const 2
      i32.add
      local.set $4
      local.get $2
      i32.const 2
      i32.add
      local.set $2
     else
      local.get $5
      i32.const 64512
      i32.and
      i32.const 55296
      i32.eq
      if (result i32)
       local.get $2
       i32.const 2
       i32.add
       local.get $3
       i32.lt_u
      else
       i32.const 0
      end
      if
       local.get $2
       i32.load16_u offset=2
       i32.const 64512
       i32.and
       i32.const 56320
       i32.eq
       if
        local.get $2
        i32.const 4
        i32.add
        local.set $2
        local.get $4
        i32.const 4
        i32.add
        local.set $4
        br $continue|0
       end
      end
      local.get $2
      i32.const 2
      i32.add
      local.set $2
      local.get $4
      i32.const 3
      i32.add
      local.set $4
     end
    end
    br $continue|0
   end
   unreachable
  end
  local.get $4
  local.set $5
  local.get $0
  local.set $7
  nop
  local.get $5
 )
 (func $~lib/string/String.UTF8.encode (; 120 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $0
  local.set $8
  local.get $8
  drop
  local.get $0
  local.set $2
  local.get $0
  local.get $0
  i32.const 16
  i32.sub
  i32.load offset=12
  i32.add
  local.set $3
  local.get $0
  local.get $1
  call $~lib/string/String.UTF8.byteLength
  i32.const 0
  call $~lib/rt/stub/__alloc
  local.set $4
  local.get $4
  local.set $5
  block $break|0
   loop $continue|0
    local.get $2
    local.get $3
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $2
    i32.load16_u
    local.set $6
    local.get $6
    i32.const 128
    i32.lt_u
    if
     local.get $1
     if (result i32)
      local.get $6
      i32.eqz
     else
      i32.const 0
     end
     if
      br $break|0
     end
     local.get $5
     local.get $6
     i32.store8
     local.get $5
     i32.const 1
     i32.add
     local.set $5
     local.get $2
     i32.const 2
     i32.add
     local.set $2
    else
     local.get $6
     i32.const 2048
     i32.lt_u
     if
      local.get $5
      local.get $6
      i32.const 6
      i32.shr_u
      i32.const 192
      i32.or
      i32.store8
      local.get $5
      local.get $6
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      i32.store8 offset=1
      local.get $5
      i32.const 2
      i32.add
      local.set $5
      local.get $2
      i32.const 2
      i32.add
      local.set $2
     else
      local.get $6
      i32.const 64512
      i32.and
      i32.const 55296
      i32.eq
      if (result i32)
       local.get $2
       i32.const 2
       i32.add
       local.get $3
       i32.lt_u
      else
       i32.const 0
      end
      if
       local.get $2
       i32.load16_u offset=2
       local.set $7
       local.get $7
       i32.const 64512
       i32.and
       i32.const 56320
       i32.eq
       if
        i32.const 65536
        local.get $6
        i32.const 1023
        i32.and
        i32.const 10
        i32.shl
        i32.add
        local.get $7
        i32.const 1023
        i32.and
        i32.add
        local.set $6
        local.get $5
        local.get $6
        i32.const 18
        i32.shr_u
        i32.const 240
        i32.or
        i32.store8
        local.get $5
        local.get $6
        i32.const 12
        i32.shr_u
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        i32.store8 offset=1
        local.get $5
        local.get $6
        i32.const 6
        i32.shr_u
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        i32.store8 offset=2
        local.get $5
        local.get $6
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        i32.store8 offset=3
        local.get $2
        i32.const 4
        i32.add
        local.set $2
        local.get $5
        i32.const 4
        i32.add
        local.set $5
        br $continue|0
       end
      end
      local.get $5
      local.get $6
      i32.const 12
      i32.shr_u
      i32.const 224
      i32.or
      i32.store8
      local.get $5
      local.get $6
      i32.const 6
      i32.shr_u
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      i32.store8 offset=1
      local.get $5
      local.get $6
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      i32.store8 offset=2
      local.get $2
      i32.const 2
      i32.add
      local.set $2
      local.get $5
      i32.const 3
      i32.add
      local.set $5
     end
    end
    br $continue|0
   end
   unreachable
  end
  local.get $1
  if
   local.get $2
   local.get $3
   i32.le_u
   i32.eqz
   if
    i32.const 0
    i32.const 1152
    i32.const 567
    i32.const 8
    call $~lib/builtins/abort
    unreachable
   end
   local.get $4
   local.get $5
   local.get $4
   i32.sub
   i32.const 1
   i32.add
   call $~lib/rt/stub/__realloc
   local.set $4
   local.get $5
   i32.const 0
   i32.store8
  else
   local.get $2
   local.get $3
   i32.eq
   i32.eqz
   if
    i32.const 0
    i32.const 1152
    i32.const 571
    i32.const 8
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $4
  local.set $9
  local.get $9
  local.set $6
  local.get $0
  local.set $10
  nop
  local.get $6
 )
 (func $~lib/near-runtime-ts/util/util.toUTF8 (; 121 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $4
  local.get $4
  drop
  local.get $0
  local.get $1
  call $~lib/string/String.UTF8.encode
  local.tee $2
  local.set $3
  local.get $2
  local.set $5
  nop
  local.get $0
  local.set $6
  nop
  local.get $3
 )
 (func $~lib/near-runtime-ts/util/util.stringToBytes (; 122 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  local.set $4
  local.get $4
  drop
  local.get $0
  i32.const 1
  call $~lib/string/String.UTF8.byteLength
  i32.const 1
  i32.sub
  local.set $1
  i32.const 0
  local.get $1
  call $~lib/typedarray/Uint8Array#constructor
  local.set $2
  local.get $2
  i32.load offset=4
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/util/util.toUTF8
  local.get $1
  call $~lib/memory/memory.copy
  local.get $2
  local.set $3
  local.get $0
  local.set $5
  nop
  local.get $3
 )
 (func $~lib/near-runtime-ts/storage/Storage#setString (; 123 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $1
  local.set $6
  local.get $6
  drop
  local.get $2
  local.set $7
  local.get $7
  drop
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $3
  local.get $2
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $4
  local.get $3
  i32.load offset=8
  i64.extend_i32_s
  local.get $3
  i32.load offset=4
  i64.extend_i32_u
  local.get $4
  i32.load offset=8
  i64.extend_i32_s
  local.get $4
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.storage_write
  local.set $5
  local.get $3
  local.set $8
  nop
  local.get $4
  local.set $9
  nop
  local.get $1
  local.set $10
  nop
  local.get $2
  local.set $11
  nop
 )
 (func $~lib/near-runtime-ts/util/util.read_register (; 124 ;) (type $FUNCSIG$ij) (param $0 i64) (result i32)
  (local $1 i64)
  (local $2 i32)
  local.get $0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.register_len
  local.set $1
  i32.const 0
  local.get $1
  i32.wrap_i64
  call $~lib/typedarray/Uint8Array#constructor
  local.set $2
  i64.const 0
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-runtime-ts/runtime_api/runtime_api.read_register
  local.get $2
 )
 (func $~lib/near-runtime-ts/storage/Storage#_internalReadBytes (; 125 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $2
  local.get $2
  i32.load offset=8
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.storage_read
  local.set $3
  local.get $3
  i64.const 1
  i64.eq
  if
   i64.const 0
   call $~lib/near-runtime-ts/util/util.read_register
   local.set $4
   local.get $1
   local.set $6
   nop
   local.get $2
   local.set $7
   nop
   local.get $4
   return
  else
   i32.const 0
   local.set $8
   local.get $8
   local.set $4
   local.get $1
   local.set $9
   nop
   local.get $2
   local.set $10
   nop
   local.get $4
   return
  end
  unreachable
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:byteOffset (; 126 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load
  i32.sub
 )
 (func $~lib/arraybuffer/ArrayBuffer#get:byteLength (; 127 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.const 16
  i32.sub
  i32.load offset=12
 )
 (func $~lib/arraybuffer/ArrayBuffer#slice (; 128 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $0
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $3
   local.get $1
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $1
   local.tee $4
   local.get $3
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
  end
  local.set $1
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $3
   local.get $2
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $2
   local.tee $4
   local.get $3
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
  end
  local.set $2
  local.get $2
  local.get $1
  i32.sub
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.set $6
  local.get $6
  i32.const 0
  call $~lib/rt/stub/__alloc
  local.set $7
  local.get $7
  local.get $0
  local.get $1
  i32.add
  local.get $6
  call $~lib/memory/memory.copy
  local.get $7
  local.set $8
  local.get $8
 )
 (func $~lib/near-runtime-ts/util/util.uint8ArrayToBuffer (; 129 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  local.get $0
  i32.load
  local.get $0
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $0
  i32.load offset=8
  local.get $0
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.set $1
  local.get $0
  local.set $3
  nop
  local.get $1
 )
 (func $~lib/string/String.UTF8.decodeUnsafe (; 130 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  local.set $3
  local.get $0
  local.get $1
  i32.add
  local.set $4
  local.get $4
  local.get $3
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 1152
   i32.const 585
   i32.const 6
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/stub/__alloc
  local.set $5
  local.get $5
  local.set $6
  block $break|0
   loop $continue|0
    local.get $3
    local.get $4
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $3
    local.tee $7
    i32.const 1
    i32.add
    local.set $3
    local.get $7
    i32.load8_u
    local.set $7
    local.get $7
    i32.const 128
    i32.lt_u
    if
     local.get $2
     if (result i32)
      local.get $7
      i32.eqz
     else
      i32.const 0
     end
     if
      br $break|0
     end
     local.get $6
     local.get $7
     i32.store16
     local.get $6
     i32.const 2
     i32.add
     local.set $6
    else
     local.get $7
     i32.const 191
     i32.gt_u
     if (result i32)
      local.get $7
      i32.const 224
      i32.lt_u
     else
      i32.const 0
     end
     if
      local.get $4
      local.get $3
      i32.sub
      i32.const 1
      i32.lt_u
      if
       br $break|0
      end
      local.get $6
      local.get $7
      i32.const 31
      i32.and
      i32.const 6
      i32.shl
      local.get $3
      local.tee $8
      i32.const 1
      i32.add
      local.set $3
      local.get $8
      i32.load8_u
      i32.const 63
      i32.and
      i32.or
      i32.store16
      local.get $6
      i32.const 2
      i32.add
      local.set $6
     else
      local.get $7
      i32.const 239
      i32.gt_u
      if (result i32)
       local.get $7
       i32.const 365
       i32.lt_u
      else
       i32.const 0
      end
      if
       local.get $4
       local.get $3
       i32.sub
       i32.const 3
       i32.lt_u
       if
        br $break|0
       end
       local.get $7
       i32.const 7
       i32.and
       i32.const 18
       i32.shl
       local.get $3
       i32.load8_u
       i32.const 63
       i32.and
       i32.const 12
       i32.shl
       i32.or
       local.get $3
       i32.load8_u offset=1
       i32.const 63
       i32.and
       i32.const 6
       i32.shl
       i32.or
       local.get $3
       i32.load8_u offset=2
       i32.const 63
       i32.and
       i32.or
       i32.const 65536
       i32.sub
       local.set $7
       local.get $3
       i32.const 3
       i32.add
       local.set $3
       local.get $6
       i32.const 55296
       local.get $7
       i32.const 10
       i32.shr_u
       i32.add
       i32.store16
       local.get $6
       i32.const 56320
       local.get $7
       i32.const 1023
       i32.and
       i32.add
       i32.store16 offset=2
       local.get $6
       i32.const 4
       i32.add
       local.set $6
      else
       local.get $4
       local.get $3
       i32.sub
       i32.const 2
       i32.lt_u
       if
        br $break|0
       end
       local.get $6
       local.get $7
       i32.const 15
       i32.and
       i32.const 12
       i32.shl
       local.get $3
       i32.load8_u
       i32.const 63
       i32.and
       i32.const 6
       i32.shl
       i32.or
       local.get $3
       i32.load8_u offset=1
       i32.const 63
       i32.and
       i32.or
       i32.store16
       local.get $3
       i32.const 2
       i32.add
       local.set $3
       local.get $6
       i32.const 2
       i32.add
       local.set $6
      end
     end
    end
    br $continue|0
   end
   unreachable
  end
  local.get $5
  local.get $6
  local.get $5
  i32.sub
  call $~lib/rt/stub/__realloc
  local.set $9
  local.get $9
 )
 (func $~lib/string/String.UTF8.decode (; 131 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  local.set $3
  local.get $3
  drop
  local.get $0
  local.get $0
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.get $1
  call $~lib/string/String.UTF8.decodeUnsafe
  local.set $2
  local.get $0
  local.set $4
  nop
  local.get $2
 )
 (func $~lib/near-runtime-ts/util/util.bytesToString (; 132 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  local.set $3
  local.get $3
  drop
  local.get $0
  i32.const 0
  i32.eq
  if
   i32.const 0
   local.set $4
   local.get $4
   local.set $1
   local.get $0
   local.set $5
   nop
   local.get $1
   return
  end
  local.get $0
  call $~lib/near-runtime-ts/util/util.uint8ArrayToBuffer
  local.tee $1
  i32.const 1
  call $~lib/string/String.UTF8.decode
  local.set $2
  local.get $1
  local.set $6
  nop
  local.get $0
  local.set $7
  nop
  local.get $2
 )
 (func $~lib/near-runtime-ts/storage/Storage#getString (; 133 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#_internalReadBytes
  local.tee $2
  call $~lib/near-runtime-ts/util/util.bytesToString
  local.set $3
  local.get $2
  local.set $5
  nop
  local.get $1
  local.set $6
  nop
  local.get $3
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String | null>#constructor (; 134 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 10
   call $~lib/rt/stub/__alloc
   local.set $5
   local.get $5
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $2
  local.get $1
  local.tee $3
  local.get $2
  i32.load offset=4
  local.tee $2
  i32.ne
  if
   local.get $3
   local.set $6
   local.get $6
   drop
   local.get $2
   local.set $7
   nop
  end
  local.get $3
  i32.store offset=4
  local.get $1
  local.set $8
  nop
  local.get $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String | null> (; 135 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  i32.const 0
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String | null>#constructor
  local.set $1
  local.get $0
  local.set $3
  nop
  local.get $1
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.report<~lib/string/String | null> (; 136 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
  local.get $0
  i32.const 0
  i32.eq
  if
   i32.const 1
   global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.type
   local.get $0
   local.set $3
   nop
   return
  end
  local.get $0
  local.set $1
  local.get $1
  local.set $4
  local.get $4
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.isManaged
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference
   local.set $5
   nop
  end
  local.get $1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference
  i32.const 1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.isManaged
  i32.const 5
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.type
  local.get $0
  local.set $6
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<~lib/string/String | null> (; 137 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $0
  local.set $3
  local.get $3
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.ready
  i32.eqz
  if
   call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportInvalidExpectCall
   local.get $0
   local.set $4
   nop
   return
  end
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
  local.get $1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
  local.get $0
  i32.const 0
  i32.eq
  if
   i32.const 1
   global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.type
   local.get $0
   local.set $5
   nop
   return
  end
  local.get $0
  local.set $2
  local.get $2
  local.set $6
  local.get $6
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.isManaged
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
   local.set $7
   nop
  end
  local.get $2
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
  i32.const 1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.isManaged
  i32.const 5
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.type
  local.get $0
  local.set $8
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<~lib/string/String | null> (; 138 ;) (type $FUNCSIG$viiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  local.set $4
  local.get $4
  drop
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $3
  local.set $6
  local.get $6
  drop
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.report<~lib/string/String | null>
  local.get $1
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<~lib/string/String | null>
  local.get $2
  local.get $1
  local.get $0
  call $~lib/string/String.__eq
  i32.xor
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/assert/assert
  local.get $0
  local.set $7
  nop
  local.get $1
  local.set $8
  nop
  local.get $3
  local.set $9
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String | null>#toBe (; 139 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $2
  local.set $4
  local.get $4
  drop
  local.get $0
  i32.load offset=4
  local.get $1
  local.get $0
  i32.load
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<~lib/string/String | null>
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.clear
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.clear
  local.get $1
  local.set $5
  nop
  local.get $2
  local.set $6
  nop
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|4 (; 140 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 1944
  i32.const 1976
  call $~lib/near-runtime-ts/storage/Storage#setString
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2008
  i32.const 2048
  call $~lib/near-runtime-ts/storage/Storage#setString
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 1944
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.tee $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String | null>
  local.tee $1
  i32.const 1976
  i32.const 1008
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String | null>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2008
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.set $2
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String | null>
  local.tee $3
  i32.const 2048
  i32.const 1008
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String | null>#toBe
  local.get $0
  local.set $4
  nop
  local.get $1
  local.set $5
  nop
  local.get $2
  local.set $6
  nop
  local.get $3
  local.set $7
  nop
 )
 (func $assembly/__tests__/util/_testBytesTwo (; 141 ;) (type $FUNCSIG$i) (result i32)
  (local $0 i32)
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.const 8
  call $~lib/typedarray/Uint8Array#__set
  local.get $0
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $0
  i32.const 2
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $0
 )
 (func $~lib/near-runtime-ts/storage/Storage#setBytes (; 142 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $2
  local.set $6
  local.get $6
  drop
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $3
  local.get $3
  i32.load offset=8
  i64.extend_i32_s
  local.get $3
  i32.load offset=4
  i64.extend_i32_u
  local.get $2
  i32.load offset=8
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.storage_write
  local.set $4
  local.get $3
  local.set $7
  nop
  local.get $1
  local.set $8
  nop
  local.get $2
  local.set $9
  nop
 )
 (func $~lib/near-runtime-ts/storage/Storage#getBytes (; 143 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#_internalReadBytes
  local.set $2
  local.get $1
  local.set $4
  nop
  local.get $2
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/typedarray/Uint8Array | null>#constructor (; 144 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 11
   call $~lib/rt/stub/__alloc
   local.set $5
   local.get $5
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $2
  local.get $1
  local.tee $3
  local.get $2
  i32.load offset=4
  local.tee $2
  i32.ne
  if
   local.get $3
   local.set $6
   local.get $6
   drop
   local.get $2
   local.set $7
   nop
  end
  local.get $3
  i32.store offset=4
  local.get $1
  local.set $8
  nop
  local.get $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/typedarray/Uint8Array | null> (; 145 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  i32.const 0
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/typedarray/Uint8Array | null>#constructor
  local.set $1
  local.get $0
  local.set $3
  nop
  local.get $1
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.report<~lib/typedarray/Uint8Array | null> (; 146 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
  local.get $0
  i32.const 0
  i32.eq
  if
   i32.const 1
   global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.type
   local.get $0
   local.set $3
   nop
   return
  end
  local.get $0
  local.set $1
  local.get $1
  local.set $4
  local.get $4
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.isManaged
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference
   local.set $5
   nop
  end
  local.get $1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference
  i32.const 1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.isManaged
  i32.const 6
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.type
  local.get $0
  local.set $6
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<~lib/typedarray/Uint8Array | null> (; 147 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $0
  local.set $3
  local.get $3
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.ready
  i32.eqz
  if
   call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportInvalidExpectCall
   local.get $0
   local.set $4
   nop
   return
  end
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
  local.get $1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
  local.get $0
  i32.const 0
  i32.eq
  if
   i32.const 1
   global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.type
   local.get $0
   local.set $5
   nop
   return
  end
  local.get $0
  local.set $2
  local.get $2
  local.set $6
  local.get $6
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.isManaged
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
   local.set $7
   nop
  end
  local.get $2
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
  i32.const 1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.isManaged
  i32.const 6
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.type
  local.get $0
  local.set $8
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<~lib/typedarray/Uint8Array | null> (; 148 ;) (type $FUNCSIG$viiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  local.set $4
  local.get $4
  drop
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $3
  local.set $6
  local.get $6
  drop
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.report<~lib/typedarray/Uint8Array | null>
  local.get $1
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<~lib/typedarray/Uint8Array | null>
  local.get $2
  local.get $1
  local.get $0
  i32.eq
  i32.xor
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/assert/assert
  local.get $0
  local.set $7
  nop
  local.get $1
  local.set $8
  nop
  local.get $3
  local.set $9
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/typedarray/Uint8Array | null>#toBe (; 149 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $2
  local.set $4
  local.get $4
  drop
  local.get $0
  i32.load offset=4
  local.get $1
  local.get $0
  i32.load
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<~lib/typedarray/Uint8Array | null>
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.clear
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.clear
  local.get $1
  local.set $5
  nop
  local.get $2
  local.set $6
  nop
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|5 (; 150 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  call $assembly/__tests__/util/_testBytes
  local.set $0
  call $assembly/__tests__/util/_testBytesTwo
  local.set $1
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 1944
  local.get $0
  call $~lib/near-runtime-ts/storage/Storage#setBytes
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2008
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#setBytes
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 1944
  call $~lib/near-runtime-ts/storage/Storage#getBytes
  local.set $2
  local.get $2
  local.get $0
  call $assembly/__tests__/runtime.spec/_arrayEqual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $3
  i32.const 1
  i32.const 2136
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2008
  call $~lib/near-runtime-ts/storage/Storage#getBytes
  local.set $4
  local.get $4
  local.get $1
  call $assembly/__tests__/runtime.spec/_arrayEqual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $5
  i32.const 1
  i32.const 2136
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2224
  call $~lib/near-runtime-ts/storage/Storage#getBytes
  local.tee $6
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/typedarray/Uint8Array | null>
  local.tee $7
  i32.const 0
  i32.const 2272
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/typedarray/Uint8Array | null>#toBe
  local.get $0
  local.set $8
  nop
  local.get $1
  local.set $9
  nop
  local.get $2
  local.set $10
  nop
  local.get $3
  local.set $11
  nop
  local.get $4
  local.set $12
  nop
  local.get $5
  local.set $13
  nop
  local.get $6
  local.set $14
  nop
  local.get $7
  local.set $15
  nop
 )
 (func $assembly/__tests__/model/TextMessage#constructor (; 151 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.eqz
  if
   i32.const 17
   i32.const 12
   call $~lib/rt/stub/__alloc
   local.set $1
   local.get $1
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i64.const 0
  i64.store offset=8
  local.get $0
  i32.const 0
  i32.store8 offset=16
  local.get $0
 )
 (func $assembly/__tests__/util/_testTextMessage (; 152 ;) (type $FUNCSIG$i) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  i32.const 0
  call $assembly/__tests__/model/TextMessage#constructor
  local.set $0
  local.get $0
  local.tee $1
  i32.const 2472
  local.tee $2
  local.get $1
  i32.load
  local.tee $1
  i32.ne
  if
   local.get $2
   local.set $3
   local.get $3
   drop
   local.get $1
   local.set $4
   nop
  end
  local.get $2
  i32.store
  local.get $0
  local.tee $2
  i32.const 2528
  local.tee $1
  local.get $2
  i32.load offset=4
  local.tee $2
  i32.ne
  if
   local.get $1
   local.set $5
   local.get $5
   drop
   local.get $2
   local.set $6
   nop
  end
  local.get $1
  i32.store offset=4
  local.get $0
  i64.const 415
  i64.store offset=8
  local.get $0
 )
 (func $~lib/string/String#charCodeAt (; 153 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  call $~lib/string/String#get:length
  i32.ge_u
  if
   i32.const -1
   return
  end
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
 )
 (func $start:~lib/assemblyscript-json/decoder (; 154 ;) (type $FUNCSIG$v)
  i32.const 2656
  i32.const 0
  call $~lib/string/String#charCodeAt
  global.set $~lib/assemblyscript-json/decoder/CHAR_0
  i32.const 2680
  i32.const 0
  call $~lib/string/String#charCodeAt
  global.set $~lib/assemblyscript-json/decoder/CHAR_9
  i32.const 2704
  i32.const 0
  call $~lib/string/String#charCodeAt
  global.set $~lib/assemblyscript-json/decoder/CHAR_A
  i32.const 2728
  i32.const 0
  call $~lib/string/String#charCodeAt
  global.set $~lib/assemblyscript-json/decoder/CHAR_A_LOWER
 )
 (func $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#constructor (; 155 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 17
   call $~lib/rt/stub/__alloc
   local.set $1
   local.get $1
   local.set $0
  end
  local.get $0
  local.set $2
  i32.const 0
  local.set $3
  local.get $2
  i32.eqz
  if
   i32.const 0
   i32.const 16
   call $~lib/rt/stub/__alloc
   local.set $3
   local.get $3
   local.set $2
  end
  local.get $2
  local.set $0
  local.get $0
 )
 (func $~lib/array/Array<nearFile/Value>#constructor (; 156 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 16
   i32.const 20
   call $~lib/rt/stub/__alloc
   local.set $2
   local.get $2
  end
  local.get $1
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
  local.get $1
  i32.store offset=12
  local.get $0
 )
 (func $nearFile/Handler#constructor (; 157 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 4
   i32.const 18
   call $~lib/rt/stub/__alloc
   local.set $3
   local.get $3
  end
  call $~lib/assemblyscript-json/decoder/ThrowingJSONHandler#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  local.tee $1
  i32.const 0
  i32.const 0
  call $~lib/array/Array<nearFile/Value>#constructor
  local.set $2
  local.get $1
  i32.load
  local.set $4
  nop
  local.get $2
  i32.store
  local.get $0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#constructor (; 158 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 21
   call $~lib/rt/stub/__alloc
   local.set $5
   local.get $5
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $2
  local.get $1
  local.tee $3
  local.get $2
  i32.load
  local.tee $2
  i32.ne
  if
   local.get $3
   local.set $6
   local.get $6
   drop
   local.get $2
   local.set $7
   nop
  end
  local.get $3
  i32.store
  local.get $1
  local.set $8
  nop
  local.get $0
 )
 (func $~lib/array/Array<i32>#__get (; 159 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 760
   i32.const 1560
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $3
  local.get $1
  local.set $4
  local.get $3
  i32.load offset=4
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  local.get $2
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#write (; 160 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  local.set $2
  local.get $2
  drop
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/array/Array<~lib/string/String>#push
  drop
  local.get $1
  local.set $3
  nop
 )
 (func $~lib/array/Array<i32>#__set (; 161 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 760
    i32.const 1560
    i32.const 109
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.const 2
   call $~lib/array/ensureSize
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.store offset=12
  end
  local.get $0
  local.set $3
  local.get $1
  local.set $4
  local.get $2
  local.set $5
  local.get $3
  i32.load offset=4
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  local.get $5
  i32.store
 )
 (func $~lib/string/String.__ne (; 162 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $3
  local.get $3
  drop
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  local.set $2
  local.get $0
  local.set $5
  nop
  local.get $1
  local.set $6
  nop
  local.get $2
 )
 (func $~lib/string/String#substring (; 163 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  local.get $0
  call $~lib/string/String#get:length
  local.set $3
  local.get $1
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.tee $4
  local.get $3
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_s
  select
  local.set $6
  local.get $2
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.tee $4
  local.get $3
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_s
  select
  local.set $7
  local.get $6
  local.tee $4
  local.get $7
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_s
  select
  i32.const 1
  i32.shl
  local.set $8
  local.get $6
  local.tee $4
  local.get $7
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  i32.const 1
  i32.shl
  local.set $9
  local.get $9
  local.get $8
  i32.sub
  local.set $3
  local.get $3
  i32.eqz
  if
   i32.const 1008
   local.set $11
   local.get $11
   return
  end
  local.get $8
  i32.eqz
  if (result i32)
   local.get $9
   local.get $0
   call $~lib/string/String#get:length
   i32.const 1
   i32.shl
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $0
   local.set $12
   local.get $12
   return
  end
  local.get $3
  i32.const 1
  call $~lib/rt/stub/__alloc
  local.set $10
  local.get $10
  local.get $0
  local.get $8
  i32.add
  local.get $3
  call $~lib/memory/memory.copy
  local.get $10
  local.set $13
  local.get $13
 )
 (func $~lib/util/number/decimalCount32 (; 164 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 100000
  i32.lt_u
  if
   local.get $0
   i32.const 100
   i32.lt_u
   if
    i32.const 1
    i32.const 2
    local.get $0
    i32.const 10
    i32.lt_u
    select
    return
   else
    i32.const 4
    i32.const 5
    local.get $0
    i32.const 10000
    i32.lt_u
    select
    local.set $1
    i32.const 3
    local.get $1
    local.get $0
    i32.const 1000
    i32.lt_u
    select
    return
   end
   unreachable
  else
   local.get $0
   i32.const 10000000
   i32.lt_u
   if
    i32.const 6
    i32.const 7
    local.get $0
    i32.const 1000000
    i32.lt_u
    select
    return
   else
    i32.const 9
    i32.const 10
    local.get $0
    i32.const 1000000000
    i32.lt_u
    select
    local.set $1
    i32.const 8
    local.get $1
    local.get $0
    i32.const 100000000
    i32.lt_u
    select
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa32_lut (; 165 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  i32.const 3568
  i32.load offset=4
  local.set $3
  block $break|0
   loop $continue|0
    local.get $1
    i32.const 10000
    i32.ge_u
    i32.eqz
    br_if $break|0
    local.get $1
    i32.const 10000
    i32.div_u
    local.set $4
    local.get $1
    i32.const 10000
    i32.rem_u
    local.set $5
    local.get $4
    local.set $1
    local.get $5
    i32.const 100
    i32.div_u
    local.set $6
    local.get $5
    i32.const 100
    i32.rem_u
    local.set $7
    local.get $3
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $8
    local.get $3
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $9
    local.get $2
    i32.const 4
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    local.get $8
    local.get $9
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $continue|0
   end
   unreachable
  end
  local.get $1
  i32.const 100
  i32.ge_u
  if
   local.get $1
   i32.const 100
   i32.div_u
   local.set $7
   local.get $1
   i32.const 100
   i32.rem_u
   local.set $6
   local.get $7
   local.set $1
   local.get $2
   i32.const 2
   i32.sub
   local.set $2
   local.get $3
   local.get $6
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $5
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $5
   i32.store
  end
  local.get $1
  i32.const 10
  i32.ge_u
  if
   local.get $2
   i32.const 2
   i32.sub
   local.set $2
   local.get $3
   local.get $1
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $5
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $5
   i32.store
  else
   local.get $2
   i32.const 1
   i32.sub
   local.set $2
   i32.const 48
   local.get $1
   i32.add
   local.set $5
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $5
   i32.store16
  end
 )
 (func $~lib/util/number/itoa32 (; 166 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $0
  i32.eqz
  if
   i32.const 2656
   local.set $7
   local.get $7
   return
  end
  local.get $0
  i32.const 0
  i32.lt_s
  local.set $1
  local.get $1
  if
   i32.const 0
   local.get $0
   i32.sub
   local.set $0
  end
  local.get $0
  call $~lib/util/number/decimalCount32
  local.get $1
  i32.add
  local.set $2
  local.get $2
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/stub/__alloc
  local.set $3
  local.get $3
  local.set $6
  local.get $0
  local.set $5
  local.get $2
  local.set $4
  local.get $6
  local.get $5
  local.get $4
  call $~lib/util/number/utoa32_lut
  local.get $1
  if
   local.get $3
   i32.const 45
   i32.store16
  end
  local.get $3
  local.set $8
  local.get $8
 )
 (func $~lib/number/I32#toString (; 167 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  block $__inlined_func$~lib/util/number/itoa<i32> (result i32)
   local.get $0
   local.set $1
   local.get $1
   call $~lib/util/number/itoa32
   br $__inlined_func$~lib/util/number/itoa<i32>
  end
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#writeString (; 168 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  local.get $1
  local.set $9
  local.get $9
  drop
  local.get $0
  i32.const 2776
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  i32.const 0
  local.set $2
  block $break|0
   i32.const 0
   local.set $3
   loop $loop|0
    local.get $3
    local.get $1
    call $~lib/string/String#get:length
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $1
    local.get $3
    call $~lib/string/String#charCodeAt
    local.set $4
    local.get $4
    i32.const 32
    i32.lt_s
    local.tee $5
    if (result i32)
     local.get $5
    else
     local.get $4
     i32.const 2776
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
    end
    local.tee $5
    if (result i32)
     local.get $5
    else
     local.get $4
     i32.const 2800
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
    end
    local.set $5
    local.get $5
    if
     local.get $0
     local.get $1
     local.get $2
     local.get $3
     call $~lib/string/String#substring
     local.tee $6
     call $~lib/assemblyscript-json/encoder/JSONEncoder#write
     local.get $3
     i32.const 1
     i32.add
     local.set $2
     local.get $4
     i32.const 2776
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
     if
      local.get $0
      i32.const 2824
      call $~lib/assemblyscript-json/encoder/JSONEncoder#write
     else
      local.get $4
      i32.const 2800
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.eq
      if
       local.get $0
       i32.const 2848
       call $~lib/assemblyscript-json/encoder/JSONEncoder#write
      else
       local.get $4
       i32.const 2872
       i32.const 0
       call $~lib/string/String#charCodeAt
       i32.eq
       if
        local.get $0
        i32.const 2896
        call $~lib/assemblyscript-json/encoder/JSONEncoder#write
       else
        local.get $4
        i32.const 2920
        i32.const 0
        call $~lib/string/String#charCodeAt
        i32.eq
        if
         local.get $0
         i32.const 2944
         call $~lib/assemblyscript-json/encoder/JSONEncoder#write
        else
         local.get $4
         i32.const 2968
         i32.const 0
         call $~lib/string/String#charCodeAt
         i32.eq
         if
          local.get $0
          i32.const 2992
          call $~lib/assemblyscript-json/encoder/JSONEncoder#write
         else
          local.get $4
          i32.const 3016
          i32.const 0
          call $~lib/string/String#charCodeAt
          i32.eq
          if
           local.get $0
           i32.const 3040
           call $~lib/assemblyscript-json/encoder/JSONEncoder#write
          else
           i32.const 0
           i32.eqz
           if
            i32.const 3064
            local.get $4
            call $~lib/number/I32#toString
            local.tee $7
            call $~lib/string/String.__concat
            local.tee $8
            i32.const 3600
            i32.const 108
            i32.const 20
            call $~lib/builtins/abort
            unreachable
           end
           local.get $7
           local.set $10
           nop
           local.get $8
           local.set $11
           nop
          end
         end
        end
       end
      end
     end
     local.get $6
     local.set $12
     nop
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $loop|0
   end
   unreachable
  end
  local.get $0
  local.get $1
  local.get $2
  local.get $1
  call $~lib/string/String#get:length
  call $~lib/string/String#substring
  local.tee $3
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $0
  i32.const 2776
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $3
  local.set $13
  nop
  local.get $1
  local.set $14
  nop
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey (; 169 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $0
  local.set $6
  i32.const 0
  local.set $7
  local.get $6
  i32.load
  local.get $6
  i32.load
  local.set $7
  local.get $7
  i32.load offset=12
  i32.const 1
  i32.sub
  call $~lib/array/Array<i32>#__get
  i32.eqz
  if
   local.get $0
   i32.const 2752
   call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  else
   local.get $0
   i32.load
   local.get $0
   i32.load
   local.set $4
   local.get $4
   i32.load offset=12
   i32.const 1
   i32.sub
   i32.const 0
   call $~lib/array/Array<i32>#__set
  end
  local.get $1
  i32.const 0
  call $~lib/string/String.__ne
  if (result i32)
   local.get $1
   call $~lib/string/String#get:length
   i32.const 0
   i32.gt_s
  else
   i32.const 0
  end
  if
   local.get $0
   local.get $1
   local.tee $2
   if (result i32)
    local.get $2
   else
    unreachable
   end
   call $~lib/assemblyscript-json/encoder/JSONEncoder#writeString
   local.get $0
   i32.const 3688
   call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  end
  local.get $1
  local.set $5
  nop
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#setNull (; 170 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  local.set $2
  local.get $2
  drop
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey
  local.get $0
  i32.const 1200
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $1
  local.set $3
  nop
 )
 (func $~lib/array/Array<i32>#constructor (; 171 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 16
   i32.const 14
   call $~lib/rt/stub/__alloc
   local.set $2
   local.get $2
  end
  local.get $1
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
  local.get $1
  i32.store offset=12
  local.get $0
 )
 (func $~lib/array/Array<i32>#push (; 172 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 1
  i32.add
  local.set $3
  local.get $0
  local.get $3
  i32.const 2
  call $~lib/array/ensureSize
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $3
  i32.store offset=12
  local.get $3
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#constructor (; 173 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 13
   call $~lib/rt/stub/__alloc
   local.set $3
   local.get $3
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $1
  i32.const 0
  i32.const 10
  call $~lib/array/Array<i32>#constructor
  local.set $2
  local.get $1
  i32.load
  local.set $4
  nop
  local.get $2
  i32.store
  local.get $0
  local.tee $2
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $1
  local.get $2
  i32.load offset=4
  local.set $5
  nop
  local.get $1
  i32.store offset=4
  local.get $0
  i32.load
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  local.get $0
 )
 (func $nearFile/JSONEncoder#constructor (; 174 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 15
   call $~lib/rt/stub/__alloc
   local.set $1
   local.get $1
   local.set $0
  end
  local.get $0
  call $~lib/assemblyscript-json/encoder/JSONEncoder#constructor
  local.set $0
  local.get $0
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#pushObject (; 175 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey
  local.get $0
  i32.const 3712
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $0
  i32.load
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  i32.const 1
  local.set $2
  local.get $1
  local.set $4
  nop
  local.get $2
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#setString (; 176 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $2
  local.set $4
  local.get $4
  drop
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey
  local.get $0
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeString
  local.get $1
  local.set $5
  nop
  local.get $2
  local.set $6
  nop
 )
 (func $nearFile/encode<~lib/string/String,nearFile/JSONEncoder> (; 177 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $0
  local.set $5
  local.get $5
  drop
  local.get $1
  local.set $6
  local.get $6
  drop
  local.get $2
  local.set $7
  local.get $7
  drop
  local.get $0
  i32.const 0
  call $~lib/string/String.__eq
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   local.get $2
   local.get $1
   local.get $0
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setString
  end
  i32.const 0
  local.set $3
  local.get $2
  local.set $4
  local.get $0
  local.set $8
  nop
  local.get $1
  local.set $9
  nop
  local.get $3
  local.set $10
  nop
  local.get $4
 )
 (func $~lib/util/number/decimalCount64 (; 178 ;) (type $FUNCSIG$ij) (param $0 i64) (result i32)
  (local $1 i32)
  local.get $0
  i64.const 1000000000000000
  i64.lt_u
  if
   local.get $0
   i64.const 1000000000000
   i64.lt_u
   if
    i32.const 11
    i32.const 12
    local.get $0
    i64.const 100000000000
    i64.lt_u
    select
    local.set $1
    i32.const 10
    local.get $1
    local.get $0
    i64.const 10000000000
    i64.lt_u
    select
    return
   else
    i32.const 14
    i32.const 15
    local.get $0
    i64.const 100000000000000
    i64.lt_u
    select
    local.set $1
    i32.const 13
    local.get $1
    local.get $0
    i64.const 10000000000000
    i64.lt_u
    select
    return
   end
   unreachable
  else
   local.get $0
   i64.const 100000000000000000
   i64.lt_u
   if
    i32.const 16
    i32.const 17
    local.get $0
    i64.const 10000000000000000
    i64.lt_u
    select
    return
   else
    i32.const 19
    i32.const 20
    local.get $0
    i64.const -8446744073709551616
    i64.lt_u
    select
    local.set $1
    i32.const 18
    local.get $1
    local.get $0
    i64.const 1000000000000000000
    i64.lt_u
    select
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa64_lut (; 179 ;) (type $FUNCSIG$viji) (param $0 i32) (param $1 i64) (param $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i64)
  (local $13 i64)
  i32.const 3568
  i32.load offset=4
  local.set $3
  block $break|0
   loop $continue|0
    local.get $1
    i64.const 100000000
    i64.ge_u
    i32.eqz
    br_if $break|0
    local.get $1
    i64.const 100000000
    i64.div_u
    local.set $4
    local.get $1
    local.get $4
    i64.const 100000000
    i64.mul
    i64.sub
    i32.wrap_i64
    local.set $5
    local.get $4
    local.set $1
    local.get $5
    i32.const 10000
    i32.div_u
    local.set $6
    local.get $5
    i32.const 10000
    i32.rem_u
    local.set $7
    local.get $6
    i32.const 100
    i32.div_u
    local.set $8
    local.get $6
    i32.const 100
    i32.rem_u
    local.set $9
    local.get $7
    i32.const 100
    i32.div_u
    local.set $10
    local.get $7
    i32.const 100
    i32.rem_u
    local.set $11
    local.get $3
    local.get $10
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $12
    local.get $3
    local.get $11
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $13
    local.get $2
    i32.const 4
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    local.get $12
    local.get $13
    i64.const 32
    i64.shl
    i64.or
    i64.store
    local.get $3
    local.get $8
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $12
    local.get $3
    local.get $9
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $13
    local.get $2
    i32.const 4
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    local.get $12
    local.get $13
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $continue|0
   end
   unreachable
  end
  local.get $0
  local.get $1
  i32.wrap_i64
  local.get $2
  call $~lib/util/number/utoa32_lut
 )
 (func $~lib/util/number/utoa64 (; 180 ;) (type $FUNCSIG$ij) (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  i64.const 0
  i64.ne
  i32.eqz
  if
   i32.const 2656
   local.set $8
   local.get $8
   return
  end
  local.get $0
  i64.const 4294967295
  i64.le_u
  if
   local.get $0
   i32.wrap_i64
   local.set $2
   local.get $2
   call $~lib/util/number/decimalCount32
   local.set $3
   local.get $3
   i32.const 1
   i32.shl
   i32.const 1
   call $~lib/rt/stub/__alloc
   local.set $1
   local.get $1
   local.set $6
   local.get $2
   local.set $5
   local.get $3
   local.set $4
   local.get $6
   local.get $5
   local.get $4
   call $~lib/util/number/utoa32_lut
  else
   local.get $0
   call $~lib/util/number/decimalCount64
   local.set $3
   local.get $3
   i32.const 1
   i32.shl
   i32.const 1
   call $~lib/rt/stub/__alloc
   local.set $1
   local.get $1
   local.set $5
   local.get $0
   local.set $7
   local.get $3
   local.set $4
   local.get $5
   local.get $7
   local.get $4
   call $~lib/util/number/utoa64_lut
  end
  local.get $1
  local.set $9
  local.get $9
 )
 (func $~lib/number/U64#toString (; 181 ;) (type $FUNCSIG$ij) (param $0 i64) (result i32)
  (local $1 i64)
  block $__inlined_func$~lib/util/number/itoa<u64> (result i32)
   local.get $0
   local.set $1
   local.get $1
   call $~lib/util/number/utoa64
   br $__inlined_func$~lib/util/number/itoa<u64>
  end
 )
 (func $nearFile/encode<u64,nearFile/JSONEncoder> (; 182 ;) (type $FUNCSIG$ijii) (param $0 i64) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $2
  local.set $6
  local.get $6
  drop
  local.get $2
  local.get $1
  local.get $0
  call $~lib/number/U64#toString
  local.tee $3
  call $~lib/assemblyscript-json/encoder/JSONEncoder#setString
  local.get $3
  local.set $7
  nop
  i32.const 0
  local.set $4
  local.get $2
  local.set $3
  local.get $1
  local.set $8
  nop
  local.get $4
  local.set $9
  nop
  local.get $3
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#writeBoolean (; 183 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  local.get $1
  if (result i32)
   i32.const 2600
   local.set $4
   local.get $4
   local.tee $2
  else
   i32.const 2624
   local.set $5
   local.get $5
   local.tee $3
  end
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#setBoolean (; 184 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey
  local.get $0
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeBoolean
  local.get $1
  local.set $4
  nop
 )
 (func $nearFile/encode<bool,nearFile/JSONEncoder> (; 185 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $2
  local.set $6
  local.get $6
  drop
  local.get $2
  local.get $1
  local.get $0
  call $~lib/assemblyscript-json/encoder/JSONEncoder#setBoolean
  i32.const 0
  local.set $3
  local.get $2
  local.set $4
  local.get $1
  local.set $7
  nop
  local.get $3
  local.set $8
  nop
  local.get $4
 )
 (func $~lib/array/Array<i32>#pop (; 186 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.load offset=12
  local.set $1
  local.get $1
  i32.const 1
  i32.lt_s
  if
   i32.const 3880
   i32.const 1560
   i32.const 288
   i32.const 20
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  local.get $0
  local.get $1
  i32.store offset=12
  local.get $2
 )
 (func $assembly/__tests__/model/TextMessage#_encode (; 187 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $2
  local.set $6
  local.get $6
  drop
  local.get $2
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 0
   call $nearFile/JSONEncoder#constructor
  else
   local.get $2
   local.set $7
   local.get $7
  end
  local.tee $3
  if (result i32)
   local.get $3
  else
   unreachable
  end
  local.set $8
  local.get $8
  local.set $3
  local.get $3
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#pushObject
  drop
  local.get $0
  i32.load
  i32.const 3736
  local.get $3
  call $nearFile/encode<~lib/string/String,nearFile/JSONEncoder>
  local.set $9
  nop
  local.get $0
  i32.load offset=4
  i32.const 3768
  local.get $3
  call $nearFile/encode<~lib/string/String,nearFile/JSONEncoder>
  local.set $10
  nop
  local.get $0
  i64.load offset=8
  i32.const 3792
  local.get $3
  call $nearFile/encode<u64,nearFile/JSONEncoder>
  local.set $11
  nop
  local.get $0
  i32.load8_u offset=16
  i32.const 3824
  local.get $3
  call $nearFile/encode<bool,nearFile/JSONEncoder>
  local.set $12
  nop
  local.get $3
  local.set $13
  local.get $13
  i32.const 3856
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $13
  i32.load
  call $~lib/array/Array<i32>#pop
  drop
  local.get $3
  local.set $4
  local.get $1
  local.set $14
  nop
  local.get $2
  local.set $15
  nop
  local.get $4
 )
 (func $~lib/assemblyscript-json/util/index/Buffer.getPtr (; 188 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  local.get $0
  i32.load offset=4
  local.set $1
  local.get $0
  local.set $3
  nop
  local.get $1
 )
 (func $~lib/assemblyscript-json/util/index/Buffer.fromString (; 189 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  local.set $5
  local.get $5
  drop
  i32.const 0
  local.get $0
  i32.const 0
  call $~lib/string/String.UTF8.byteLength
  call $~lib/typedarray/Uint8Array#constructor
  local.set $1
  local.get $0
  i32.const 0
  call $~lib/string/String.UTF8.encode
  local.tee $2
  local.set $3
  local.get $1
  call $~lib/assemblyscript-json/util/index/Buffer.getPtr
  local.get $3
  local.get $0
  i32.const 0
  call $~lib/string/String.UTF8.byteLength
  call $~lib/memory/memory.copy
  local.get $1
  local.set $4
  local.get $2
  local.set $6
  nop
  local.get $0
  local.set $7
  nop
  local.get $4
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#serialize (; 190 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  local.set $3
  local.get $3
  i32.load offset=4
  i32.const 1008
  call $~lib/array/Array<~lib/string/String>#join
  local.tee $1
  call $~lib/assemblyscript-json/util/index/Buffer.fromString
  local.set $2
  local.get $1
  local.set $4
  nop
  local.get $2
 )
 (func $nearFile/encode<assembly/__tests__/model/TextMessage,~lib/typedarray/Uint8Array> (; 191 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $0
  local.set $5
  local.get $5
  drop
  local.get $1
  local.set $6
  local.get $6
  drop
  local.get $2
  local.set $7
  local.get $7
  drop
  local.get $0
  i32.const 0
  i32.eq
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   local.get $0
   local.get $1
   local.get $2
   call $assembly/__tests__/model/TextMessage#_encode
   local.set $8
   nop
  end
  i32.const 0
  local.set $3
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
  local.set $4
  local.get $0
  local.set $9
  nop
  local.get $1
  local.set $10
  nop
  local.get $2
  local.set $11
  nop
  local.get $3
  local.set $12
  nop
  local.get $4
  return
 )
 (func $nearFile/encode<assembly/__tests__/model/TextMessage,~lib/typedarray/Uint8Array>|trampoline (; 192 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~lib/argc
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 1008
    local.set $1
   end
   i32.const 0
   call $nearFile/JSONEncoder#constructor
   local.tee $3
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $nearFile/encode<assembly/__tests__/model/TextMessage,~lib/typedarray/Uint8Array>
  local.set $4
  local.get $3
  local.set $5
  nop
  local.get $4
 )
 (func $~lib/near-runtime-ts/storage/Storage#set<assembly/__tests__/model/TextMessage> (; 193 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $2
  local.set $5
  local.get $5
  drop
  local.get $0
  local.get $1
  i32.const 1
  global.set $~lib/argc
  local.get $2
  i32.const 1008
  i32.const 0
  call $nearFile/encode<assembly/__tests__/model/TextMessage,~lib/typedarray/Uint8Array>|trampoline
  local.tee $3
  call $~lib/near-runtime-ts/storage/Storage#setBytes
  local.get $3
  local.set $6
  nop
  local.get $1
  local.set $7
  nop
  local.get $2
  local.set $8
  nop
 )
 (func $~lib/assemblyscript-json/decoder/DecoderState#constructor (; 194 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $2
  local.get $2
  drop
  local.get $0
  i32.eqz
  if
   i32.const 12
   i32.const 22
   call $~lib/rt/stub/__alloc
   local.set $3
   local.get $3
   local.set $0
  end
  local.get $0
  i32.const 1008
  local.set $4
  local.get $4
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.get $1
  local.set $5
  local.get $5
  i32.store offset=8
  local.get $1
  local.set $6
  nop
  local.get $0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#peekChar (; 195 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.load offset=4
  i32.load offset=4
  local.get $0
  i32.load offset=4
  i32.load offset=8
  local.set $1
  local.get $1
  i32.load offset=8
  i32.ge_s
  if
   i32.const -1
   return
  end
  local.get $0
  i32.load offset=4
  i32.load offset=8
  local.get $0
  i32.load offset=4
  i32.load offset=4
  call $~lib/typedarray/Uint8Array#__get
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#isWhitespace (; 196 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  i32.const 9
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 10
   i32.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 13
   i32.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 32
   i32.eq
  end
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readChar (; 197 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.load offset=4
  i32.load offset=4
  local.get $0
  i32.load offset=4
  i32.load offset=8
  local.set $2
  local.get $2
  i32.load offset=8
  i32.lt_s
  i32.eqz
  if
   i32.const 3928
   i32.const 3984
   i32.const 112
   i32.const 8
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  i32.load offset=8
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=4
  i32.load offset=4
  local.tee $1
  i32.const 1
  i32.add
  i32.store offset=4
  local.get $1
  call $~lib/typedarray/Uint8Array#__get
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#skipWhitespace (; 198 ;) (type $FUNCSIG$vi) (param $0 i32)
  block $break|0
   loop $continue|0
    local.get $0
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#peekChar
    call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#isWhitespace
    i32.eqz
    br_if $break|0
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readChar
    drop
    br $continue|0
   end
   unreachable
  end
 )
 (func $nearFile/Value#constructor (; 199 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 19
   call $~lib/rt/stub/__alloc
   local.set $1
   local.get $1
   local.set $0
  end
  local.get $0
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (; 200 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  i32.const 1073741808
  i32.gt_u
  if
   i32.const 656
   i32.const 704
   i32.const 54
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__alloc
  local.set $2
  local.get $2
  i32.const 0
  local.get $1
  call $~lib/memory/memory.fill
  local.get $2
  local.set $3
  local.get $3
 )
 (func $~lib/map/Map<~lib/string/String,nearFile/Value>#clear (; 201 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  local.tee $1
  i32.const 0
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $2
  local.get $1
  i32.load
  local.set $3
  nop
  local.get $2
  i32.store
  local.get $0
  i32.const 4
  i32.const 1
  i32.sub
  i32.store offset=4
  local.get $0
  local.tee $2
  i32.const 0
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  local.get $2
  i32.load offset=8
  local.set $4
  nop
  local.get $1
  i32.store offset=8
  local.get $0
  i32.const 4
  i32.store offset=12
  local.get $0
  i32.const 0
  i32.store offset=16
  local.get $0
  i32.const 0
  i32.store offset=20
 )
 (func $~lib/map/Map<~lib/string/String,nearFile/Value>#constructor (; 202 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.eqz
  if
   i32.const 24
   i32.const 25
   call $~lib/rt/stub/__alloc
   local.set $1
   local.get $1
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 0
  i32.store offset=16
  local.get $0
  i32.const 0
  i32.store offset=20
  local.get $0
  call $~lib/map/Map<~lib/string/String,nearFile/Value>#clear
  local.get $0
 )
 (func $nearFile/Obj#constructor (; 203 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 8
   i32.const 24
   call $~lib/rt/stub/__alloc
   local.set $3
   local.get $3
  end
  call $nearFile/Value#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,nearFile/Value>#constructor
  local.set $2
  local.get $1
  i32.load
  local.set $4
  nop
  local.get $2
  i32.store
  local.get $0
  local.tee $2
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $1
  local.get $2
  i32.load offset=4
  local.set $5
  nop
  local.get $1
  i32.store offset=4
  local.get $0
 )
 (func $~lib/array/Array<nearFile/Value>#push (; 204 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 1
  i32.add
  local.set $3
  local.get $0
  local.get $3
  i32.const 2
  call $~lib/array/ensureSize
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  local.set $6
  local.get $6
  i32.store
  local.get $0
  local.get $3
  i32.store offset=12
  local.get $3
  local.set $4
  local.get $1
  local.set $7
  nop
  local.get $4
 )
 (func $~lib/array/Array<nearFile/Value>#__get (; 205 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 760
   i32.const 1560
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $4
  local.get $1
  local.set $5
  i32.const 0
  local.set $6
  local.get $4
  i32.load offset=4
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $6
  local.get $6
  local.set $2
  local.get $2
  i32.eqz
  if
   local.get $2
   local.set $3
   nop
   i32.const 4072
   i32.const 1560
   i32.const 97
   i32.const 39
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
 )
 (func $nearFile/Handler#get:peek (; 206 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.load
  local.get $0
  i32.load
  local.set $1
  local.get $1
  i32.load offset=12
  i32.const 1
  i32.sub
  call $~lib/array/Array<nearFile/Value>#__get
 )
 (func $~lib/rt/__instanceof (; 207 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.const 16
  i32.sub
  i32.load offset=8
  local.set $2
  global.get $~lib/rt/__rtti_base
  local.set $3
  local.get $2
  local.get $3
  i32.load
  i32.le_u
  if
   loop $continue|0
    local.get $2
    local.get $1
    i32.eq
    if
     i32.const 1
     return
    end
    local.get $3
    i32.const 4
    i32.add
    local.get $2
    i32.const 8
    i32.mul
    i32.add
    i32.load offset=4
    local.tee $2
    br_if $continue|0
   end
  end
  i32.const 0
 )
 (func $~lib/util/hash/hashStr (; 208 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  local.set $4
  local.get $4
  drop
  i32.const -2128831035
  local.set $1
  local.get $0
  i32.const 0
  i32.ne
  if
   block $break|0
    i32.const 0
    local.set $2
    local.get $0
    call $~lib/string/String#get:length
    i32.const 1
    i32.shl
    local.set $3
    loop $loop|0
     local.get $2
     local.get $3
     i32.lt_u
     i32.eqz
     br_if $break|0
     local.get $1
     local.get $0
     local.get $2
     i32.add
     i32.load8_u
     i32.xor
     i32.const 16777619
     i32.mul
     local.set $1
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $loop|0
    end
    unreachable
   end
  end
  local.get $1
  local.set $3
  local.get $0
  local.set $5
  nop
  local.get $3
 )
 (func $~lib/map/Map<~lib/string/String,nearFile/Value>#find (; 209 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  i32.load
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load
  local.set $3
  block $break|0
   loop $continue|0
    local.get $3
    i32.eqz
    br_if $break|0
    local.get $3
    i32.load offset=8
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $3
     i32.load
     local.get $1
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $3
     local.set $4
     local.get $1
     local.set $6
     nop
     local.get $4
     return
    end
    local.get $3
    i32.load offset=8
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $3
    br $continue|0
   end
   unreachable
  end
  i32.const 0
  local.set $4
  local.get $1
  local.set $7
  nop
  local.get $4
 )
 (func $~lib/map/Map<~lib/string/String,nearFile/Value>#has (; 210 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  local.get $1
  block $~lib/util/hash/HASH<~lib/string/String>|inlined.0 (result i32)
   local.get $1
   local.set $5
   local.get $5
   local.set $2
   local.get $2
   call $~lib/util/hash/hashStr
   local.set $3
   local.get $2
   local.set $6
   nop
   local.get $3
   br $~lib/util/hash/HASH<~lib/string/String>|inlined.0
  end
  call $~lib/map/Map<~lib/string/String,nearFile/Value>#find
  i32.const 0
  i32.ne
  local.set $2
  local.get $1
  local.set $7
  nop
  local.get $2
 )
 (func $~lib/map/Map<~lib/string/String,nearFile/Value>#rehash (; 211 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  local.get $1
  i32.const 1
  i32.add
  local.set $2
  i32.const 0
  local.get $2
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $3
  local.get $2
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $4
  i32.const 0
  local.get $4
  i32.const 12
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $5
  local.get $0
  i32.load offset=8
  local.set $6
  local.get $6
  local.get $0
  i32.load offset=16
  i32.const 12
  i32.mul
  i32.add
  local.set $7
  local.get $5
  local.set $8
  block $break|0
   loop $continue|0
    local.get $6
    local.get $7
    i32.ne
    i32.eqz
    br_if $break|0
    local.get $6
    local.set $9
    local.get $9
    i32.load offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $8
     local.set $10
     local.get $10
     local.get $9
     i32.load
     i32.store
     local.get $10
     local.get $9
     i32.load offset=4
     i32.store offset=4
     block $~lib/util/hash/HASH<~lib/string/String>|inlined.2 (result i32)
      local.get $9
      i32.load
      local.set $13
      local.get $13
      local.set $11
      local.get $11
      call $~lib/util/hash/hashStr
      local.set $12
      local.get $11
      local.set $14
      nop
      local.get $12
      br $~lib/util/hash/HASH<~lib/string/String>|inlined.2
     end
     local.get $1
     i32.and
     local.set $11
     local.get $3
     local.get $11
     i32.const 4
     i32.mul
     i32.add
     local.set $12
     local.get $10
     local.get $12
     i32.load
     i32.store offset=8
     local.get $12
     local.get $8
     i32.store
     local.get $8
     i32.const 12
     i32.add
     local.set $8
    end
    local.get $6
    i32.const 12
    i32.add
    local.set $6
    br $continue|0
   end
   unreachable
  end
  local.get $0
  local.tee $9
  local.get $3
  local.tee $10
  local.get $9
  i32.load
  local.tee $9
  i32.ne
  if
   local.get $10
   local.set $15
   local.get $15
   drop
   local.get $9
   local.set $16
   nop
  end
  local.get $10
  i32.store
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.tee $10
  local.get $5
  local.tee $11
  local.get $10
  i32.load offset=8
  local.tee $10
  i32.ne
  if
   local.get $11
   local.set $17
   local.get $17
   drop
   local.get $10
   local.set $18
   nop
  end
  local.get $11
  i32.store offset=8
  local.get $0
  local.get $4
  i32.store offset=12
  local.get $0
  local.get $0
  i32.load offset=20
  i32.store offset=16
  local.get $3
  local.set $19
  nop
  local.get $5
  local.set $20
  nop
 )
 (func $~lib/map/Map<~lib/string/String,nearFile/Value>#set (; 212 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  local.get $1
  local.set $7
  local.get $7
  drop
  local.get $2
  local.set $8
  local.get $8
  drop
  block $~lib/util/hash/HASH<~lib/string/String>|inlined.1 (result i32)
   local.get $1
   local.set $9
   local.get $9
   local.set $3
   local.get $3
   call $~lib/util/hash/hashStr
   local.set $4
   local.get $3
   local.set $10
   nop
   local.get $4
   br $~lib/util/hash/HASH<~lib/string/String>|inlined.1
  end
  local.set $5
  local.get $0
  local.get $1
  local.get $5
  call $~lib/map/Map<~lib/string/String,nearFile/Value>#find
  local.set $6
  local.get $6
  if
   local.get $6
   i32.load offset=4
   local.set $3
   local.get $2
   local.get $3
   i32.ne
   if
    local.get $6
    local.get $2
    local.set $11
    local.get $11
    i32.store offset=4
    local.get $3
    local.set $12
    nop
   end
  else
   local.get $0
   i32.load offset=16
   local.get $0
   i32.load offset=12
   i32.eq
   if
    local.get $0
    local.get $0
    i32.load offset=20
    local.get $0
    i32.load offset=12
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $0
     i32.load offset=4
    else
     local.get $0
     i32.load offset=4
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,nearFile/Value>#rehash
   end
   local.get $0
   i32.load offset=8
   local.set $13
   local.get $13
   local.set $3
   local.get $3
   local.get $0
   local.get $0
   i32.load offset=16
   local.tee $4
   i32.const 1
   i32.add
   i32.store offset=16
   local.get $4
   i32.const 12
   i32.mul
   i32.add
   local.set $6
   local.get $6
   local.get $1
   local.set $14
   local.get $14
   i32.store
   local.get $6
   local.get $2
   local.set $15
   local.get $15
   i32.store offset=4
   local.get $0
   local.get $0
   i32.load offset=20
   i32.const 1
   i32.add
   i32.store offset=20
   local.get $0
   i32.load
   local.get $5
   local.get $0
   i32.load offset=4
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $4
   local.get $6
   local.get $4
   i32.load
   i32.store offset=8
   local.get $4
   local.get $6
   i32.store
   local.get $3
   local.set $16
   nop
  end
  local.get $1
  local.set $17
  nop
  local.get $2
  local.set $18
  nop
 )
 (func $nearFile/Obj#set (; 213 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $2
  local.set $4
  local.get $4
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/map/Map<~lib/string/String,nearFile/Value>#has
  i32.eqz
  if
   local.get $0
   i32.load offset=4
   local.get $1
   call $~lib/array/Array<~lib/string/String>#push
   drop
  end
  local.get $0
  i32.load
  local.get $1
  local.get $2
  call $~lib/map/Map<~lib/string/String,nearFile/Value>#set
  local.get $1
  local.set $5
  nop
  local.get $2
  local.set $6
  nop
 )
 (func $nearFile/Arr#push (; 214 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  local.set $2
  local.get $2
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/array/Array<nearFile/Value>#push
  drop
  local.get $1
  local.set $3
  nop
 )
 (func $nearFile/Handler#addValue (; 215 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  local.get $1
  local.set $6
  local.get $6
  drop
  local.get $2
  local.set $7
  local.get $7
  drop
  local.get $1
  call $~lib/string/String#get:length
  i32.const 0
  i32.eq
  if (result i32)
   local.get $0
   i32.load
   local.set $8
   local.get $8
   i32.load offset=12
   i32.const 0
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $0
   i32.load
   local.get $2
   call $~lib/array/Array<nearFile/Value>#push
   drop
   local.get $1
   local.set $9
   nop
   local.get $2
   local.set $10
   nop
   return
  end
  local.get $0
  call $nearFile/Handler#get:peek
  local.tee $3
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 24
   call $~lib/rt/__instanceof
  end
  if
   local.get $0
   call $nearFile/Handler#get:peek
   local.tee $4
   local.get $1
   local.get $2
   call $nearFile/Obj#set
   local.get $4
   local.set $11
   nop
  else
   local.get $0
   call $nearFile/Handler#get:peek
   local.tee $4
   local.tee $5
   i32.eqz
   if (result i32)
    i32.const 0
   else
    local.get $5
    i32.const 26
    call $~lib/rt/__instanceof
   end
   if
    local.get $0
    call $nearFile/Handler#get:peek
    local.tee $5
    local.get $2
    call $nearFile/Arr#push
    local.get $5
    local.set $12
    nop
   end
   local.get $4
   local.set $13
   nop
  end
  local.get $3
  local.set $14
  nop
  local.get $1
  local.set $15
  nop
  local.get $2
  local.set $16
  nop
 )
 (func $nearFile/Handler#pushObject (; 216 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  i32.const 0
  call $nearFile/Obj#constructor
  local.set $2
  local.get $0
  local.get $1
  local.get $2
  call $nearFile/Handler#addValue
  local.get $0
  i32.load
  local.get $2
  call $~lib/array/Array<nearFile/Value>#push
  drop
  i32.const 1
  local.set $3
  local.get $2
  local.set $5
  nop
  local.get $1
  local.set $6
  nop
  local.get $3
 )
 (func $~lib/assemblyscript-json/util/index/Buffer.readString (; 217 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  local.set $4
  local.get $4
  drop
  local.get $0
  call $~lib/assemblyscript-json/util/index/Buffer.getPtr
  local.get $1
  i32.add
  local.get $2
  local.get $1
  i32.sub
  i32.const 0
  call $~lib/string/String.UTF8.decodeUnsafe
  local.set $3
  local.get $0
  local.set $5
  nop
  local.get $3
 )
 (func $~lib/assemblyscript-json/decoder/DecoderState#readString|trampoline (; 218 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~lib/argc
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $0
   i32.load offset=4
   local.set $2
  end
  local.get $0
  local.set $3
  local.get $1
  local.set $4
  local.get $2
  local.set $5
  local.get $3
  i32.load offset=8
  local.get $4
  local.get $5
  i32.const 1
  i32.sub
  call $~lib/assemblyscript-json/util/index/Buffer.readString
 )
 (func $~lib/rt/__allocArray (; 219 ;) (type $FUNCSIG$iiiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  i32.const 16
  local.get $2
  call $~lib/rt/stub/__alloc
  local.set $4
  local.get $0
  local.get $1
  i32.shl
  local.set $5
  local.get $5
  i32.const 0
  call $~lib/rt/stub/__alloc
  local.set $6
  local.get $4
  local.get $6
  local.set $7
  local.get $7
  i32.store
  local.get $4
  local.get $6
  i32.store offset=4
  local.get $4
  local.get $5
  i32.store offset=8
  local.get $4
  local.get $0
  i32.store offset=12
  local.get $3
  if
   local.get $6
   local.get $3
   local.get $5
   call $~lib/memory/memory.copy
  end
  local.get $4
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readHexDigit (; 220 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readChar
  local.set $1
  local.get $1
  global.get $~lib/assemblyscript-json/decoder/CHAR_0
  i32.sub
  local.set $2
  local.get $2
  i32.const 9
  i32.gt_s
  if
   local.get $1
   global.get $~lib/assemblyscript-json/decoder/CHAR_A
   i32.sub
   i32.const 10
   i32.add
   local.set $2
   local.get $2
   i32.const 10
   i32.lt_s
   if (result i32)
    i32.const 1
   else
    local.get $2
    i32.const 15
    i32.gt_s
   end
   if
    local.get $1
    global.get $~lib/assemblyscript-json/decoder/CHAR_A_LOWER
    i32.sub
    i32.const 10
    i32.add
    local.set $2
   end
  end
  i32.const 2
  i32.const 2
  i32.const 14
  i32.const 0
  call $~lib/rt/__allocArray
  local.set $3
  local.get $3
  i32.load offset=4
  local.set $4
  local.get $4
  local.get $1
  i32.store
  local.get $4
  local.get $2
  i32.store offset=4
  local.get $3
  local.set $5
  local.get $5
  local.set $4
  local.get $2
  i32.const 0
  i32.ge_s
  if (result i32)
   local.get $2
   i32.const 16
   i32.lt_s
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 4520
   i32.const 3984
   i32.const 269
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.set $3
  local.get $4
  local.set $6
  nop
  local.get $3
 )
 (func $~lib/string/String.fromCodePoint (; 221 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.const 1114111
  i32.le_u
  i32.eqz
  if
   i32.const 0
   i32.const 1152
   i32.const 22
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 65535
  i32.gt_s
  local.set $1
  i32.const 2
  local.get $1
  i32.shl
  i32.const 1
  call $~lib/rt/stub/__alloc
  local.set $2
  local.get $1
  i32.eqz
  if
   local.get $2
   local.get $0
   i32.store16
  else
   local.get $0
   i32.const 65536
   i32.sub
   local.set $0
   local.get $0
   i32.const 1023
   i32.and
   i32.const 56320
   i32.add
   local.set $3
   local.get $0
   i32.const 10
   i32.shr_u
   i32.const 55296
   i32.add
   local.set $4
   local.get $2
   local.get $4
   local.get $3
   i32.const 16
   i32.shl
   i32.or
   i32.store
  end
  local.get $2
  local.set $5
  local.get $5
 )
 (func $~lib/string/String.fromCharCode (; 222 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  i32.const 0
  i32.gt_s
  local.set $2
  i32.const 2
  local.get $2
  i32.shl
  i32.const 1
  call $~lib/rt/stub/__alloc
  local.set $3
  local.get $3
  local.get $0
  i32.store16
  local.get $2
  if
   local.get $3
   local.get $1
   i32.store16 offset=2
  end
  local.get $3
  local.set $4
  local.get $4
 )
 (func $~lib/string/String.fromCharCode|trampoline (; 223 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~lib/argc
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $1
  end
  local.get $0
  local.get $1
  call $~lib/string/String.fromCharCode
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readEscapedChar (; 224 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readChar
  local.set $1
  local.get $1
  i32.const 2776
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 2776
   local.set $7
   local.get $7
   return
  end
  local.get $1
  i32.const 2800
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 2800
   local.set $8
   local.get $8
   return
  end
  local.get $1
  i32.const 4376
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 4376
   local.set $9
   local.get $9
   return
  end
  local.get $1
  i32.const 4400
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 2872
   local.set $10
   local.get $10
   return
  end
  local.get $1
  i32.const 4424
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 2920
   local.set $11
   local.get $11
   return
  end
  local.get $1
  i32.const 4448
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 2968
   local.set $12
   local.get $12
   return
  end
  local.get $1
  i32.const 4472
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 3016
   local.set $13
   local.get $13
   return
  end
  local.get $1
  i32.const 4496
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readHexDigit
   local.set $2
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readHexDigit
   local.set $3
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readHexDigit
   local.set $4
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readHexDigit
   local.set $5
   local.get $2
   i32.const 4096
   i32.mul
   local.get $3
   i32.const 256
   i32.mul
   i32.add
   local.get $4
   i32.const 16
   i32.mul
   i32.add
   local.get $5
   i32.add
   local.set $6
   local.get $6
   call $~lib/string/String.fromCodePoint
   return
  end
  i32.const 0
  i32.eqz
  if
   i32.const 4576
   i32.const 1
   global.set $~lib/argc
   local.get $1
   i32.const 0
   call $~lib/string/String.fromCharCode|trampoline
   local.tee $6
   call $~lib/string/String.__concat
   local.tee $5
   i32.const 3984
   i32.const 255
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1008
  local.set $14
  local.get $14
  local.set $4
  local.get $6
  local.set $15
  nop
  local.get $5
  local.set $16
  nop
  local.get $4
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readString (; 225 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readChar
  i32.const 2776
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 4224
   i32.const 3984
   i32.const 197
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  i32.load offset=4
  local.set $1
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $2
  loop $loop|0
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readChar
   local.set $3
   local.get $3
   i32.const 32
   i32.ge_s
   i32.eqz
   if
    i32.const 4304
    i32.const 3984
    i32.const 203
    i32.const 6
    call $~lib/builtins/abort
    unreachable
   end
   local.get $3
   i32.const 2776
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   if
    i32.const 1
    global.set $~lib/argc
    local.get $0
    i32.load offset=4
    local.get $1
    i32.const 0
    call $~lib/assemblyscript-json/decoder/DecoderState#readString|trampoline
    local.set $4
    local.get $2
    local.set $6
    local.get $6
    i32.load offset=12
    i32.const 0
    i32.eq
    if
     local.get $4
     local.set $5
     local.get $2
     local.set $7
     nop
     local.get $5
     return
    end
    local.get $2
    local.get $4
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $2
    i32.const 1008
    call $~lib/array/Array<~lib/string/String>#join
    local.set $5
    local.get $4
    local.set $8
    nop
    local.get $2
    local.set $9
    nop
    local.get $5
    return
   else
    local.get $3
    i32.const 2800
    i32.const 0
    call $~lib/string/String#charCodeAt
    i32.eq
    if
     local.get $0
     i32.load offset=4
     i32.load offset=4
     local.get $1
     i32.const 1
     i32.add
     i32.gt_s
     if
      local.get $2
      i32.const 1
      global.set $~lib/argc
      local.get $0
      i32.load offset=4
      local.get $1
      i32.const 0
      call $~lib/assemblyscript-json/decoder/DecoderState#readString|trampoline
      local.tee $4
      call $~lib/array/Array<~lib/string/String>#push
      drop
      local.get $4
      local.set $10
      nop
     end
     local.get $2
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readEscapedChar
     local.tee $4
     call $~lib/array/Array<~lib/string/String>#push
     drop
     local.get $0
     i32.load offset=4
     i32.load offset=4
     local.set $1
     local.get $4
     local.set $11
     nop
    end
   end
   br $loop|0
  end
  unreachable
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseKey (; 226 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#skipWhitespace
  local.get $0
  i32.load offset=4
  local.tee $1
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readString
  local.set $2
  local.get $1
  i32.load
  local.set $3
  nop
  local.get $2
  i32.store
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#skipWhitespace
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readChar
  i32.const 3688
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 4656
   i32.const 3984
   i32.const 159
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/array/Array<nearFile/Value>#pop (; 227 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.set $1
  local.get $1
  i32.const 1
  i32.lt_s
  if
   i32.const 3880
   i32.const 1560
   i32.const 288
   i32.const 20
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $3
  local.get $3
  local.set $2
  local.get $0
  local.get $1
  i32.store offset=12
  local.get $2
 )
 (func $nearFile/Handler#popObject (; 228 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.load
  local.set $1
  local.get $1
  i32.load offset=12
  i32.const 1
  i32.gt_s
  if
   local.get $0
   i32.load
   call $~lib/array/Array<nearFile/Value>#pop
   local.set $2
   nop
  end
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseObject (; 229 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#peekChar
  i32.const 3712
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  i32.load offset=4
  i32.load
  local.set $4
  local.get $4
  local.set $1
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.const 1008
  local.tee $3
  local.get $2
  i32.load
  local.tee $2
  i32.ne
  if
   local.get $3
   local.set $5
   local.get $5
   drop
   local.get $2
   local.set $6
   nop
  end
  local.get $3
  i32.store
  local.get $0
  i32.load
  local.get $1
  call $nearFile/Handler#pushObject
  if
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readChar
   drop
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#skipWhitespace
   i32.const 1
   local.set $3
   block $break|0
    loop $continue|0
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#peekChar
     i32.const 3856
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.ne
     i32.eqz
     br_if $break|0
     local.get $3
     i32.eqz
     if
      local.get $0
      call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readChar
      i32.const 2752
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.eq
      i32.eqz
      if
       i32.const 4184
       i32.const 3984
       i32.const 142
       i32.const 10
       call $~lib/builtins/abort
       unreachable
      end
     else
      i32.const 0
      local.set $3
     end
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseKey
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseValue
     drop
     br $continue|0
    end
    unreachable
   end
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readChar
   i32.const 3856
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 4696
    i32.const 3984
    i32.const 149
    i32.const 6
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $0
  i32.load
  call $nearFile/Handler#popObject
  i32.const 1
  local.set $3
  local.get $1
  local.set $7
  nop
  local.get $3
 )
 (func $nearFile/Arr#constructor (; 230 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 4
   i32.const 26
   call $~lib/rt/stub/__alloc
   local.set $3
   local.get $3
  end
  call $nearFile/Value#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  local.tee $1
  i32.const 0
  i32.const 0
  call $~lib/array/Array<nearFile/Value>#constructor
  local.set $2
  local.get $1
  i32.load
  local.set $4
  nop
  local.get $2
  i32.store
  local.get $0
 )
 (func $nearFile/Handler#pushArray (; 231 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  i32.const 0
  call $nearFile/Arr#constructor
  local.set $2
  local.get $0
  i32.load
  local.set $5
  local.get $5
  i32.load offset=12
  i32.const 0
  i32.eq
  if
   local.get $0
   i32.load
   local.get $2
   call $~lib/array/Array<nearFile/Value>#push
   drop
  else
   local.get $0
   local.get $1
   local.get $2
   call $nearFile/Handler#addValue
   local.get $0
   i32.load
   local.get $2
   call $~lib/array/Array<nearFile/Value>#push
   drop
  end
  i32.const 1
  local.set $3
  local.get $2
  local.set $6
  nop
  local.get $1
  local.set $7
  nop
  local.get $3
 )
 (func $nearFile/Handler#popArray (; 232 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.load
  local.set $1
  local.get $1
  i32.load offset=12
  i32.const 1
  i32.gt_s
  if
   local.get $0
   i32.load
   call $~lib/array/Array<nearFile/Value>#pop
   local.set $2
   nop
  end
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseArray (; 233 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#peekChar
  i32.const 4760
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  i32.load offset=4
  i32.load
  local.set $4
  local.get $4
  local.set $1
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.const 1008
  local.tee $3
  local.get $2
  i32.load
  local.tee $2
  i32.ne
  if
   local.get $3
   local.set $5
   local.get $5
   drop
   local.get $2
   local.set $6
   nop
  end
  local.get $3
  i32.store
  local.get $0
  i32.load
  local.get $1
  call $nearFile/Handler#pushArray
  if
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readChar
   drop
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#skipWhitespace
   i32.const 1
   local.set $3
   block $break|0
    loop $continue|0
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#peekChar
     i32.const 4784
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.ne
     i32.eqz
     br_if $break|0
     local.get $3
     i32.eqz
     if
      local.get $0
      call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readChar
      i32.const 2752
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.eq
      i32.eqz
      if
       i32.const 4184
       i32.const 3984
       i32.const 176
       i32.const 10
       call $~lib/builtins/abort
       unreachable
      end
     else
      i32.const 0
      local.set $3
     end
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseValue
     drop
     br $continue|0
    end
    unreachable
   end
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readChar
   i32.const 4784
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 4808
    i32.const 3984
    i32.const 182
    i32.const 6
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $0
  i32.load
  call $nearFile/Handler#popArray
  i32.const 1
  local.set $3
  local.get $1
  local.set $7
  nop
  local.get $3
 )
 (func $nearFile/Str#constructor (; 234 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  local.set $2
  local.get $2
  drop
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 4
   i32.const 27
   call $~lib/rt/stub/__alloc
   local.set $3
   local.get $3
  end
  call $nearFile/Value#constructor
  local.set $0
  local.get $0
  local.get $1
  local.set $4
  local.get $4
  i32.store
  local.get $1
  local.set $5
  nop
  local.get $0
 )
 (func $nearFile/Value.String (; 235 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  i32.const 0
  local.get $0
  call $nearFile/Str#constructor
  local.set $1
  local.get $0
  local.set $3
  nop
  local.get $1
 )
 (func $nearFile/Handler#setString (; 236 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $2
  local.set $5
  local.get $5
  drop
  local.get $2
  call $nearFile/Value.String
  local.set $3
  local.get $0
  local.get $1
  local.get $3
  call $nearFile/Handler#addValue
  local.get $3
  local.set $6
  nop
  local.get $1
  local.set $7
  nop
  local.get $2
  local.set $8
  nop
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseString (; 237 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#peekChar
  i32.const 2776
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  i32.load
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readString
  local.tee $1
  call $nearFile/Handler#setString
  i32.const 1
  local.set $2
  local.get $1
  local.set $3
  nop
  local.get $2
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readAndAssert (; 238 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  block $break|0
   i32.const 0
   local.set $2
   loop $loop|0
    local.get $2
    local.get $1
    call $~lib/string/String#get:length
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $1
    local.get $2
    call $~lib/string/String#charCodeAt
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readChar
    i32.eq
    i32.eqz
    if
     i32.const 4872
     local.get $1
     call $~lib/string/String.__concat
     local.tee $3
     i32.const 4912
     call $~lib/string/String.__concat
     local.tee $4
     i32.const 3984
     i32.const 321
     i32.const 6
     call $~lib/builtins/abort
     unreachable
    end
    local.get $3
    local.set $6
    nop
    local.get $4
    local.set $7
    nop
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $loop|0
   end
   unreachable
  end
  local.get $1
  local.set $8
  nop
 )
 (func $nearFile/Bools#constructor (; 239 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 1
   i32.const 28
   call $~lib/rt/stub/__alloc
   local.set $2
   local.get $2
  end
  call $nearFile/Value#constructor
  local.set $0
  local.get $0
  local.get $1
  i32.store8
  local.get $0
 )
 (func $nearFile/Handler#setBoolean (; 240 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $2
  local.set $5
  i32.const 0
  local.get $5
  call $nearFile/Bools#constructor
  local.set $3
  local.get $0
  local.get $1
  local.get $3
  call $nearFile/Handler#addValue
  local.get $3
  local.set $6
  nop
  local.get $1
  local.set $7
  nop
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseBoolean (; 241 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#peekChar
  i32.const 2624
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $0
   global.get $~lib/assemblyscript-json/decoder/FALSE_STR
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readAndAssert
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   i32.load
   i32.const 0
   call $nearFile/Handler#setBoolean
   i32.const 1
   return
  end
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#peekChar
  i32.const 2600
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $0
   global.get $~lib/assemblyscript-json/decoder/TRUE_STR
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readAndAssert
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   i32.load
   i32.const 1
   call $nearFile/Handler#setBoolean
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $nearFile/Num#constructor (; 242 ;) (type $FUNCSIG$iij) (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 8
   i32.const 29
   call $~lib/rt/stub/__alloc
   local.set $2
   local.get $2
  end
  call $nearFile/Value#constructor
  local.set $0
  local.get $0
  local.get $1
  i64.store
  local.get $0
 )
 (func $nearFile/Handler#setInteger (; 243 ;) (type $FUNCSIG$viij) (param $0 i32) (param $1 i32) (param $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $2
  local.set $5
  i32.const 0
  local.get $5
  call $nearFile/Num#constructor
  local.set $3
  local.get $0
  local.get $1
  local.get $3
  call $nearFile/Handler#addValue
  local.get $3
  local.set $6
  nop
  local.get $1
  local.set $7
  nop
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseNumber (; 244 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  i64.const 0
  local.set $1
  i64.const 1
  local.set $2
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#peekChar
  i32.const 4936
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i64.const -1
   local.set $2
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readChar
   drop
  end
  i32.const 0
  local.set $3
  block $break|0
   loop $continue|0
    global.get $~lib/assemblyscript-json/decoder/CHAR_0
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#peekChar
    i32.le_s
    if (result i32)
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#peekChar
     global.get $~lib/assemblyscript-json/decoder/CHAR_9
     i32.le_s
    else
     i32.const 0
    end
    i32.eqz
    br_if $break|0
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readChar
    local.set $4
    local.get $1
    i64.const 10
    i64.mul
    local.set $1
    local.get $1
    local.get $4
    global.get $~lib/assemblyscript-json/decoder/CHAR_0
    i32.sub
    i64.extend_i32_s
    i64.add
    local.set $1
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $continue|0
   end
   unreachable
  end
  local.get $3
  i32.const 0
  i32.gt_s
  if
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   i32.load
   local.get $1
   local.get $2
   i64.mul
   call $nearFile/Handler#setInteger
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $nearFile/Handler#setNull (; 245 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  i32.const 0
  local.set $6
  i32.const 0
  local.set $7
  local.get $6
  if (result i32)
   local.get $6
  else
   i32.const 0
   i32.const 30
   call $~lib/rt/stub/__alloc
   local.set $7
   local.get $7
  end
  call $nearFile/Value#constructor
  local.set $6
  local.get $6
  local.set $2
  local.get $0
  local.get $1
  local.get $2
  call $nearFile/Handler#addValue
  local.get $2
  local.set $4
  nop
  local.get $1
  local.set $5
  nop
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseNull (; 246 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#peekChar
  i32.const 1200
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $0
   global.get $~lib/assemblyscript-json/decoder/NULL_STR
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#readAndAssert
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   i32.load
   call $nearFile/Handler#setNull
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseValue (; 247 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#skipWhitespace
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseObject
  local.tee $1
  if (result i32)
   local.get $1
  else
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseArray
  end
  local.tee $1
  if (result i32)
   local.get $1
  else
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseString
  end
  local.tee $1
  if (result i32)
   local.get $1
  else
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseBoolean
  end
  local.tee $1
  if (result i32)
   local.get $1
  else
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseNumber
  end
  local.tee $1
  if (result i32)
   local.get $1
  else
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseNull
  end
  local.set $1
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#skipWhitespace
  local.get $1
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#deserialize (; 248 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $2
  local.set $6
  local.get $6
  drop
  local.get $2
  i32.const 0
  i32.ne
  if
   local.get $0
   local.tee $3
   local.get $2
   local.tee $4
   local.get $3
   i32.load offset=4
   local.tee $3
   i32.ne
   if
    local.get $4
    local.set $7
    local.get $7
    drop
    local.get $3
    local.set $8
    nop
   end
   local.get $4
   i32.store offset=4
  else
   local.get $0
   local.tee $4
   i32.const 0
   local.get $1
   call $~lib/assemblyscript-json/decoder/DecoderState#constructor
   local.set $3
   local.get $4
   i32.load offset=4
   local.set $9
   nop
   local.get $3
   i32.store offset=4
  end
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#parseValue
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 4960
   i32.const 3984
   i32.const 100
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.set $10
  nop
  local.get $2
  local.set $11
  nop
 )
 (func $nearFile/Handler#reset (; 249 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  block $break|0
   loop $continue|0
    local.get $0
    i32.load
    local.set $1
    local.get $1
    i32.load offset=12
    i32.const 0
    i32.gt_s
    i32.eqz
    br_if $break|0
    local.get $0
    i32.load
    call $~lib/array/Array<nearFile/Value>#pop
    local.set $2
    nop
    br $continue|0
   end
   unreachable
  end
 )
 (func $nearFile/JSON.parse (; 250 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  local.set $4
  local.get $4
  drop
  global.get $nearFile/JSON.decoder
  local.get $0
  i32.const 0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#deserialize
  global.get $nearFile/JSON.decoder
  i32.load
  call $nearFile/Handler#get:peek
  local.tee $1
  local.set $5
  local.get $5
  local.set $2
  global.get $nearFile/JSON.decoder
  i32.load
  call $nearFile/Handler#reset
  local.get $2
  local.set $3
  local.get $1
  local.set $6
  nop
  local.get $0
  local.set $7
  nop
  local.get $3
 )
 (func $~lib/map/Map<~lib/string/String,nearFile/Value>#get (; 251 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  local.get $1
  block $~lib/util/hash/HASH<~lib/string/String>|inlined.3 (result i32)
   local.get $1
   local.set $6
   local.get $6
   local.set $2
   local.get $2
   call $~lib/util/hash/hashStr
   local.set $3
   local.get $2
   local.set $7
   nop
   local.get $3
   br $~lib/util/hash/HASH<~lib/string/String>|inlined.3
  end
  call $~lib/map/Map<~lib/string/String,nearFile/Value>#find
  local.set $4
  local.get $4
  i32.eqz
  if
   local.get $1
   local.set $8
   nop
   i32.const 5016
   i32.const 5072
   i32.const 111
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.load offset=4
  local.set $9
  local.get $9
  local.set $2
  local.get $1
  local.set $10
  nop
  local.get $2
 )
 (func $nearFile/Obj#get (; 252 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/map/Map<~lib/string/String,nearFile/Value>#has
  i32.eqz
  if
   i32.const 0
   local.set $4
   local.get $4
   local.set $2
   local.get $1
   local.set $5
   nop
   local.get $2
   return
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/map/Map<~lib/string/String,nearFile/Value>#get
  local.set $2
  local.get $1
  local.set $6
  nop
  local.get $2
 )
 (func $nearFile/Obj#has (; 253 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/map/Map<~lib/string/String,nearFile/Value>#has
  local.set $2
  local.get $1
  local.set $4
  nop
  local.get $2
 )
 (func $nearFile/isReallyNullable<~lib/string/String> (; 254 ;) (type $FUNCSIG$i) (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
 )
 (func $nearFile/decode<~lib/string/String,nearFile/Obj> (; 255 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  local.get $0
  local.set $9
  local.get $9
  drop
  local.get $1
  local.set $10
  local.get $10
  drop
  local.get $0
  local.set $11
  local.get $11
  local.set $2
  i32.const 0
  local.set $3
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 24
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 1008
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.set $12
   local.get $12
   local.set $4
   local.get $4
   local.get $1
   call $nearFile/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    i32.const 0
    local.set $13
    local.get $13
    local.set $6
    local.get $0
    local.set $14
    nop
    local.get $1
    local.set $15
    nop
    local.get $2
    local.set $16
    nop
    local.get $3
    local.set $17
    nop
    local.get $4
    local.set $18
    nop
    local.get $5
    local.set $19
    nop
    local.get $6
    return
   end
   local.get $5
   local.tee $6
   local.get $3
   local.tee $7
   i32.ne
   if
    local.get $6
    local.set $20
    local.get $20
    drop
    local.get $7
    local.set $21
    nop
   end
   local.get $6
   local.set $3
   local.get $4
   local.set $22
   nop
   local.get $5
   local.set $23
   nop
  else
   local.get $2
   local.tee $7
   local.get $3
   local.tee $5
   i32.ne
   if
    local.get $7
    local.set $24
    local.get $24
    drop
    local.get $5
    local.set $25
    nop
   end
   local.get $7
   local.set $3
  end
  local.get $3
  local.tee $7
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $7
   i32.const 30
   call $~lib/rt/__instanceof
  end
  if
   call $nearFile/isReallyNullable<~lib/string/String>
   i32.eqz
   if
    i32.const 5112
    local.get $1
    call $~lib/string/String.__concat
    local.tee $7
    i32.const 5144
    call $~lib/string/String.__concat
    local.tee $5
    i32.const 5424
    call $~lib/string/String.__concat
    local.tee $4
    i32.const 5224
    call $~lib/string/String.__concat
    local.tee $6
    i32.const 5272
    i32.const 381
    i32.const 4
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   local.set $26
   local.get $26
   local.set $8
   local.get $7
   local.set $27
   nop
   local.get $5
   local.set $28
   nop
   local.get $4
   local.set $29
   nop
   local.get $6
   local.set $30
   nop
   local.get $0
   local.set $31
   nop
   local.get $1
   local.set $32
   nop
   local.get $2
   local.set $33
   nop
   local.get $3
   local.set $34
   nop
   local.get $8
   return
  end
  local.get $3
  local.set $35
  local.get $35
  local.set $7
  local.get $1
  local.set $36
  local.get $36
  local.set $8
  local.get $7
  local.tee $6
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $6
   i32.const 27
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 5304
   local.get $8
   call $~lib/string/String.__concat
   local.tee $6
   i32.const 5456
   call $~lib/string/String.__concat
   local.tee $4
   i32.const 5272
   i32.const 345
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $7
  i32.load
  local.set $37
  local.get $37
  local.set $5
  local.get $8
  local.set $38
  nop
  local.get $7
  local.set $39
  nop
  local.get $6
  local.set $40
  nop
  local.get $4
  local.set $41
  nop
  local.get $5
  local.set $4
  local.get $0
  local.set $42
  nop
  local.get $1
  local.set $43
  nop
  local.get $2
  local.set $44
  nop
  local.get $3
  local.set $45
  nop
  local.get $4
  return
 )
 (func $~lib/util/string/isSpace (; 256 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 255
  i32.le_s
  if
   local.get $0
   i32.const 32
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $0
    i32.const 9
    i32.sub
    i32.const 13
    i32.const 9
    i32.sub
    i32.le_u
   end
   if (result i32)
    i32.const 1
   else
    local.get $0
    i32.const 160
    i32.eq
   end
   return
  end
  local.get $0
  i32.const 8192
  i32.sub
  i32.const 10
  i32.le_u
  if
   i32.const 1
   return
  end
  block $break|0
   block $case6|0
    block $case5|0
     block $case4|0
      block $case3|0
       block $case2|0
        block $case1|0
         block $case0|0
          local.get $0
          local.set $1
          local.get $1
          i32.const 5760
          i32.eq
          br_if $case0|0
          local.get $1
          i32.const 8232
          i32.eq
          br_if $case1|0
          local.get $1
          i32.const 8233
          i32.eq
          br_if $case2|0
          local.get $1
          i32.const 8239
          i32.eq
          br_if $case3|0
          local.get $1
          i32.const 8287
          i32.eq
          br_if $case4|0
          local.get $1
          i32.const 12288
          i32.eq
          br_if $case5|0
          local.get $1
          i32.const 65279
          i32.eq
          br_if $case6|0
          br $break|0
         end
        end
       end
      end
     end
    end
   end
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $~lib/util/string/strtol<i64> (; 257 ;) (type $FUNCSIG$jii) (param $0 i32) (param $1 i32) (result i64)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  local.get $0
  local.set $9
  local.get $9
  drop
  local.get $0
  call $~lib/string/String#get:length
  local.set $2
  local.get $2
  i32.eqz
  if
   i64.const 0
   local.set $3
   local.get $0
   local.set $10
   nop
   local.get $3
   return
  end
  local.get $0
  local.set $4
  local.get $4
  i32.load16_u
  local.set $5
  i64.const 1
  local.set $6
  block $break|0
   loop $continue|0
    local.get $5
    call $~lib/util/string/isSpace
    i32.eqz
    br_if $break|0
    local.get $4
    i32.const 2
    i32.add
    local.tee $4
    i32.load16_u
    local.set $5
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $continue|0
   end
   unreachable
  end
  local.get $5
  i32.const 45
  i32.eq
  if
   local.get $2
   i32.const 1
   i32.sub
   local.tee $2
   i32.eqz
   if
    i64.const 0
    local.set $3
    local.get $0
    local.set $11
    nop
    local.get $3
    return
   end
   local.get $4
   i32.const 2
   i32.add
   local.tee $4
   i32.load16_u
   local.set $5
   i64.const -1
   local.set $6
  else
   local.get $5
   i32.const 43
   i32.eq
   if
    local.get $2
    i32.const 1
    i32.sub
    local.tee $2
    i32.eqz
    if
     i64.const 0
     local.set $3
     local.get $0
     local.set $12
     nop
     local.get $3
     return
    end
    local.get $4
    i32.const 2
    i32.add
    local.tee $4
    i32.load16_u
    local.set $5
   end
  end
  local.get $1
  i32.eqz
  if
   local.get $5
   i32.const 48
   i32.eq
   if (result i32)
    local.get $2
    i32.const 2
    i32.gt_s
   else
    i32.const 0
   end
   if
    block $break|1
     block $case3|1
      block $case2|1
       block $case1|1
        block $case0|1
         local.get $4
         i32.const 2
         i32.add
         i32.load16_u
         i32.const 32
         i32.or
         local.set $7
         local.get $7
         i32.const 98
         i32.eq
         br_if $case0|1
         local.get $7
         i32.const 111
         i32.eq
         br_if $case1|1
         local.get $7
         i32.const 120
         i32.eq
         br_if $case2|1
         br $case3|1
        end
        local.get $4
        i32.const 4
        i32.add
        local.set $4
        local.get $2
        i32.const 2
        i32.sub
        local.set $2
        i32.const 2
        local.set $1
        br $break|1
       end
       local.get $4
       i32.const 4
       i32.add
       local.set $4
       local.get $2
       i32.const 2
       i32.sub
       local.set $2
       i32.const 8
       local.set $1
       br $break|1
      end
      local.get $4
      i32.const 4
      i32.add
      local.set $4
      local.get $2
      i32.const 2
      i32.sub
      local.set $2
      i32.const 16
      local.set $1
      br $break|1
     end
     i32.const 10
     local.set $1
    end
   else
    i32.const 10
    local.set $1
   end
  else
   local.get $1
   i32.const 2
   i32.lt_s
   if (result i32)
    i32.const 1
   else
    local.get $1
    i32.const 36
    i32.gt_s
   end
   if
    i64.const 0
    local.set $3
    local.get $0
    local.set $13
    nop
    local.get $3
    return
   end
  end
  i64.const 0
  local.set $8
  block $break|2
   loop $continue|2
    local.get $2
    local.tee $7
    i32.const 1
    i32.sub
    local.set $2
    local.get $7
    i32.eqz
    br_if $break|2
    local.get $4
    i32.load16_u
    local.set $5
    local.get $5
    i32.const 48
    i32.sub
    i32.const 10
    i32.lt_u
    if
     local.get $5
     i32.const 48
     i32.sub
     local.set $5
    else
     local.get $5
     i32.const 65
     i32.sub
     i32.const 25
     i32.le_u
     if
      local.get $5
      i32.const 65
      i32.const 10
      i32.sub
      i32.sub
      local.set $5
     else
      local.get $5
      i32.const 97
      i32.sub
      i32.const 25
      i32.le_u
      if
       local.get $5
       i32.const 97
       i32.const 10
       i32.sub
       i32.sub
       local.set $5
      else
       br $break|2
      end
     end
    end
    local.get $5
    local.get $1
    i32.ge_u
    if
     br $break|2
    end
    local.get $8
    local.get $1
    i64.extend_i32_s
    i64.mul
    local.get $5
    i64.extend_i32_u
    i64.add
    local.set $8
    local.get $4
    i32.const 2
    i32.add
    local.set $4
    br $continue|2
   end
   unreachable
  end
  local.get $6
  local.get $8
  i64.mul
  local.set $3
  local.get $0
  local.set $14
  nop
  local.get $3
 )
 (func $~lib/number/I64.parseInt (; 258 ;) (type $FUNCSIG$jii) (param $0 i32) (param $1 i32) (result i64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  local.set $3
  local.get $3
  drop
  local.get $0
  local.get $1
  call $~lib/util/string/strtol<i64>
  local.set $2
  local.get $0
  local.set $4
  nop
  local.get $2
 )
 (func $nearFile/decode<u64,nearFile/Obj> (; 259 ;) (type $FUNCSIG$jii) (param $0 i32) (param $1 i32) (result i64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  local.get $0
  local.set $11
  local.get $11
  drop
  local.get $1
  local.set $12
  local.get $12
  drop
  local.get $0
  local.set $13
  local.get $13
  local.set $2
  i32.const 0
  local.set $3
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 24
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 1008
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.set $14
   local.get $14
   local.set $4
   local.get $4
   local.get $1
   call $nearFile/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    i32.const 0
    i64.extend_i32_u
    local.set $6
    local.get $0
    local.set $15
    nop
    local.get $1
    local.set $16
    nop
    local.get $2
    local.set $17
    nop
    local.get $3
    local.set $18
    nop
    local.get $4
    local.set $19
    nop
    local.get $5
    local.set $20
    nop
    local.get $6
    return
   end
   local.get $5
   local.tee $7
   local.get $3
   local.tee $8
   i32.ne
   if
    local.get $7
    local.set $21
    local.get $21
    drop
    local.get $8
    local.set $22
    nop
   end
   local.get $7
   local.set $3
   local.get $4
   local.set $23
   nop
   local.get $5
   local.set $24
   nop
  else
   local.get $2
   local.tee $8
   local.get $3
   local.tee $5
   i32.ne
   if
    local.get $8
    local.set $25
    local.get $25
    drop
    local.get $5
    local.set $26
    nop
   end
   local.get $8
   local.set $3
  end
  local.get $3
  local.tee $8
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $8
   i32.const 30
   call $~lib/rt/__instanceof
  end
  if
   i32.const 0
   if (result i32)
    i32.const 1
   else
    i32.const 0
   end
   if (result i32)
    i32.const 1
   else
    i32.const 0
   end
   if (result i32)
    i32.const 1
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5112
    local.get $1
    call $~lib/string/String.__concat
    local.tee $8
    i32.const 5144
    call $~lib/string/String.__concat
    local.tee $5
    i32.const 5520
    call $~lib/string/String.__concat
    local.tee $4
    i32.const 5224
    call $~lib/string/String.__concat
    local.tee $7
    i32.const 5272
    i32.const 381
    i32.const 4
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   i64.extend_i32_u
   local.set $6
   local.get $8
   local.set $27
   nop
   local.get $5
   local.set $28
   nop
   local.get $4
   local.set $29
   nop
   local.get $7
   local.set $30
   nop
   local.get $0
   local.set $31
   nop
   local.get $1
   local.set $32
   nop
   local.get $2
   local.set $33
   nop
   local.get $3
   local.set $34
   nop
   local.get $6
   return
  end
  local.get $3
  local.tee $7
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $7
   i32.const 27
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 5304
   local.get $1
   call $~lib/string/String.__concat
   local.tee $7
   i32.const 5144
   call $~lib/string/String.__concat
   local.tee $4
   i32.const 5520
   call $~lib/string/String.__concat
   local.tee $5
   i32.const 5544
   call $~lib/string/String.__concat
   local.tee $8
   i32.const 5272
   i32.const 398
   i32.const 6
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.load
  local.set $35
  local.get $35
  local.set $10
  local.get $10
  i32.const 0
  call $~lib/number/I64.parseInt
  local.set $6
  local.get $7
  local.set $36
  nop
  local.get $4
  local.set $37
  nop
  local.get $5
  local.set $38
  nop
  local.get $8
  local.set $39
  nop
  local.get $10
  local.set $40
  nop
  local.get $0
  local.set $41
  nop
  local.get $1
  local.set $42
  nop
  local.get $2
  local.set $43
  nop
  local.get $3
  local.set $44
  nop
  local.get $6
  return
 )
 (func $nearFile/decode<bool,nearFile/Obj> (; 260 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  local.get $0
  local.set $9
  local.get $9
  drop
  local.get $1
  local.set $10
  local.get $10
  drop
  local.get $0
  local.set $11
  local.get $11
  local.set $2
  i32.const 0
  local.set $3
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 24
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 1008
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.set $12
   local.get $12
   local.set $4
   local.get $4
   local.get $1
   call $nearFile/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    i32.const 0
    local.set $6
    local.get $0
    local.set $13
    nop
    local.get $1
    local.set $14
    nop
    local.get $2
    local.set $15
    nop
    local.get $3
    local.set $16
    nop
    local.get $4
    local.set $17
    nop
    local.get $5
    local.set $18
    nop
    local.get $6
    return
   end
   local.get $5
   local.tee $6
   local.get $3
   local.tee $7
   i32.ne
   if
    local.get $6
    local.set $19
    local.get $19
    drop
    local.get $7
    local.set $20
    nop
   end
   local.get $6
   local.set $3
   local.get $4
   local.set $21
   nop
   local.get $5
   local.set $22
   nop
  else
   local.get $2
   local.tee $7
   local.get $3
   local.tee $5
   i32.ne
   if
    local.get $7
    local.set $23
    local.get $23
    drop
    local.get $5
    local.set $24
    nop
   end
   local.get $7
   local.set $3
  end
  local.get $3
  local.tee $7
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $7
   i32.const 30
   call $~lib/rt/__instanceof
  end
  if
   i32.const 0
   if (result i32)
    i32.const 1
   else
    i32.const 0
   end
   if (result i32)
    i32.const 1
   else
    i32.const 0
   end
   if (result i32)
    i32.const 1
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5112
    local.get $1
    call $~lib/string/String.__concat
    local.tee $7
    i32.const 5144
    call $~lib/string/String.__concat
    local.tee $5
    i32.const 5688
    call $~lib/string/String.__concat
    local.tee $4
    i32.const 5224
    call $~lib/string/String.__concat
    local.tee $6
    i32.const 5272
    i32.const 381
    i32.const 4
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   local.set $8
   local.get $7
   local.set $25
   nop
   local.get $5
   local.set $26
   nop
   local.get $4
   local.set $27
   nop
   local.get $6
   local.set $28
   nop
   local.get $0
   local.set $29
   nop
   local.get $1
   local.set $30
   nop
   local.get $2
   local.set $31
   nop
   local.get $3
   local.set $32
   nop
   local.get $8
   return
  end
  local.get $3
  local.tee $6
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $6
   i32.const 28
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 5304
   local.get $1
   call $~lib/string/String.__concat
   local.tee $6
   i32.const 5144
   call $~lib/string/String.__concat
   local.tee $4
   i32.const 5688
   call $~lib/string/String.__concat
   local.tee $5
   i32.const 5712
   call $~lib/string/String.__concat
   local.tee $7
   i32.const 5272
   i32.const 390
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.load8_u
  local.set $8
  local.get $6
  local.set $33
  nop
  local.get $4
  local.set $34
  nop
  local.get $5
  local.set $35
  nop
  local.get $7
  local.set $36
  nop
  local.get $0
  local.set $37
  nop
  local.get $1
  local.set $38
  nop
  local.get $2
  local.set $39
  nop
  local.get $3
  local.set $40
  nop
  local.get $8
  return
 )
 (func $assembly/__tests__/model/TextMessage#_decode (; 261 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  local.tee $2
  local.get $1
  i32.const 3736
  call $nearFile/Obj#has
  if (result i32)
   local.get $1
   i32.const 3736
   call $nearFile/decode<~lib/string/String,nearFile/Obj>
  else
   local.get $0
   i32.load
   local.set $5
   local.get $5
  end
  local.set $3
  local.get $2
  i32.load
  local.set $6
  nop
  local.get $3
  i32.store
  local.get $0
  local.tee $3
  local.get $1
  i32.const 3768
  call $nearFile/Obj#has
  if (result i32)
   local.get $1
   i32.const 3768
   call $nearFile/decode<~lib/string/String,nearFile/Obj>
  else
   local.get $0
   i32.load offset=4
   local.set $7
   local.get $7
  end
  local.set $2
  local.get $3
  i32.load offset=4
  local.set $8
  nop
  local.get $2
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 3792
  call $nearFile/Obj#has
  if (result i64)
   local.get $1
   i32.const 3792
   call $nearFile/decode<u64,nearFile/Obj>
  else
   local.get $0
   i64.load offset=8
  end
  i64.store offset=8
  local.get $0
  local.get $1
  i32.const 3824
  call $nearFile/Obj#has
  if (result i32)
   local.get $1
   i32.const 3824
   call $nearFile/decode<bool,nearFile/Obj>
  else
   local.get $0
   i32.load8_u offset=16
  end
  i32.store8 offset=16
  local.get $0
  local.set $9
  local.get $9
  local.set $2
  local.get $1
  local.set $10
  nop
  local.get $2
 )
 (func $assembly/__tests__/model/TextMessage#decode<nearFile/Obj> (; 262 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  i32.const 0
  local.set $2
  local.get $1
  local.tee $3
  local.get $2
  local.tee $4
  i32.ne
  if
   local.get $3
   local.set $6
   local.get $6
   drop
   local.get $4
   local.set $7
   nop
  end
  local.get $3
  local.set $2
  local.get $0
  local.get $2
  call $assembly/__tests__/model/TextMessage#_decode
  local.set $3
  local.get $2
  local.set $8
  nop
  local.get $1
  local.set $9
  nop
  local.get $3
 )
 (func $nearFile/decode<assembly/__tests__/model/TextMessage,~lib/typedarray/Uint8Array> (; 263 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  local.get $0
  local.set $13
  local.get $13
  drop
  local.get $1
  local.set $14
  local.get $14
  drop
  local.get $0
  call $nearFile/JSON.parse
  local.tee $2
  local.set $15
  local.get $15
  local.set $3
  i32.const 0
  local.set $4
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 24
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 1008
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $3
   local.set $16
   local.get $16
   local.set $5
   local.get $5
   local.get $1
   call $nearFile/Obj#get
   local.set $6
   local.get $6
   i32.const 0
   i32.eq
   if
    i32.const 0
    local.set $17
    local.get $17
    local.set $7
    local.get $0
    local.set $18
    nop
    local.get $1
    local.set $19
    nop
    local.get $2
    local.set $20
    nop
    local.get $3
    local.set $21
    nop
    local.get $4
    local.set $22
    nop
    local.get $5
    local.set $23
    nop
    local.get $6
    local.set $24
    nop
    local.get $7
    return
   end
   local.get $6
   local.tee $7
   local.get $4
   local.tee $8
   i32.ne
   if
    local.get $7
    local.set $25
    local.get $25
    drop
    local.get $8
    local.set $26
    nop
   end
   local.get $7
   local.set $4
   local.get $5
   local.set $27
   nop
   local.get $6
   local.set $28
   nop
  else
   local.get $3
   local.tee $8
   local.get $4
   local.tee $6
   i32.ne
   if
    local.get $8
    local.set $29
    local.get $29
    drop
    local.get $6
    local.set $30
    nop
   end
   local.get $8
   local.set $4
  end
  local.get $4
  local.tee $8
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $8
   i32.const 30
   call $~lib/rt/__instanceof
  end
  if
   i32.const 1
   if (result i32)
    i32.const 1
   else
    i32.const 0
   end
   if (result i32)
    i32.const 1
   else
    i32.const 0
   end
   if (result i32)
    i32.const 1
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5112
    local.get $1
    call $~lib/string/String.__concat
    local.tee $8
    i32.const 5144
    call $~lib/string/String.__concat
    local.tee $6
    i32.const 5184
    call $~lib/string/String.__concat
    local.tee $5
    i32.const 5224
    call $~lib/string/String.__concat
    local.tee $7
    i32.const 5272
    i32.const 381
    i32.const 4
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   local.set $31
   local.get $31
   local.set $9
   local.get $8
   local.set $32
   nop
   local.get $6
   local.set $33
   nop
   local.get $5
   local.set $34
   nop
   local.get $7
   local.set $35
   nop
   local.get $0
   local.set $36
   nop
   local.get $1
   local.set $37
   nop
   local.get $2
   local.set $38
   nop
   local.get $3
   local.set $39
   nop
   local.get $4
   local.set $40
   nop
   local.get $9
   return
  end
  i32.const 0
  local.set $10
  local.get $4
  local.tee $7
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $7
   i32.const 24
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 5304
   local.get $1
   call $~lib/string/String.__concat
   local.tee $7
   i32.const 5144
   call $~lib/string/String.__concat
   local.tee $5
   i32.const 5184
   call $~lib/string/String.__concat
   local.tee $6
   i32.const 5352
   call $~lib/string/String.__concat
   local.tee $8
   i32.const 5272
   i32.const 425
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  call $assembly/__tests__/model/TextMessage#constructor
  local.tee $9
  local.tee $11
  local.get $10
  local.tee $12
  i32.ne
  if
   local.get $11
   local.set $41
   local.get $41
   drop
   local.get $12
   local.set $42
   nop
  end
  local.get $11
  local.set $10
  local.get $10
  local.get $4
  call $assembly/__tests__/model/TextMessage#decode<nearFile/Obj>
  local.set $11
  local.get $2
  local.set $43
  nop
  local.get $3
  local.set $44
  nop
  local.get $7
  local.set $45
  nop
  local.get $5
  local.set $46
  nop
  local.get $6
  local.set $47
  nop
  local.get $8
  local.set $48
  nop
  local.get $9
  local.set $49
  nop
  local.get $0
  local.set $50
  nop
  local.get $1
  local.set $51
  nop
  local.get $4
  local.set $52
  nop
  local.get $10
  local.set $53
  nop
  local.get $11
 )
 (func $~lib/near-runtime-ts/util/util.parseFromBytes<assembly/__tests__/model/TextMessage> (; 264 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  local.get $0
  i32.const 1008
  call $nearFile/decode<assembly/__tests__/model/TextMessage,~lib/typedarray/Uint8Array>
  local.set $1
  local.get $0
  local.set $3
  nop
  local.get $1
 )
 (func $~lib/near-runtime-ts/storage/Storage#get<assembly/__tests__/model/TextMessage> (; 265 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $2
  local.set $6
  local.get $6
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#getBytes
  local.set $3
  local.get $3
  i32.const 0
  i32.eq
  if (result i32)
   local.get $2
   local.set $7
   local.get $7
  else
   local.get $3
   local.tee $4
   if (result i32)
    local.get $4
   else
    unreachable
   end
   call $~lib/near-runtime-ts/util/util.parseFromBytes<assembly/__tests__/model/TextMessage>
  end
  local.set $4
  local.get $3
  local.set $8
  nop
  local.get $1
  local.set $9
  nop
  local.get $2
  local.set $10
  nop
  local.get $4
  return
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#constructor (; 266 ;) (type $FUNCSIG$iij) (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  local.get $0
  i32.eqz
  if
   i32.const 16
   i32.const 31
   call $~lib/rt/stub/__alloc
   local.set $2
   local.get $2
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i64.const 0
  i64.store offset=8
  local.get $0
  local.get $1
  i64.store offset=8
  local.get $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64> (; 267 ;) (type $FUNCSIG$ij) (param $0 i64) (result i32)
  i32.const 0
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#constructor
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Box/Box<u64>#constructor (; 268 ;) (type $FUNCSIG$iij) (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 32
   call $~lib/rt/stub/__alloc
   local.set $2
   local.get $2
   local.set $0
  end
  local.get $0
  local.get $1
  i64.store
  local.get $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.report<u64> (; 269 ;) (type $FUNCSIG$vj) (param $0 i64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
  i32.const 10
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.type
  local.get $0
  drop
  i32.const 0
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.signed
  i32.const 0
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/report/Box/Box<u64>#constructor
  local.set $1
  local.get $1
  local.set $2
  local.get $2
  local.set $3
  local.get $3
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference
  local.set $4
  nop
  local.get $2
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference
  i32.const 1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.isManaged
  local.get $1
  local.set $5
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<u64> (; 270 ;) (type $FUNCSIG$vji) (param $0 i64) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.ready
  i32.eqz
  if
   call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportInvalidExpectCall
   return
  end
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
  local.get $1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
  i32.const 10
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.type
  local.get $0
  drop
  i32.const 0
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.signed
  i32.const 0
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/report/Box/Box<u64>#constructor
  local.set $2
  local.get $2
  local.set $3
  local.get $3
  local.set $4
  local.get $4
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
  local.set $5
  nop
  local.get $3
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
  local.get $2
  local.set $6
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<u64> (; 271 ;) (type $FUNCSIG$vjjii) (param $0 i64) (param $1 i64) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $3
  local.set $4
  local.get $4
  drop
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.report<u64>
  local.get $1
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<u64>
  local.get $2
  local.get $1
  local.get $0
  i64.eq
  i32.xor
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/assert/assert
  local.get $3
  local.set $5
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe (; 272 ;) (type $FUNCSIG$viji) (param $0 i32) (param $1 i64) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  local.set $3
  local.get $3
  drop
  local.get $0
  i64.load offset=8
  local.get $1
  local.get $0
  i32.load
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<u64>
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.clear
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.clear
  local.get $2
  local.set $4
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/__tests__/model/TextMessage | null>#constructor (; 273 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 33
   call $~lib/rt/stub/__alloc
   local.set $5
   local.get $5
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.tee $2
  local.get $1
  local.tee $3
  local.get $2
  i32.load offset=4
  local.tee $2
  i32.ne
  if
   local.get $3
   local.set $6
   local.get $6
   drop
   local.get $2
   local.set $7
   nop
  end
  local.get $3
  i32.store offset=4
  local.get $1
  local.set $8
  nop
  local.get $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/__tests__/model/TextMessage | null> (; 274 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  i32.const 0
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/__tests__/model/TextMessage | null>#constructor
  local.set $1
  local.get $0
  local.set $3
  nop
  local.get $1
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.report<assembly/__tests__/model/TextMessage | null> (; 275 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
  local.get $0
  i32.const 0
  i32.eq
  if
   i32.const 1
   global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.type
   local.get $0
   local.set $3
   nop
   return
  end
  local.get $0
  local.set $1
  local.get $1
  local.set $4
  local.get $4
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.isManaged
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference
   local.set $5
   nop
  end
  local.get $1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference
  i32.const 1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.isManaged
  i32.const 4
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.type
  i32.const 17
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.offset
  local.get $0
  local.set $6
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<assembly/__tests__/model/TextMessage | null> (; 276 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $0
  local.set $3
  local.get $3
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.ready
  i32.eqz
  if
   call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportInvalidExpectCall
   local.get $0
   local.set $4
   nop
   return
  end
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
  local.get $1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
  local.get $0
  i32.const 0
  i32.eq
  if
   i32.const 1
   global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.type
   local.get $0
   local.set $5
   nop
   return
  end
  local.get $0
  local.set $2
  local.get $2
  local.set $6
  local.get $6
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.isManaged
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
   local.set $7
   nop
  end
  local.get $2
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
  i32.const 1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.isManaged
  i32.const 4
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.type
  i32.const 17
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.offset
  local.get $0
  local.set $8
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<assembly/__tests__/model/TextMessage | null> (; 277 ;) (type $FUNCSIG$viiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  local.set $4
  local.get $4
  drop
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $3
  local.set $6
  local.get $6
  drop
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.report<assembly/__tests__/model/TextMessage | null>
  local.get $1
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<assembly/__tests__/model/TextMessage | null>
  local.get $2
  local.get $1
  local.get $0
  i32.eq
  i32.xor
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/assert/assert
  local.get $0
  local.set $7
  nop
  local.get $1
  local.set $8
  nop
  local.get $3
  local.set $9
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/__tests__/model/TextMessage | null>#toBe (; 278 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $2
  local.set $4
  local.get $4
  drop
  local.get $0
  i32.load offset=4
  local.get $1
  local.get $0
  i32.load
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<assembly/__tests__/model/TextMessage | null>
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.clear
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.clear
  local.get $1
  local.set $5
  nop
  local.get $2
  local.set $6
  nop
 )
 (func $~lib/near-runtime-ts/storage/Storage#set<u64> (; 279 ;) (type $FUNCSIG$viij) (param $0 i32) (param $1 i32) (param $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  local.get $1
  local.get $2
  call $~lib/number/U64#toString
  local.tee $3
  call $~lib/near-runtime-ts/storage/Storage#setString
  local.get $3
  local.set $5
  nop
  local.get $1
  local.set $6
  nop
 )
 (func $~lib/number/U64.parseInt (; 280 ;) (type $FUNCSIG$jii) (param $0 i32) (param $1 i32) (result i64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  local.set $3
  local.get $3
  drop
  local.get $0
  local.get $1
  call $~lib/util/string/strtol<i64>
  local.set $2
  local.get $0
  local.set $4
  nop
  local.get $2
 )
 (func $~lib/near-runtime-ts/util/util.parseFromString<u64> (; 281 ;) (type $FUNCSIG$ji) (param $0 i32) (result i64)
  (local $1 i64)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  local.get $0
  i32.const 0
  call $~lib/number/U64.parseInt
  local.set $1
  local.get $0
  local.set $3
  nop
  local.get $1
  return
 )
 (func $~lib/near-runtime-ts/storage/Storage#getPrimitive<u64> (; 282 ;) (type $FUNCSIG$jiij) (param $0 i32) (param $1 i32) (param $2 i64) (result i64)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.set $3
  local.get $3
  i32.const 0
  call $~lib/string/String.__eq
  if (result i64)
   local.get $2
  else
   local.get $3
   call $~lib/near-runtime-ts/util/util.parseFromString<u64>
  end
  local.set $4
  local.get $3
  local.set $6
  nop
  local.get $1
  local.set $7
  nop
  local.get $4
  return
 )
 (func $~lib/util/number/utoa32 (; 283 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.eqz
  if
   i32.const 2656
   local.set $6
   local.get $6
   return
  end
  local.get $0
  call $~lib/util/number/decimalCount32
  local.set $1
  local.get $1
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/stub/__alloc
  local.set $2
  local.get $2
  local.set $5
  local.get $0
  local.set $4
  local.get $1
  local.set $3
  local.get $5
  local.get $4
  local.get $3
  call $~lib/util/number/utoa32_lut
  local.get $2
  local.set $7
  local.get $7
 )
 (func $~lib/number/U32#toString (; 284 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  block $__inlined_func$~lib/util/number/itoa<u32> (result i32)
   local.get $0
   local.set $1
   local.get $1
   call $~lib/util/number/utoa32
   br $__inlined_func$~lib/util/number/itoa<u32>
  end
 )
 (func $~lib/near-runtime-ts/storage/Storage#set<u32> (; 285 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  local.get $1
  local.get $2
  call $~lib/number/U32#toString
  local.tee $3
  call $~lib/near-runtime-ts/storage/Storage#setString
  local.get $3
  local.set $5
  nop
  local.get $1
  local.set $6
  nop
 )
 (func $~lib/near-runtime-ts/util/util.parseFromString<u32> (; 286 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  local.get $0
  i32.const 0
  call $~lib/number/U64.parseInt
  i32.wrap_i64
  local.set $1
  local.get $0
  local.set $3
  nop
  local.get $1
  return
 )
 (func $~lib/near-runtime-ts/storage/Storage#getPrimitive<u32> (; 287 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.set $3
  local.get $3
  i32.const 0
  call $~lib/string/String.__eq
  if (result i32)
   local.get $2
  else
   local.get $3
   call $~lib/near-runtime-ts/util/util.parseFromString<u32>
  end
  local.set $4
  local.get $3
  local.set $6
  nop
  local.get $1
  local.set $7
  nop
  local.get $4
  return
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u32>#constructor (; 288 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 34
   call $~lib/rt/stub/__alloc
   local.set $2
   local.get $2
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u32> (; 289 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  i32.const 0
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u32>#constructor
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.report<u32> (; 290 ;) (type $FUNCSIG$vi) (param $0 i32)
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
  i32.const 3
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.type
  local.get $0
  drop
  i32.const 0
  if (result i32)
   i32.const 1
  else
   local.get $0
   drop
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   local.get $0
   drop
   i32.const 0
  end
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.signed
  local.get $0
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.integer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<u32> (; 291 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.ready
  i32.eqz
  if
   call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportInvalidExpectCall
   return
  end
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
  local.get $1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
  i32.const 3
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.type
  local.get $0
  drop
  i32.const 0
  if (result i32)
   i32.const 1
  else
   local.get $0
   drop
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   local.get $0
   drop
   i32.const 0
  end
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.signed
  local.get $0
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.integer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<u32> (; 292 ;) (type $FUNCSIG$viiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $3
  local.set $4
  local.get $4
  drop
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.report<u32>
  local.get $1
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<u32>
  local.get $2
  local.get $1
  local.get $0
  i32.eq
  i32.xor
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/assert/assert
  local.get $3
  local.set $5
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u32>#toBe (; 293 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  local.set $3
  local.get $3
  drop
  local.get $0
  i32.load offset=4
  local.get $1
  local.get $0
  i32.load
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<u32>
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.clear
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.clear
  local.get $2
  local.set $4
  nop
 )
 (func $~lib/near-runtime-ts/storage/Storage#set<i32> (; 294 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  local.get $1
  local.get $2
  call $~lib/number/I32#toString
  local.tee $3
  call $~lib/near-runtime-ts/storage/Storage#setString
  local.get $3
  local.set $5
  nop
  local.get $1
  local.set $6
  nop
 )
 (func $~lib/near-runtime-ts/util/util.parseFromString<i32> (; 295 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  local.get $0
  i32.const 0
  call $~lib/number/I64.parseInt
  i32.wrap_i64
  local.set $1
  local.get $0
  local.set $3
  nop
  local.get $1
  return
 )
 (func $~lib/near-runtime-ts/storage/Storage#getPrimitive<i32> (; 296 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.set $3
  local.get $3
  i32.const 0
  call $~lib/string/String.__eq
  if (result i32)
   local.get $2
  else
   local.get $3
   call $~lib/near-runtime-ts/util/util.parseFromString<i32>
  end
  local.set $4
  local.get $3
  local.set $6
  nop
  local.get $1
  local.set $7
  nop
  local.get $4
  return
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#constructor (; 297 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 35
   call $~lib/rt/stub/__alloc
   local.set $2
   local.get $2
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32> (; 298 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  i32.const 0
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#constructor
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.report<i32> (; 299 ;) (type $FUNCSIG$vi) (param $0 i32)
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
  i32.const 3
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.type
  local.get $0
  drop
  i32.const 1
  if (result i32)
   i32.const 1
  else
   local.get $0
   drop
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   local.get $0
   drop
   i32.const 0
  end
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.signed
  local.get $0
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.integer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<i32> (; 300 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.ready
  i32.eqz
  if
   call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportInvalidExpectCall
   return
  end
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
  local.get $1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
  i32.const 3
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.type
  local.get $0
  drop
  i32.const 1
  if (result i32)
   i32.const 1
  else
   local.get $0
   drop
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   local.get $0
   drop
   i32.const 0
  end
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.signed
  local.get $0
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.integer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<i32> (; 301 ;) (type $FUNCSIG$viiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $3
  local.set $4
  local.get $4
  drop
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.report<i32>
  local.get $1
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<i32>
  local.get $2
  local.get $1
  local.get $0
  i32.eq
  i32.xor
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/assert/assert
  local.get $3
  local.set $5
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe (; 302 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  local.set $3
  local.get $3
  drop
  local.get $0
  i32.load offset=4
  local.get $1
  local.get $0
  i32.load
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<i32>
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.clear
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.clear
  local.get $2
  local.set $4
  nop
 )
 (func $~lib/number/Bool#toString (; 303 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  if (result i32)
   i32.const 2600
   local.set $3
   local.get $3
   local.tee $1
  else
   i32.const 2624
   local.set $4
   local.get $4
   local.tee $2
  end
  local.set $5
  local.get $5
 )
 (func $~lib/near-runtime-ts/storage/Storage#set<bool> (; 304 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  local.get $1
  local.get $2
  call $~lib/number/Bool#toString
  local.tee $3
  call $~lib/near-runtime-ts/storage/Storage#setString
  local.get $3
  local.set $5
  nop
  local.get $1
  local.set $6
  nop
 )
 (func $~lib/near-runtime-ts/util/util.parseFromString<bool> (; 305 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  local.get $0
  i32.const 2600
  call $~lib/string/String.__eq
  local.set $1
  local.get $0
  local.set $3
  nop
  local.get $1
  return
 )
 (func $~lib/near-runtime-ts/storage/Storage#getPrimitive<bool> (; 306 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.set $3
  local.get $3
  i32.const 0
  call $~lib/string/String.__eq
  if (result i32)
   local.get $2
  else
   local.get $3
   call $~lib/near-runtime-ts/util/util.parseFromString<bool>
  end
  local.set $4
  local.get $3
  local.set $6
  nop
  local.get $1
  local.set $7
  nop
  local.get $4
  return
 )
 (func $~lib/near-runtime-ts/storage/Storage#set<~lib/string/String> (; 307 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $2
  local.set $4
  local.get $4
  drop
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#setString
  local.get $1
  local.set $5
  nop
  local.get $2
  local.set $6
  nop
 )
 (func $~lib/near-runtime-ts/util/util.parseFromString<~lib/string/String> (; 308 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  local.set $1
  local.get $1
  drop
  local.get $0
  return
 )
 (func $~lib/near-runtime-ts/storage/Storage#get<~lib/string/String> (; 309 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $2
  local.set $6
  local.get $6
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.set $3
  local.get $3
  i32.const 0
  call $~lib/string/String.__eq
  if (result i32)
   local.get $2
   local.set $7
   local.get $7
  else
   local.get $3
   call $~lib/near-runtime-ts/util/util.parseFromString<~lib/string/String>
  end
  local.set $4
  local.get $3
  local.set $8
  nop
  local.get $1
  local.set $9
  nop
  local.get $2
  local.set $10
  nop
  local.get $4
  return
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|6 (; 310 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  call $assembly/__tests__/util/_testTextMessage
  local.set $0
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2568
  local.get $0
  call $~lib/near-runtime-ts/storage/Storage#set<assembly/__tests__/model/TextMessage>
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 2568
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#get<assembly/__tests__/model/TextMessage>
  local.tee $1
  if (result i32)
   local.get $1
  else
   unreachable
  end
  local.set $20
  local.get $20
  local.set $1
  local.get $1
  i32.load
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $2
  i32.const 2472
  i32.const 5760
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $1
  i32.load offset=4
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $3
  i32.const 2528
  i32.const 5880
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $1
  i64.load offset=8
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64>
  local.tee $4
  i64.const 415
  i32.const 5992
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 6112
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#get<assembly/__tests__/model/TextMessage>
  local.tee $5
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/__tests__/model/TextMessage | null>
  local.tee $6
  i32.const 0
  i32.const 6152
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/__tests__/model/TextMessage | null>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 6264
  i32.const 0
  call $assembly/__tests__/model/TextMessage#constructor
  local.tee $7
  call $~lib/near-runtime-ts/storage/Storage#set<assembly/__tests__/model/TextMessage>
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 6296
  i64.const 20
  call $~lib/near-runtime-ts/storage/Storage#set<u64>
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 6296
  i64.const 0
  call $~lib/near-runtime-ts/storage/Storage#getPrimitive<u64>
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64>
  local.tee $8
  i64.const 20
  i32.const 6328
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 6112
  i64.const 1
  call $~lib/near-runtime-ts/storage/Storage#getPrimitive<u64>
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64>
  local.tee $9
  i64.const 1
  i32.const 6424
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 6536
  i32.const 12
  call $~lib/near-runtime-ts/storage/Storage#set<u32>
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 6536
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#getPrimitive<u32>
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u32>
  local.tee $10
  i32.const 12
  i32.const 6568
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u32>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 6112
  i32.const 2
  call $~lib/near-runtime-ts/storage/Storage#getPrimitive<u32>
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u32>
  local.tee $11
  i32.const 2
  i32.const 6664
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u32>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 6776
  i32.const -5
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 6776
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#getPrimitive<i32>
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $12
  i32.const -5
  i32.const 6808
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 6112
  i32.const -10
  call $~lib/near-runtime-ts/storage/Storage#getPrimitive<i32>
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $13
  i32.const -10
  i32.const 6904
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7016
  i32.const 1
  call $~lib/near-runtime-ts/storage/Storage#set<bool>
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7016
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#getPrimitive<bool>
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $14
  i32.const 1
  i32.const 7048
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 6112
  i32.const 1
  call $~lib/near-runtime-ts/storage/Storage#getPrimitive<bool>
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $15
  i32.const 1
  i32.const 7144
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7264
  i32.const 7304
  call $~lib/near-runtime-ts/storage/Storage#set<~lib/string/String>
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7264
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#get<~lib/string/String>
  local.set $16
  local.get $16
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String | null>
  local.tee $17
  i32.const 7304
  i32.const 7344
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String | null>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 6112
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#get<~lib/string/String>
  local.tee $18
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String | null>
  local.tee $19
  i32.const 0
  i32.const 7448
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String | null>#toBe
  local.get $0
  local.set $21
  nop
  local.get $1
  local.set $22
  nop
  local.get $2
  local.set $23
  nop
  local.get $3
  local.set $24
  nop
  local.get $4
  local.set $25
  nop
  local.get $5
  local.set $26
  nop
  local.get $6
  local.set $27
  nop
  local.get $7
  local.set $28
  nop
  local.get $8
  local.set $29
  nop
  local.get $9
  local.set $30
  nop
  local.get $10
  local.set $31
  nop
  local.get $11
  local.set $32
  nop
  local.get $12
  local.set $33
  nop
  local.get $13
  local.set $34
  nop
  local.get $14
  local.set $35
  nop
  local.get $15
  local.set $36
  nop
  local.get $16
  local.set $37
  nop
  local.get $17
  local.set $38
  nop
  local.get $18
  local.set $39
  nop
  local.get $19
  local.set $40
  nop
 )
 (func $~lib/near-runtime-ts/storage/Storage#delete (; 311 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $2
  local.get $2
  i32.load offset=8
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.storage_remove
  drop
  local.get $2
  local.set $4
  nop
  local.get $1
  local.set $5
  nop
 )
 (func $~lib/near-runtime-ts/storage/Storage#_fetchIter (; 312 ;) (type $FUNCSIG$iiji) (param $0 i32) (param $1 i64) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $3
  block $break|0
   loop $continue|0
    local.get $2
    local.tee $4
    i32.const 1
    i32.sub
    local.set $2
    local.get $4
    i32.const 0
    i32.ne
    if (result i32)
     local.get $1
     i64.const 0
     i64.const 1
     call $~lib/near-runtime-ts/runtime_api/runtime_api.storage_iter_next
     i64.const 1
     i64.eq
    else
     i32.const 0
    end
    i32.eqz
    br_if $break|0
    i64.const 0
    call $~lib/near-runtime-ts/util/util.read_register
    local.set $4
    local.get $4
    i32.const 0
    i32.ne
    if
     local.get $3
     local.get $4
     call $~lib/near-runtime-ts/util/util.bytesToString
     local.tee $5
     call $~lib/array/Array<~lib/string/String>#push
     drop
     local.get $5
     local.set $6
     nop
    end
    local.get $4
    local.set $7
    nop
    br $continue|0
   end
   unreachable
  end
  local.get $3
 )
 (func $~lib/near-runtime-ts/storage/Storage#keys (; 313 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.set $6
  local.get $6
  drop
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $3
  local.get $3
  i32.load offset=8
  i64.extend_i32_s
  local.get $3
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-runtime-ts/runtime_api/runtime_api.storage_iter_prefix
  local.set $4
  local.get $0
  local.get $4
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#_fetchIter
  local.set $5
  local.get $3
  local.set $7
  nop
  local.get $1
  local.set $8
  nop
  local.get $5
 )
 (func $~lib/near-runtime-ts/storage/Storage#keys|trampoline (; 314 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~lib/argc
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#keys
 )
 (func $~lib/array/Array<~lib/string/String>#__get (; 315 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 760
   i32.const 1560
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $4
  local.get $1
  local.set $5
  i32.const 0
  local.set $6
  local.get $4
  i32.load offset=4
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $6
  local.get $6
  local.set $2
  local.get $2
  i32.eqz
  if
   local.get $2
   local.set $3
   nop
   i32.const 4072
   i32.const 1560
   i32.const 97
   i32.const 39
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/log/log<~lib/string/String> (; 316 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $1
  local.get $1
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/log/ignoreLogs
  if
   local.get $0
   local.set $2
   nop
   return
  end
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/log/logString
  local.get $0
  local.set $3
  nop
 )
 (func $~lib/near-runtime-ts/storage/Storage#keyRange (; 317 ;) (type $FUNCSIG$iiiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i64)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  local.get $1
  local.set $12
  local.get $12
  drop
  local.get $2
  local.set $13
  local.get $13
  drop
  i32.const 7904
  local.get $1
  call $~lib/string/String.__concat
  local.tee $4
  i32.const 7936
  call $~lib/string/String.__concat
  local.tee $5
  local.get $2
  call $~lib/string/String.__concat
  local.tee $6
  i32.const 7960
  call $~lib/string/String.__concat
  local.tee $7
  call $node_modules/@as-pect/assembly/assembly/internal/log/log<~lib/string/String>
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $8
  local.get $2
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $9
  local.get $8
  i32.load offset=8
  i64.extend_i32_s
  local.get $8
  i32.load offset=4
  i64.extend_i32_u
  local.get $9
  i32.load offset=8
  i64.extend_i32_s
  local.get $9
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-runtime-ts/runtime_api/runtime_api.storage_iter_range
  local.set $10
  local.get $0
  local.get $10
  local.get $3
  call $~lib/near-runtime-ts/storage/Storage#_fetchIter
  local.set $11
  local.get $4
  local.set $14
  nop
  local.get $5
  local.set $15
  nop
  local.get $6
  local.set $16
  nop
  local.get $7
  local.set $17
  nop
  local.get $8
  local.set $18
  nop
  local.get $9
  local.set $19
  nop
  local.get $1
  local.set $20
  nop
  local.get $2
  local.set $21
  nop
  local.get $11
 )
 (func $~lib/near-runtime-ts/storage/Storage#keyRange|trampoline (; 318 ;) (type $FUNCSIG$iiiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~lib/argc
     i32.const 2
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $3
  end
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $~lib/near-runtime-ts/storage/Storage#keyRange
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|7~anonymous|0 (; 319 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $4
  local.get $4
  drop
  local.get $2
  local.set $5
  local.get $5
  drop
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/log/log<~lib/string/String>
  local.get $0
  local.set $3
  local.get $2
  local.set $6
  nop
  local.get $3
 )
 (func $~lib/array/Array<~lib/string/String>#map<~lib/string/String> (; 320 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 2
  i32.const 8
  i32.const 0
  call $~lib/rt/__allocArray
  local.set $8
  local.get $8
  local.set $3
  local.get $3
  i32.load offset=4
  local.set $4
  block $break|0
   i32.const 0
   local.set $5
   loop $loop|0
    local.get $5
    local.get $2
    local.tee $6
    local.get $0
    i32.load offset=12
    local.tee $7
    local.get $6
    local.get $7
    i32.lt_s
    select
    i32.lt_s
    i32.eqz
    br_if $break|0
    i32.const 3
    global.set $~lib/argc
    local.get $0
    i32.load offset=4
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.get $5
    local.get $0
    local.get $1
    call_indirect (type $FUNCSIG$iiii)
    local.tee $6
    local.set $9
    local.get $9
    local.set $7
    local.get $4
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    local.get $7
    local.set $10
    local.get $10
    i32.store
    local.get $6
    local.set $11
    nop
    local.get $7
    local.set $12
    nop
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $loop|0
   end
   unreachable
  end
  local.get $3
 )
 (func $~lib/near-runtime-ts/storage/Storage#contains (; 321 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $2
  local.get $2
  i32.load offset=8
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-runtime-ts/runtime_api/runtime_api.storage_has_key
  i64.const 0
  i64.ne
  local.set $3
  local.get $2
  local.set $5
  nop
  local.get $1
  local.set $6
  nop
  local.get $3
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|1~anonymous|7 (; 322 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 i32)
  (local $60 i32)
  (local $61 i32)
  (local $62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 i32)
  (local $66 i32)
  (local $67 i32)
  (local $68 i32)
  (local $69 i32)
  (local $70 i32)
  (local $71 i32)
  (local $72 i32)
  (local $73 i32)
  (local $74 i32)
  (local $75 i32)
  (local $76 i32)
  (local $77 i32)
  (local $78 i32)
  (local $79 i32)
  (local $80 i32)
  (local $81 i32)
  (local $82 i32)
  (local $83 i32)
  (local $84 i32)
  (local $85 i32)
  (local $86 i32)
  (local $87 i32)
  (local $88 i32)
  (local $89 i32)
  (local $90 i32)
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 1944
  call $~lib/near-runtime-ts/storage/Storage#delete
  i32.const 1
  global.set $~lib/argc
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 1944
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#keys|trampoline
  local.set $0
  local.get $0
  local.set $39
  local.get $39
  i32.load offset=12
  i32.const 1
  i32.eq
  if
   local.get $0
   i32.const 0
   call $~lib/array/Array<~lib/string/String>#__get
   local.tee $1
   call $node_modules/@as-pect/assembly/assembly/internal/log/log<~lib/string/String>
   local.get $1
   local.set $40
   nop
  end
  local.get $0
  local.set $41
  local.get $41
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $1
  i32.const 0
  i32.const 7600
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7704
  i32.const 7744
  call $~lib/near-runtime-ts/storage/Storage#setString
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 1944
  i32.const 1976
  call $~lib/near-runtime-ts/storage/Storage#setString
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7776
  i32.const 1976
  call $~lib/near-runtime-ts/storage/Storage#setString
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7808
  i32.const 7840
  call $~lib/near-runtime-ts/storage/Storage#setString
  i32.const 2
  global.set $~lib/argc
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 1944
  i32.const 7872
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#keyRange|trampoline
  local.set $2
  local.get $2
  i32.const 12
  call $~lib/array/Array<~lib/string/String>#map<~lib/string/String>
  local.set $42
  nop
  local.get $2
  local.set $43
  local.get $43
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $3
  i32.const 2
  i32.const 7992
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $2
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $4
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $5
  i32.const 1944
  i32.const 1688
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $2
  i32.const 1
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $6
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $7
  i32.const 7776
  i32.const 1688
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 1944
  i32.const 7872
  i32.const 1
  call $~lib/near-runtime-ts/storage/Storage#keyRange
  local.set $8
  local.get $8
  local.set $44
  local.get $44
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $9
  i32.const 1
  i32.const 7992
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $8
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $10
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $11
  i32.const 1944
  i32.const 1688
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  i32.const 1
  global.set $~lib/argc
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 1944
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#keys|trampoline
  local.set $12
  local.get $12
  local.set $45
  local.get $45
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $13
  i32.const 3
  i32.const 7992
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $12
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $14
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $15
  i32.const 1944
  i32.const 1688
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $12
  i32.const 1
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $16
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $17
  i32.const 7776
  i32.const 1688
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $12
  i32.const 2
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $18
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $19
  i32.const 7808
  i32.const 1688
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 1944
  i32.const 1
  call $~lib/near-runtime-ts/storage/Storage#keys
  local.set $20
  local.get $20
  local.set $46
  local.get $46
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $21
  i32.const 1
  i32.const 7992
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $12
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $22
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $23
  i32.const 1944
  i32.const 1688
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7704
  call $~lib/near-runtime-ts/storage/Storage#contains
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $24
  i32.const 1
  i32.const 8056
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 1944
  call $~lib/near-runtime-ts/storage/Storage#contains
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $25
  i32.const 1
  i32.const 8056
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7776
  call $~lib/near-runtime-ts/storage/Storage#contains
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $26
  i32.const 1
  i32.const 8056
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7808
  call $~lib/near-runtime-ts/storage/Storage#contains
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $27
  i32.const 1
  i32.const 8056
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 8128
  call $~lib/near-runtime-ts/storage/Storage#contains
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $28
  i32.const 1
  i32.const 8168
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  local.set $30
  i32.const 7808
  local.set $47
  local.get $47
  local.set $29
  local.get $30
  local.get $29
  call $~lib/near-runtime-ts/storage/Storage#contains
  local.set $31
  local.get $29
  local.set $48
  nop
  local.get $31
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $30
  i32.const 1
  i32.const 8056
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  local.set $29
  i32.const 8128
  local.set $49
  local.get $49
  local.set $31
  local.get $29
  local.get $31
  call $~lib/near-runtime-ts/storage/Storage#contains
  local.set $32
  local.get $31
  local.set $50
  nop
  local.get $32
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $29
  i32.const 1
  i32.const 8168
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 1944
  call $~lib/near-runtime-ts/storage/Storage#delete
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 1944
  call $~lib/near-runtime-ts/storage/Storage#contains
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $31
  i32.const 1
  i32.const 8240
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 7776
  call $~lib/near-runtime-ts/storage/Storage#contains
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $32
  i32.const 1
  i32.const 8336
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  i32.const 1
  global.set $~lib/argc
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 1944
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#keys|trampoline
  local.set $33
  local.get $33
  local.set $51
  local.get $51
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $34
  i32.const 2
  i32.const 8408
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $33
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $35
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $36
  i32.const 7776
  i32.const 8512
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $33
  i32.const 1
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $37
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $38
  i32.const 7808
  i32.const 8512
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  local.set $52
  nop
  local.get $1
  local.set $53
  nop
  local.get $2
  local.set $54
  nop
  local.get $3
  local.set $55
  nop
  local.get $4
  local.set $56
  nop
  local.get $5
  local.set $57
  nop
  local.get $6
  local.set $58
  nop
  local.get $7
  local.set $59
  nop
  local.get $8
  local.set $60
  nop
  local.get $9
  local.set $61
  nop
  local.get $10
  local.set $62
  nop
  local.get $11
  local.set $63
  nop
  local.get $12
  local.set $64
  nop
  local.get $13
  local.set $65
  nop
  local.get $14
  local.set $66
  nop
  local.get $15
  local.set $67
  nop
  local.get $16
  local.set $68
  nop
  local.get $17
  local.set $69
  nop
  local.get $18
  local.set $70
  nop
  local.get $19
  local.set $71
  nop
  local.get $20
  local.set $72
  nop
  local.get $21
  local.set $73
  nop
  local.get $22
  local.set $74
  nop
  local.get $23
  local.set $75
  nop
  local.get $24
  local.set $76
  nop
  local.get $25
  local.set $77
  nop
  local.get $26
  local.set $78
  nop
  local.get $27
  local.set $79
  nop
  local.get $28
  local.set $80
  nop
  local.get $30
  local.set $81
  nop
  local.get $29
  local.set $82
  nop
  local.get $31
  local.set $83
  nop
  local.get $32
  local.set $84
  nop
  local.get $33
  local.set $85
  nop
  local.get $34
  local.set $86
  nop
  local.get $35
  local.set $87
  nop
  local.get $36
  local.set $88
  nop
  local.get $37
  local.set $89
  nop
  local.get $38
  local.set $90
  nop
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|1 (; 323 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  i32.const 5
  local.set $0
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/reportBeforeAll
  i32.const 6
  local.set $1
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Test/reportAfterAll
  i32.const 7
  local.set $2
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Test/reportBeforeEach
  i32.const 8
  local.set $3
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Test/reportAfterEach
  i32.const 1896
  i32.const 9
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 2088
  i32.const 10
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 2400
  i32.const 11
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 7576
  i32.const 13
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#constructor (; 324 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  i32.eqz
  if
   i32.const 4
   i32.const 36
   call $~lib/rt/stub/__alloc
   local.set $6
   local.get $6
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  local.tee $2
  local.tee $4
  local.get $3
  i32.load
  local.tee $3
  i32.ne
  if
   local.get $4
   local.set $7
   local.get $7
   drop
   local.get $3
   local.set $8
   nop
  end
  local.get $4
  i32.store
  local.get $2
  local.set $9
  nop
  local.get $1
  local.set $10
  nop
  local.get $0
 )
 (func $~lib/string/String#toString (; 325 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  local.set $1
  local.get $1
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#_key (; 326 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/string/String#toString
  local.tee $2
  call $~lib/string/String.__concat
  local.tee $3
  local.set $6
  local.get $6
  local.set $4
  local.get $2
  local.set $7
  nop
  local.get $3
  local.set $8
  nop
  local.get $1
  local.set $9
  nop
  local.get $4
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/log/log<~lib/array/Array<~lib/string/String>> (; 327 ;) (type $FUNCSIG$vi) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $1
  local.get $1
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/log/ignoreLogs
  if
   local.get $0
   local.set $2
   nop
   return
  end
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/log/logArray
  local.get $0
  local.set $3
  nop
 )
 (func $~lib/array/Array<~lib/string/String>#slice (; 328 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $1
   local.tee $4
   local.get $3
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
  end
  local.set $1
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $3
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $2
   local.tee $4
   local.get $3
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
  end
  local.set $2
  local.get $2
  local.get $1
  i32.sub
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.set $3
  local.get $3
  i32.const 2
  i32.const 8
  i32.const 0
  call $~lib/rt/__allocArray
  local.set $10
  local.get $10
  local.set $6
  local.get $6
  i32.load offset=4
  local.set $7
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.set $8
  i32.const 0
  local.set $4
  local.get $3
  i32.const 2
  i32.shl
  local.set $5
  block $break|0
   loop $continue|0
    local.get $4
    local.get $5
    i32.lt_u
    i32.eqz
    br_if $break|0
    local.get $8
    local.get $4
    i32.add
    i32.load
    local.set $9
    local.get $7
    local.get $4
    i32.add
    local.get $9
    local.set $11
    local.get $11
    i32.store
    local.get $4
    i32.const 4
    i32.add
    local.set $4
    br $continue|0
   end
   unreachable
  end
  local.get $6
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#values~anonymous|0 (; 329 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  local.set $5
  local.get $5
  drop
  local.get $2
  local.set $6
  local.get $6
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#get<assembly/__tests__/model/TextMessage>
  local.tee $3
  local.set $4
  local.get $3
  local.set $7
  nop
  local.get $0
  local.set $8
  nop
  local.get $2
  local.set $9
  nop
  local.get $4
 )
 (func $~lib/array/Array<~lib/string/String>#map<assembly/__tests__/model/TextMessage> (; 330 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 2
  i32.const 37
  i32.const 0
  call $~lib/rt/__allocArray
  local.set $8
  local.get $8
  local.set $3
  local.get $3
  i32.load offset=4
  local.set $4
  block $break|0
   i32.const 0
   local.set $5
   loop $loop|0
    local.get $5
    local.get $2
    local.tee $6
    local.get $0
    i32.load offset=12
    local.tee $7
    local.get $6
    local.get $7
    i32.lt_s
    select
    i32.lt_s
    i32.eqz
    br_if $break|0
    i32.const 3
    global.set $~lib/argc
    local.get $0
    i32.load offset=4
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.get $5
    local.get $0
    local.get $1
    call_indirect (type $FUNCSIG$iiii)
    local.tee $6
    local.set $9
    local.get $9
    local.set $7
    local.get $4
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    local.get $7
    local.set $10
    local.get $10
    i32.store
    local.get $6
    local.set $11
    nop
    local.get $7
    local.set $12
    nop
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $loop|0
   end
   unreachable
  end
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#values (; 331 ;) (type $FUNCSIG$iiiiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  local.get $1
  local.set $11
  local.get $11
  drop
  local.get $2
  local.set $12
  local.get $12
  drop
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/log/log<~lib/string/String>
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/log/log<~lib/string/String>
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#_key
  local.set $5
  local.get $0
  local.get $2
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#_key
  local.set $6
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $5
  local.get $6
  local.get $3
  call $~lib/near-runtime-ts/storage/Storage#keyRange
  local.set $7
  local.get $7
  call $node_modules/@as-pect/assembly/assembly/internal/log/log<~lib/array/Array<~lib/string/String>>
  local.get $7
  local.set $13
  local.get $13
  i32.load offset=12
  i32.const 0
  i32.gt_s
  if (result i32)
   local.get $4
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $7
   i32.const 0
   call $~lib/array/Array<~lib/string/String>#__get
   local.tee $8
   local.get $5
   call $~lib/string/String.__eq
   local.set $9
   local.get $8
   local.set $14
   nop
   local.get $9
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  local.set $8
  local.get $7
  local.get $8
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<~lib/string/String>#slice
  local.tee $9
  i32.const 15
  call $~lib/array/Array<~lib/string/String>#map<assembly/__tests__/model/TextMessage>
  local.set $10
  local.get $5
  local.set $15
  nop
  local.get $6
  local.set $16
  nop
  local.get $7
  local.set $17
  nop
  local.get $9
  local.set $18
  nop
  local.get $1
  local.set $19
  nop
  local.get $2
  local.set $20
  nop
  local.get $10
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#values|trampoline (; 332 ;) (type $FUNCSIG$iiiiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~lib/argc
      i32.const 2
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const -1
    local.set $3
   end
   i32.const 1
   local.set $4
  end
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#values
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#contains (; 333 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#_key
  local.tee $2
  call $~lib/near-runtime-ts/storage/Storage#contains
  local.set $3
  local.get $2
  local.set $5
  nop
  local.get $1
  local.set $6
  nop
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#get (; 334 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $2
  local.set $6
  local.get $6
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#_key
  local.tee $3
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#get<assembly/__tests__/model/TextMessage>
  local.set $4
  local.get $3
  local.set $7
  nop
  local.get $1
  local.set $8
  nop
  local.get $2
  local.set $9
  nop
  local.get $4
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|2~anonymous|0 (; 335 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  i32.const 0
  i32.const 8696
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#constructor
  local.set $0
  i32.const 2
  global.set $~lib/argc
  local.get $0
  i32.const 1008
  i32.const 8728
  i32.const 0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#values|trampoline
  local.set $1
  local.get $1
  local.set $6
  local.get $6
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $2
  i32.const 0
  i32.const 8752
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 8832
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#contains
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $3
  i32.const 1
  i32.const 8880
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 8832
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#get
  local.tee $4
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/__tests__/model/TextMessage | null>
  local.tee $5
  i32.const 0
  i32.const 8960
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/__tests__/model/TextMessage | null>#toBe
  local.get $0
  local.set $7
  nop
  local.get $1
  local.set $8
  nop
  local.get $2
  local.set $9
  nop
  local.get $3
  local.set $10
  nop
  local.get $4
  local.set $11
  nop
  local.get $5
  local.set $12
  nop
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#set (; 336 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $2
  local.set $5
  local.get $5
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#_key
  local.tee $3
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#set<assembly/__tests__/model/TextMessage>
  local.get $3
  local.set $6
  nop
  local.get $1
  local.set $7
  nop
  local.get $2
  local.set $8
  nop
 )
 (func $assembly/__tests__/util/_testTextMessageTwo (; 337 ;) (type $FUNCSIG$i) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  i32.const 0
  call $assembly/__tests__/model/TextMessage#constructor
  local.set $0
  local.get $0
  local.tee $1
  i32.const 9168
  local.tee $2
  local.get $1
  i32.load
  local.tee $1
  i32.ne
  if
   local.get $2
   local.set $3
   local.get $3
   drop
   local.get $1
   local.set $4
   nop
  end
  local.get $2
  i32.store
  local.get $0
  local.tee $2
  i32.const 9192
  local.tee $1
  local.get $2
  i32.load offset=4
  local.tee $2
  i32.ne
  if
   local.get $1
   local.set $5
   local.get $5
   drop
   local.get $2
   local.set $6
   nop
  end
  local.get $1
  i32.store offset=4
  local.get $0
  i64.const 20
  i64.store offset=8
  local.get $0
 )
 (func $~lib/array/Array<assembly/__tests__/model/TextMessage>#__get (; 338 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 760
   i32.const 1560
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $4
  local.get $1
  local.set $5
  i32.const 0
  local.set $6
  local.get $4
  i32.load offset=4
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $6
  local.get $6
  local.set $2
  local.get $2
  i32.eqz
  if
   local.get $2
   local.set $3
   nop
   i32.const 4072
   i32.const 1560
   i32.const 97
   i32.const 39
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
 )
 (func $assembly/__tests__/runtime.spec/_modelObjectEqual (; 339 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  local.get $0
  local.set $3
  local.get $3
  drop
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  i32.const 0
  i32.eq
  if
   local.get $1
   i32.const 0
   i32.eq
   local.set $2
   local.get $0
   local.set $5
   nop
   local.get $1
   local.set $6
   nop
   local.get $2
   return
  end
  local.get $1
  i32.const 0
  i32.eq
  if
   i32.const 0
   local.set $2
   local.get $0
   local.set $7
   nop
   local.get $1
   local.set $8
   nop
   local.get $2
   return
  end
  local.get $0
  i32.load
  local.get $1
  i32.load
  call $~lib/string/String.__ne
  if
   i32.const 0
   local.set $2
   local.get $0
   local.set $9
   nop
   local.get $1
   local.set $10
   nop
   local.get $2
   return
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.load offset=4
  call $~lib/string/String.__ne
  if
   i32.const 0
   local.set $2
   local.get $0
   local.set $11
   nop
   local.get $1
   local.set $12
   nop
   local.get $2
   return
  end
  local.get $0
  i64.load offset=8
  local.get $1
  i64.load offset=8
  i64.ne
  if
   i32.const 0
   local.set $2
   local.get $0
   local.set $13
   nop
   local.get $1
   local.set $14
   nop
   local.get $2
   return
  end
  i32.const 1
  local.set $2
  local.get $0
  local.set $15
  nop
  local.get $1
  local.set $16
  nop
  local.get $2
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#delete (; 340 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#_key
  local.tee $2
  call $~lib/near-runtime-ts/storage/Storage#delete
  local.get $2
  local.set $4
  nop
  local.get $1
  local.set $5
  nop
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|2~anonymous|1 (; 341 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 i32)
  (local $60 i32)
  (local $61 i32)
  (local $62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 i32)
  (local $66 i32)
  (local $67 i32)
  (local $68 i32)
  (local $69 i32)
  (local $70 i32)
  (local $71 i32)
  (local $72 i32)
  (local $73 i32)
  (local $74 i32)
  (local $75 i32)
  (local $76 i32)
  (local $77 i32)
  (local $78 i32)
  (local $79 i32)
  (local $80 i32)
  (local $81 i32)
  i32.const 0
  i32.const 8696
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#constructor
  local.set $0
  call $assembly/__tests__/util/_testTextMessage
  local.set $1
  local.get $0
  i32.const 9104
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#set
  local.get $0
  i32.const 9136
  call $assembly/__tests__/util/_testTextMessageTwo
  local.tee $2
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#set
  local.get $0
  i32.const 9104
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#contains
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $3
  i32.const 1
  i32.const 1008
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  i32.const 2
  global.set $~lib/argc
  local.get $0
  i32.const 9104
  i32.const 8728
  i32.const 0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#values|trampoline
  local.set $4
  local.get $4
  local.set $38
  local.get $38
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $5
  i32.const 2
  i32.const 9224
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $4
  i32.const 0
  call $~lib/array/Array<assembly/__tests__/model/TextMessage>#__get
  local.tee $6
  local.get $1
  call $assembly/__tests__/runtime.spec/_modelObjectEqual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $7
  i32.const 1
  i32.const 9328
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $4
  i32.const 1
  call $~lib/array/Array<assembly/__tests__/model/TextMessage>#__get
  local.tee $8
  call $assembly/__tests__/util/_testTextMessageTwo
  local.tee $9
  call $assembly/__tests__/runtime.spec/_modelObjectEqual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $10
  i32.const 1
  i32.const 9328
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  i32.const 2
  global.set $~lib/argc
  local.get $0
  i32.const 9136
  i32.const 8728
  i32.const 0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#values|trampoline
  local.tee $11
  local.set $39
  local.get $39
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $12
  i32.const 1
  i32.const 9224
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  i32.const 2
  global.set $~lib/argc
  local.get $0
  i32.const 9104
  i32.const 9440
  i32.const 0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#values|trampoline
  local.tee $13
  local.set $40
  local.get $40
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $14
  i32.const 1
  i32.const 9224
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 9104
  i32.const 9472
  i32.const -1
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#values
  local.tee $15
  local.set $41
  local.get $41
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $16
  i32.const 1
  i32.const 9224
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 8832
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#contains
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $17
  i32.const 1
  i32.const 8880
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 9104
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#contains
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $18
  i32.const 1
  i32.const 9504
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 9136
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#contains
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $19
  i32.const 1
  i32.const 9624
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 9104
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#get
  local.tee $20
  local.get $1
  call $assembly/__tests__/runtime.spec/_modelObjectEqual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $21
  i32.const 1
  i32.const 9744
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 9136
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#get
  local.tee $22
  call $assembly/__tests__/util/_testTextMessageTwo
  local.tee $23
  call $assembly/__tests__/runtime.spec/_modelObjectEqual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $24
  i32.const 1
  i32.const 9744
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 9136
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#delete
  i32.const 2
  global.set $~lib/argc
  local.get $0
  i32.const 1008
  i32.const 8728
  i32.const 0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#values|trampoline
  local.tee $25
  local.set $42
  local.get $42
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $26
  i32.const 1
  i32.const 9824
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  i32.const 2
  global.set $~lib/argc
  local.get $0
  i32.const 1008
  i32.const 8728
  i32.const 0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#values|trampoline
  local.tee $27
  i32.const 0
  call $~lib/array/Array<assembly/__tests__/model/TextMessage>#__get
  local.tee $28
  local.get $1
  call $assembly/__tests__/runtime.spec/_modelObjectEqual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $29
  i32.const 1
  i32.const 9928
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  i32.const 2
  global.set $~lib/argc
  local.get $0
  i32.const 9104
  i32.const 8728
  i32.const 0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#values|trampoline
  local.tee $30
  local.set $43
  local.get $43
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $31
  i32.const 1
  i32.const 9824
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 9136
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#contains
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $32
  i32.const 1
  i32.const 10040
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 9104
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#contains
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $33
  i32.const 1
  i32.const 10128
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 9104
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#get
  local.tee $34
  local.get $1
  call $assembly/__tests__/runtime.spec/_modelObjectEqual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $35
  i32.const 1
  i32.const 10304
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 9136
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,assembly/__tests__/model/TextMessage>#get
  local.tee $36
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/__tests__/model/TextMessage | null>
  local.tee $37
  i32.const 0
  i32.const 10408
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/__tests__/model/TextMessage | null>#toBe
  local.get $0
  local.set $44
  nop
  local.get $1
  local.set $45
  nop
  local.get $2
  local.set $46
  nop
  local.get $3
  local.set $47
  nop
  local.get $4
  local.set $48
  nop
  local.get $5
  local.set $49
  nop
  local.get $6
  local.set $50
  nop
  local.get $7
  local.set $51
  nop
  local.get $8
  local.set $52
  nop
  local.get $9
  local.set $53
  nop
  local.get $10
  local.set $54
  nop
  local.get $11
  local.set $55
  nop
  local.get $12
  local.set $56
  nop
  local.get $13
  local.set $57
  nop
  local.get $14
  local.set $58
  nop
  local.get $15
  local.set $59
  nop
  local.get $16
  local.set $60
  nop
  local.get $17
  local.set $61
  nop
  local.get $18
  local.set $62
  nop
  local.get $19
  local.set $63
  nop
  local.get $20
  local.set $64
  nop
  local.get $21
  local.set $65
  nop
  local.get $22
  local.set $66
  nop
  local.get $23
  local.set $67
  nop
  local.get $24
  local.set $68
  nop
  local.get $25
  local.set $69
  nop
  local.get $26
  local.set $70
  nop
  local.get $27
  local.set $71
  nop
  local.get $28
  local.set $72
  nop
  local.get $29
  local.set $73
  nop
  local.get $30
  local.set $74
  nop
  local.get $31
  local.set $75
  nop
  local.get $32
  local.set $76
  nop
  local.get $33
  local.set $77
  nop
  local.get $34
  local.set $78
  nop
  local.get $35
  local.set $79
  nop
  local.get $36
  local.set $80
  nop
  local.get $37
  local.set $81
  nop
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,i32>#constructor (; 342 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  i32.eqz
  if
   i32.const 4
   i32.const 38
   call $~lib/rt/stub/__alloc
   local.set $6
   local.get $6
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  local.tee $2
  local.tee $4
  local.get $3
  i32.load
  local.tee $3
  i32.ne
  if
   local.get $4
   local.set $7
   local.get $7
   drop
   local.get $3
   local.set $8
   nop
  end
  local.get $4
  i32.store
  local.get $2
  local.set $9
  nop
  local.get $1
  local.set $10
  nop
  local.get $0
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,i32>#_key (; 343 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load
  local.get $1
  call $~lib/number/I32#toString
  local.tee $2
  call $~lib/string/String.__concat
  local.tee $3
  local.set $5
  local.get $5
  local.set $4
  local.get $2
  local.set $6
  nop
  local.get $3
  local.set $7
  nop
  local.get $4
 )
 (func $~lib/near-runtime-ts/storage/Storage#getSome<i32> (; 344 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  local.set $3
  local.get $1
  local.set $6
  local.get $6
  local.set $2
  local.get $3
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#contains
  local.set $4
  local.get $2
  local.set $7
  nop
  local.get $4
  i32.eqz
  if
   i32.const 0
   i32.eqz
   if
    i32.const 10632
    local.get $1
    call $~lib/string/String.__concat
    local.tee $3
    i32.const 10664
    call $~lib/string/String.__concat
    local.tee $2
    i32.const 10744
    i32.const 176
    i32.const 6
    call $~lib/builtins/abort
    unreachable
   end
   local.get $3
   local.set $8
   nop
   local.get $2
   local.set $9
   nop
  end
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.tee $2
  call $~lib/near-runtime-ts/util/util.parseFromString<i32>
  local.set $3
  local.get $2
  local.set $10
  nop
  local.get $1
  local.set $11
  nop
  local.get $3
  return
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|2~anonymous|2 (; 345 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  i32.const 0
  i32.const 10584
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,i32>#constructor
  local.set $0
  local.get $0
  local.set $4
  i32.const 1
  local.set $5
  i32.const -20
  local.set $6
  i32.const 0
  local.set $7
  i32.const 0
  local.set $8
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $4
  local.get $5
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,i32>#_key
  local.tee $7
  local.get $6
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
  local.get $7
  local.set $8
  nop
  local.get $0
  local.set $9
  i32.const 1
  local.set $10
  i32.const 0
  local.set $11
  i32.const 0
  local.set $12
  i32.const 0
  local.set $13
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $9
  local.get $10
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,i32>#_key
  local.tee $11
  call $~lib/near-runtime-ts/storage/Storage#getSome<i32>
  local.set $12
  local.get $11
  local.set $13
  nop
  local.get $12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $1
  i32.const -20
  i32.const 10824
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  local.set $2
  nop
  local.get $1
  local.set $3
  nop
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,~lib/array/Array<~lib/string/String>>#constructor (; 346 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  i32.eqz
  if
   i32.const 4
   i32.const 39
   call $~lib/rt/stub/__alloc
   local.set $6
   local.get $6
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  local.tee $2
  local.tee $4
  local.get $3
  i32.load
  local.tee $3
  i32.ne
  if
   local.get $4
   local.set $7
   local.get $7
   drop
   local.get $3
   local.set $8
   nop
  end
  local.get $4
  i32.store
  local.get $2
  local.set $9
  nop
  local.get $1
  local.set $10
  nop
  local.get $0
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,~lib/array/Array<~lib/string/String>>#_key (; 347 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load
  local.get $1
  call $~lib/number/I32#toString
  local.tee $2
  call $~lib/string/String.__concat
  local.tee $3
  local.set $5
  local.get $5
  local.set $4
  local.get $2
  local.set $6
  nop
  local.get $3
  local.set $7
  nop
  local.get $4
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#pushArray (; 348 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey
  local.get $0
  i32.const 4760
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $0
  i32.load
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  i32.const 1
  local.set $2
  local.get $1
  local.set $4
  nop
  local.get $2
 )
 (func $nearFile/encode<~lib/array/Array<~lib/string/String>,~lib/typedarray/Uint8Array> (; 349 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  local.get $0
  local.set $6
  local.get $6
  drop
  local.get $1
  local.set $7
  local.get $7
  drop
  local.get $2
  local.set $8
  local.get $8
  drop
  local.get $0
  i32.const 0
  i32.eq
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#pushArray
   drop
   block $break|0
    i32.const 0
    local.set $3
    loop $loop|0
     local.get $3
     local.get $0
     local.set $9
     local.get $9
     i32.load offset=12
     i32.lt_s
     i32.eqz
     br_if $break|0
     local.get $0
     local.get $3
     call $~lib/array/Array<~lib/string/String>#__get
     local.tee $4
     i32.const 0
     local.get $2
     call $nearFile/encode<~lib/string/String,nearFile/JSONEncoder>
     local.set $10
     nop
     local.get $4
     local.set $11
     nop
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $loop|0
    end
    unreachable
   end
   local.get $2
   local.set $12
   local.get $12
   i32.const 4784
   call $~lib/assemblyscript-json/encoder/JSONEncoder#write
   local.get $12
   i32.load
   call $~lib/array/Array<i32>#pop
   drop
  end
  i32.const 0
  local.set $5
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
  local.set $3
  local.get $0
  local.set $13
  nop
  local.get $1
  local.set $14
  nop
  local.get $2
  local.set $15
  nop
  local.get $5
  local.set $16
  nop
  local.get $3
  return
 )
 (func $nearFile/encode<~lib/array/Array<~lib/string/String>,~lib/typedarray/Uint8Array>|trampoline (; 350 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~lib/argc
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 1008
    local.set $1
   end
   i32.const 0
   call $nearFile/JSONEncoder#constructor
   local.tee $3
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $nearFile/encode<~lib/array/Array<~lib/string/String>,~lib/typedarray/Uint8Array>
  local.set $4
  local.get $3
  local.set $5
  nop
  local.get $4
 )
 (func $~lib/near-runtime-ts/storage/Storage#set<~lib/array/Array<~lib/string/String>> (; 351 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $2
  local.set $5
  local.get $5
  drop
  local.get $0
  local.get $1
  i32.const 1
  global.set $~lib/argc
  local.get $2
  i32.const 1008
  i32.const 0
  call $nearFile/encode<~lib/array/Array<~lib/string/String>,~lib/typedarray/Uint8Array>|trampoline
  local.tee $3
  call $~lib/near-runtime-ts/storage/Storage#setBytes
  local.get $3
  local.set $6
  nop
  local.get $1
  local.set $7
  nop
  local.get $2
  local.set $8
  nop
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,~lib/array/Array<~lib/string/String>>#set (; 352 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $2
  local.set $4
  local.get $4
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,~lib/array/Array<~lib/string/String>>#_key
  local.tee $3
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#set<~lib/array/Array<~lib/string/String>>
  local.get $3
  local.set $5
  nop
  local.get $2
  local.set $6
  nop
 )
 (func $nearFile/decode<~lib/string/String,nearFile/Value> (; 353 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  local.get $0
  local.set $9
  local.get $9
  drop
  local.get $1
  local.set $10
  local.get $10
  drop
  local.get $0
  local.set $11
  local.get $11
  local.set $2
  i32.const 0
  local.set $3
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 24
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 1008
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.set $12
   local.get $12
   local.set $4
   local.get $4
   local.get $1
   call $nearFile/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    i32.const 0
    local.set $13
    local.get $13
    local.set $6
    local.get $0
    local.set $14
    nop
    local.get $1
    local.set $15
    nop
    local.get $2
    local.set $16
    nop
    local.get $3
    local.set $17
    nop
    local.get $4
    local.set $18
    nop
    local.get $5
    local.set $19
    nop
    local.get $6
    return
   end
   local.get $5
   local.tee $6
   local.get $3
   local.tee $7
   i32.ne
   if
    local.get $6
    local.set $20
    local.get $20
    drop
    local.get $7
    local.set $21
    nop
   end
   local.get $6
   local.set $3
   local.get $4
   local.set $22
   nop
   local.get $5
   local.set $23
   nop
  else
   local.get $2
   local.tee $7
   local.get $3
   local.tee $5
   i32.ne
   if
    local.get $7
    local.set $24
    local.get $24
    drop
    local.get $5
    local.set $25
    nop
   end
   local.get $7
   local.set $3
  end
  local.get $3
  local.tee $7
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $7
   i32.const 30
   call $~lib/rt/__instanceof
  end
  if
   call $nearFile/isReallyNullable<~lib/string/String>
   i32.eqz
   if
    i32.const 5112
    local.get $1
    call $~lib/string/String.__concat
    local.tee $7
    i32.const 5144
    call $~lib/string/String.__concat
    local.tee $5
    i32.const 5424
    call $~lib/string/String.__concat
    local.tee $4
    i32.const 5224
    call $~lib/string/String.__concat
    local.tee $6
    i32.const 5272
    i32.const 381
    i32.const 4
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   local.set $26
   local.get $26
   local.set $8
   local.get $7
   local.set $27
   nop
   local.get $5
   local.set $28
   nop
   local.get $4
   local.set $29
   nop
   local.get $6
   local.set $30
   nop
   local.get $0
   local.set $31
   nop
   local.get $1
   local.set $32
   nop
   local.get $2
   local.set $33
   nop
   local.get $3
   local.set $34
   nop
   local.get $8
   return
  end
  local.get $3
  local.set $35
  local.get $35
  local.set $7
  local.get $1
  local.set $36
  local.get $36
  local.set $8
  local.get $7
  local.tee $6
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $6
   i32.const 27
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 5304
   local.get $8
   call $~lib/string/String.__concat
   local.tee $6
   i32.const 5456
   call $~lib/string/String.__concat
   local.tee $4
   i32.const 5272
   i32.const 345
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $7
  i32.load
  local.set $37
  local.get $37
  local.set $5
  local.get $8
  local.set $38
  nop
  local.get $7
  local.set $39
  nop
  local.get $6
  local.set $40
  nop
  local.get $4
  local.set $41
  nop
  local.get $5
  local.set $4
  local.get $0
  local.set $42
  nop
  local.get $1
  local.set $43
  nop
  local.get $2
  local.set $44
  nop
  local.get $3
  local.set $45
  nop
  local.get $4
  return
 )
 (func $nearFile/decodeArray<~lib/string/String> (; 354 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  local.get $0
  local.set $9
  local.get $9
  drop
  local.get $1
  local.set $10
  local.get $10
  drop
  local.get $0
  local.tee $2
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $2
   i32.const 26
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 5304
   local.get $1
   call $~lib/string/String.__concat
   local.tee $2
   i32.const 11104
   call $~lib/string/String.__concat
   local.tee $3
   i32.const 5272
   i32.const 350
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $4
  local.get $0
  i32.load
  local.set $11
  local.get $11
  local.set $5
  block $break|0
   i32.const 0
   local.set $6
   loop $loop|0
    local.get $6
    local.get $5
    local.set $12
    local.get $12
    i32.load offset=12
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $5
    local.get $6
    call $~lib/array/Array<nearFile/Value>#__get
    local.tee $7
    i32.const 1008
    call $nearFile/decode<~lib/string/String,nearFile/Value>
    local.set $8
    local.get $4
    local.get $8
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $7
    local.set $13
    nop
    local.get $8
    local.set $14
    nop
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $loop|0
   end
   unreachable
  end
  local.get $4
  local.set $6
  local.get $2
  local.set $15
  nop
  local.get $3
  local.set $16
  nop
  local.get $5
  local.set $17
  nop
  local.get $0
  local.set $18
  nop
  local.get $1
  local.set $19
  nop
  local.get $6
 )
 (func $nearFile/decode<~lib/array/Array<~lib/string/String>,~lib/typedarray/Uint8Array> (; 355 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  local.get $0
  local.set $11
  local.get $11
  drop
  local.get $1
  local.set $12
  local.get $12
  drop
  local.get $0
  call $nearFile/JSON.parse
  local.tee $2
  local.set $13
  local.get $13
  local.set $3
  i32.const 0
  local.set $4
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 24
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 1008
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $3
   local.set $14
   local.get $14
   local.set $5
   local.get $5
   local.get $1
   call $nearFile/Obj#get
   local.set $6
   local.get $6
   i32.const 0
   i32.eq
   if
    i32.const 0
    local.set $15
    local.get $15
    local.set $7
    local.get $0
    local.set $16
    nop
    local.get $1
    local.set $17
    nop
    local.get $2
    local.set $18
    nop
    local.get $3
    local.set $19
    nop
    local.get $4
    local.set $20
    nop
    local.get $5
    local.set $21
    nop
    local.get $6
    local.set $22
    nop
    local.get $7
    return
   end
   local.get $6
   local.tee $7
   local.get $4
   local.tee $8
   i32.ne
   if
    local.get $7
    local.set $23
    local.get $23
    drop
    local.get $8
    local.set $24
    nop
   end
   local.get $7
   local.set $4
   local.get $5
   local.set $25
   nop
   local.get $6
   local.set $26
   nop
  else
   local.get $3
   local.tee $8
   local.get $4
   local.tee $6
   i32.ne
   if
    local.get $8
    local.set $27
    local.get $27
    drop
    local.get $6
    local.set $28
    nop
   end
   local.get $8
   local.set $4
  end
  local.get $4
  local.tee $8
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $8
   i32.const 30
   call $~lib/rt/__instanceof
  end
  if
   i32.const 1
   if (result i32)
    i32.const 1
   else
    i32.const 1
   end
   if (result i32)
    i32.const 1
   else
    i32.const 0
   end
   if (result i32)
    i32.const 1
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5112
    local.get $1
    call $~lib/string/String.__concat
    local.tee $8
    i32.const 5144
    call $~lib/string/String.__concat
    local.tee $6
    i32.const 11032
    call $~lib/string/String.__concat
    local.tee $5
    i32.const 5224
    call $~lib/string/String.__concat
    local.tee $7
    i32.const 5272
    i32.const 381
    i32.const 4
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   local.set $29
   local.get $29
   local.set $9
   local.get $8
   local.set $30
   nop
   local.get $6
   local.set $31
   nop
   local.get $5
   local.set $32
   nop
   local.get $7
   local.set $33
   nop
   local.get $0
   local.set $34
   nop
   local.get $1
   local.set $35
   nop
   local.get $2
   local.set $36
   nop
   local.get $3
   local.set $37
   nop
   local.get $4
   local.set $38
   nop
   local.get $9
   return
  end
  i32.const 0
  local.set $10
  local.get $4
  local.get $1
  call $nearFile/decodeArray<~lib/string/String>
  local.set $7
  local.get $0
  local.set $39
  nop
  local.get $1
  local.set $40
  nop
  local.get $2
  local.set $41
  nop
  local.get $3
  local.set $42
  nop
  local.get $4
  local.set $43
  nop
  local.get $10
  local.set $44
  nop
  local.get $7
  return
 )
 (func $~lib/near-runtime-ts/util/util.parseFromBytes<~lib/array/Array<~lib/string/String>> (; 356 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  local.get $0
  i32.const 1008
  call $nearFile/decode<~lib/array/Array<~lib/string/String>,~lib/typedarray/Uint8Array>
  local.set $1
  local.get $0
  local.set $3
  nop
  local.get $1
 )
 (func $~lib/near-runtime-ts/storage/Storage#getSome<~lib/array/Array<~lib/string/String>> (; 357 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  local.set $3
  local.get $1
  local.set $6
  local.get $6
  local.set $2
  local.get $3
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#contains
  local.set $4
  local.get $2
  local.set $7
  nop
  local.get $4
  i32.eqz
  if
   i32.const 0
   i32.eqz
   if
    i32.const 10632
    local.get $1
    call $~lib/string/String.__concat
    local.tee $3
    i32.const 10664
    call $~lib/string/String.__concat
    local.tee $2
    i32.const 10744
    i32.const 176
    i32.const 6
    call $~lib/builtins/abort
    unreachable
   end
   local.get $3
   local.set $8
   nop
   local.get $2
   local.set $9
   nop
  end
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#getBytes
  local.tee $2
  call $~lib/near-runtime-ts/util/util.parseFromBytes<~lib/array/Array<~lib/string/String>>
  local.set $3
  local.get $2
  local.set $10
  nop
  local.get $1
  local.set $11
  nop
  local.get $3
  return
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|2~anonymous|3 (; 358 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 10960
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,~lib/array/Array<~lib/string/String>>#constructor
  local.set $0
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $1
  local.get $1
  i32.const 10992
  call $~lib/array/Array<~lib/string/String>#push
  drop
  local.get $0
  i32.const 1
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,~lib/array/Array<~lib/string/String>>#set
  local.get $0
  local.set $10
  i32.const 1
  local.set $11
  i32.const 0
  local.set $12
  i32.const 0
  local.set $13
  i32.const 0
  local.set $14
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $10
  local.get $11
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<i32,~lib/array/Array<~lib/string/String>>#_key
  local.tee $12
  call $~lib/near-runtime-ts/storage/Storage#getSome<~lib/array/Array<~lib/string/String>>
  local.set $13
  local.get $12
  local.set $14
  nop
  local.get $13
  local.tee $2
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $4
  i32.const 10992
  i32.const 1008
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  local.set $5
  nop
  local.get $1
  local.set $6
  nop
  local.get $2
  local.set $7
  nop
  local.get $3
  local.set $8
  nop
  local.get $4
  local.set $9
  nop
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|2 (; 359 ;) (type $FUNCSIG$v)
  i32.const 8656
  i32.const 16
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 9064
  i32.const 17
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 10520
  i32.const 18
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 10904
  i32.const 19
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#constructor (; 360 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  local.get $1
  local.set $6
  local.get $6
  drop
  local.get $0
  i32.eqz
  if
   i32.const 12
   i32.const 40
   call $~lib/rt/stub/__alloc
   local.set $7
   local.get $7
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_LENGTH_SUFFIX
  call $~lib/string/String.__concat
  local.tee $2
  local.tee $4
  local.get $3
  i32.load offset=4
  local.tee $3
  i32.ne
  if
   local.get $4
   local.set $8
   local.get $8
   drop
   local.get $3
   local.set $9
   nop
  end
  local.get $4
  i32.store offset=4
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  local.tee $4
  local.tee $5
  local.get $3
  i32.load
  local.tee $3
  i32.ne
  if
   local.get $5
   local.set $10
   local.get $10
   drop
   local.get $3
   local.set $11
   nop
  end
  local.get $5
  i32.store
  local.get $0
  i32.const -1
  i32.store offset=8
  local.get $2
  local.set $12
  nop
  local.get $4
  local.set $13
  nop
  local.get $1
  local.set $14
  nop
  local.get $0
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length (; 361 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=8
  i32.const 0
  i32.lt_s
  if
   local.get $0
   global.get $~lib/near-runtime-ts/storage/storage
   local.get $0
   i32.load offset=4
   i32.const 0
   call $~lib/near-runtime-ts/storage/Storage#getPrimitive<i32>
   i32.store offset=8
  end
  local.get $0
  i32.load offset=8
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex (; 362 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  i32.const 0
  i32.ge_s
  if (result i32)
   local.get $1
   local.get $0
   call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
   i32.lt_s
  else
   i32.const 0
  end
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:isEmpty (; 363 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 0
  i32.eq
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#set:length (; 364 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_set (; 365 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  local.get $2
  local.set $8
  local.get $8
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.set $4
  local.get $1
  local.set $3
  local.get $4
  i32.load
  local.get $3
  call $~lib/number/I32#toString
  local.tee $5
  call $~lib/string/String.__concat
  local.tee $6
  local.set $9
  local.get $9
  local.set $7
  local.get $5
  local.set $10
  nop
  local.get $6
  local.set $11
  nop
  local.get $7
  local.tee $6
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#set<~lib/string/String>
  local.get $6
  local.set $12
  nop
  local.get $2
  local.set $13
  nop
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#push (; 366 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  local.set $2
  local.get $0
  local.get $2
  i32.const 1
  i32.add
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#set:length
  local.get $0
  local.get $2
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_set
  local.get $2
  local.set $3
  local.get $1
  local.set $5
  nop
  local.get $3
 )
 (func $~lib/near-runtime-ts/storage/Storage#getSome<~lib/string/String> (; 367 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  local.set $3
  local.get $1
  local.set $6
  local.get $6
  local.set $2
  local.get $3
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#contains
  local.set $4
  local.get $2
  local.set $7
  nop
  local.get $4
  i32.eqz
  if
   i32.const 0
   i32.eqz
   if
    i32.const 10632
    local.get $1
    call $~lib/string/String.__concat
    local.tee $3
    i32.const 10664
    call $~lib/string/String.__concat
    local.tee $2
    i32.const 10744
    i32.const 176
    i32.const 6
    call $~lib/builtins/abort
    unreachable
   end
   local.get $3
   local.set $8
   nop
   local.get $2
   local.set $9
   nop
  end
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#getString
  local.tee $2
  call $~lib/near-runtime-ts/util/util.parseFromString<~lib/string/String>
  local.set $3
  local.get $2
  local.set $10
  nop
  local.get $1
  local.set $11
  nop
  local.get $3
  return
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_get (; 368 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.set $3
  local.get $1
  local.set $2
  local.get $3
  i32.load
  local.get $2
  call $~lib/number/I32#toString
  local.tee $4
  call $~lib/string/String.__concat
  local.tee $5
  local.set $7
  local.get $7
  local.set $6
  local.get $4
  local.set $8
  nop
  local.get $5
  local.set $9
  nop
  local.get $6
  local.tee $5
  call $~lib/near-runtime-ts/storage/Storage#getSome<~lib/string/String>
  local.set $4
  local.get $5
  local.set $10
  nop
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__get (; 369 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex
  i32.eqz
  if
   i32.const 760
   i32.const 11992
   i32.const 75
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_get
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:back (; 370 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 1
  i32.sub
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__get
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:front (; 371 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__get
 )
 (func $assembly/__tests__/runtime.spec/_vectorHasContents (; 372 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  local.get $0
  local.set $5
  local.get $5
  drop
  local.get $1
  local.set $6
  local.get $6
  drop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  local.get $1
  local.set $7
  local.get $7
  i32.load offset=12
  i32.ne
  if
   i32.const 0
   local.set $2
   local.get $0
   local.set $8
   nop
   local.get $1
   local.set $9
   nop
   local.get $2
   return
  end
  block $break|0
   i32.const 0
   local.set $2
   loop $loop|0
    local.get $2
    local.get $1
    local.set $10
    local.get $10
    i32.load offset=12
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $1
    local.get $2
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $3
    local.get $0
    local.get $2
    call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__get
    local.tee $4
    call $~lib/string/String.__ne
    if
     nop
    end
    local.get $3
    local.set $11
    nop
    local.get $4
    local.set $12
    nop
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $loop|0
   end
   unreachable
  end
  i32.const 1
  local.set $2
  local.get $0
  local.set $13
  nop
  local.get $1
  local.set $14
  nop
  local.get $2
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__set (; 373 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  local.set $3
  local.get $3
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex
  i32.eqz
  if
   i32.const 760
   i32.const 11992
   i32.const 97
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_set
  local.get $2
  local.set $4
  nop
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#pop (; 374 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 0
  i32.gt_s
  i32.eqz
  if
   i32.const 13392
   i32.const 11992
   i32.const 139
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 1
  i32.sub
  local.set $1
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#set:length
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_get
  local.set $2
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.set $4
  local.get $1
  local.set $3
  local.get $4
  i32.load
  local.get $3
  call $~lib/number/I32#toString
  local.tee $5
  call $~lib/string/String.__concat
  local.tee $6
  local.set $8
  local.get $8
  local.set $7
  local.get $5
  local.set $9
  nop
  local.get $6
  local.set $10
  nop
  local.get $7
  local.tee $6
  call $~lib/near-runtime-ts/storage/Storage#delete
  local.get $2
  local.set $5
  local.get $6
  local.set $11
  nop
  local.get $5
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#constructor (; 375 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  local.get $1
  local.set $6
  local.get $6
  drop
  local.get $0
  i32.eqz
  if
   i32.const 12
   i32.const 41
   call $~lib/rt/stub/__alloc
   local.set $7
   local.get $7
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_LENGTH_SUFFIX
  call $~lib/string/String.__concat
  local.tee $2
  local.tee $4
  local.get $3
  i32.load offset=4
  local.tee $3
  i32.ne
  if
   local.get $4
   local.set $8
   local.get $8
   drop
   local.get $3
   local.set $9
   nop
  end
  local.get $4
  i32.store offset=4
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  local.tee $4
  local.tee $5
  local.get $3
  i32.load
  local.tee $3
  i32.ne
  if
   local.get $5
   local.set $10
   local.get $10
   drop
   local.get $3
   local.set $11
   nop
  end
  local.get $5
  i32.store
  local.get $0
  i32.const -1
  i32.store offset=8
  local.get $2
  local.set $12
  nop
  local.get $4
  local.set $13
  nop
  local.get $1
  local.set $14
  nop
  local.get $0
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#get:length (; 376 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=8
  i32.const 0
  i32.lt_s
  if
   local.get $0
   global.get $~lib/near-runtime-ts/storage/storage
   local.get $0
   i32.load offset=4
   i32.const 0
   call $~lib/near-runtime-ts/storage/Storage#getPrimitive<i32>
   i32.store offset=8
  end
  local.get $0
  i32.load offset=8
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#__unchecked_set (; 377 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.set $4
  local.get $1
  local.set $3
  local.get $4
  i32.load
  local.get $3
  call $~lib/number/I32#toString
  local.tee $5
  call $~lib/string/String.__concat
  local.tee $6
  local.set $8
  local.get $8
  local.set $7
  local.get $5
  local.set $9
  nop
  local.get $6
  local.set $10
  nop
  local.get $7
  local.tee $6
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
  local.get $6
  local.set $11
  nop
 )
 (func $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#push (; 378 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#get:length
  local.set $2
  local.get $0
  local.set $3
  local.get $2
  i32.const 1
  i32.add
  local.set $4
  local.get $3
  local.get $4
  i32.store offset=8
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $3
  i32.load offset=4
  local.get $4
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
  local.get $0
  local.get $2
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#__unchecked_set
  local.get $2
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|3~anonymous|0 (; 379 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 i32)
  (local $60 i32)
  (local $61 i32)
  (local $62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 i32)
  (local $66 i32)
  (local $67 i32)
  (local $68 i32)
  (local $69 i32)
  (local $70 i32)
  (local $71 i32)
  (local $72 i32)
  (local $73 i32)
  (local $74 i32)
  (local $75 i32)
  (local $76 i32)
  (local $77 i32)
  (local $78 i32)
  (local $79 i32)
  (local $80 i32)
  (local $81 i32)
  (local $82 i32)
  (local $83 i32)
  (local $84 i32)
  (local $85 i32)
  (local $86 i32)
  (local $87 i32)
  (local $88 i32)
  (local $89 i32)
  (local $90 i32)
  (local $91 i32)
  (local $92 i32)
  (local $93 i32)
  (local $94 i32)
  (local $95 i32)
  (local $96 i32)
  (local $97 i32)
  (local $98 i32)
  (local $99 i32)
  (local $100 i32)
  (local $101 i32)
  (local $102 i32)
  (local $103 i32)
  (local $104 i32)
  (local $105 i32)
  (local $106 i32)
  (local $107 i32)
  (local $108 i32)
  (local $109 i32)
  (local $110 i32)
  (local $111 i32)
  (local $112 i32)
  (local $113 i32)
  (local $114 i32)
  (local $115 i32)
  (local $116 i32)
  (local $117 i32)
  (local $118 i32)
  (local $119 i32)
  (local $120 i32)
  (local $121 i32)
  (local $122 i32)
  (local $123 i32)
  (local $124 i32)
  (local $125 i32)
  (local $126 i32)
  (local $127 i32)
  (local $128 i32)
  (local $129 i32)
  (local $130 i32)
  (local $131 i32)
  (local $132 i32)
  (local $133 i32)
  (local $134 i32)
  (local $135 i32)
  (local $136 i32)
  (local $137 i32)
  (local $138 i32)
  (local $139 i32)
  (local $140 i32)
  (local $141 i32)
  (local $142 i32)
  (local $143 i32)
  (local $144 i32)
  (local $145 i32)
  (local $146 i32)
  (local $147 i32)
  i32.const 0
  i32.const 11248
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.ne
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $1
  i32.const 1
  i32.const 11280
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $2
  i32.const 0
  i32.const 11344
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $3
  i32.const 1
  i32.const 11432
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:isEmpty
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $4
  i32.const 1
  i32.const 11520
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 11608
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#push
  drop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $5
  i32.const 1
  i32.const 11632
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $6
  i32.const 1
  i32.const 11704
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $7
  i32.const 1
  i32.const 11800
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:isEmpty
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $8
  i32.const 1
  i32.const 11896
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:back
  local.tee $9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $10
  i32.const 11608
  i32.const 12112
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  local.set $11
  local.get $11
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:back
  local.tee $12
  local.set $62
  local.get $62
  local.set $13
  local.get $12
  local.set $63
  nop
  local.get $13
  local.tee $12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $11
  i32.const 11608
  i32.const 12168
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:front
  local.tee $13
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $14
  i32.const 11608
  i32.const 12224
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  local.set $15
  local.get $15
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:front
  local.tee $16
  local.set $64
  local.get $64
  local.set $17
  local.get $16
  local.set $65
  nop
  local.get $17
  local.tee $16
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $15
  i32.const 11608
  i32.const 12288
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__get
  local.tee $17
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $18
  i32.const 11608
  i32.const 12352
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  i32.const 1
  i32.const 2
  i32.const 8
  i32.const 12424
  call $~lib/rt/__allocArray
  local.set $66
  local.get $66
  local.tee $20
  call $assembly/__tests__/runtime.spec/_vectorHasContents
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $19
  i32.const 1
  i32.const 12448
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  local.set $22
  i32.const 12552
  local.set $67
  local.get $67
  local.set $21
  local.get $22
  local.get $21
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#push
  local.set $23
  local.get $21
  local.set $68
  nop
  local.get $23
  drop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $22
  i32.const 2
  i32.const 11632
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $21
  i32.const 1
  i32.const 11704
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $23
  i32.const 1
  i32.const 12576
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 2
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $24
  i32.const 1
  i32.const 12664
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:isEmpty
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $25
  i32.const 1
  i32.const 11896
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 8
  i32.const 12760
  call $~lib/rt/__allocArray
  local.set $69
  local.get $69
  local.tee $27
  call $assembly/__tests__/runtime.spec/_vectorHasContents
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $26
  i32.const 1
  i32.const 12784
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 1
  i32.const 12896
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__set
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 8
  i32.const 12920
  call $~lib/rt/__allocArray
  local.set $70
  local.get $70
  local.tee $29
  call $assembly/__tests__/runtime.spec/_vectorHasContents
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $28
  i32.const 1
  i32.const 12944
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 0
  i32.const 13056
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__set
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 8
  i32.const 13080
  call $~lib/rt/__allocArray
  local.set $71
  local.get $71
  local.tee $31
  call $assembly/__tests__/runtime.spec/_vectorHasContents
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $30
  i32.const 1
  i32.const 13104
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $32
  i32.const 2
  i32.const 11632
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  local.set $34
  i32.const 13216
  local.set $72
  local.get $72
  local.set $33
  local.get $34
  local.get $33
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#push
  local.set $35
  local.get $33
  local.set $73
  nop
  local.get $35
  drop
  local.get $0
  i32.const 3
  i32.const 2
  i32.const 8
  i32.const 13240
  call $~lib/rt/__allocArray
  local.set $74
  local.get $74
  local.tee $33
  call $assembly/__tests__/runtime.spec/_vectorHasContents
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $34
  i32.const 1
  i32.const 13272
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $35
  i32.const 3
  i32.const 11632
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:back
  local.tee $36
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $37
  i32.const 13216
  i32.const 12112
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  local.set $38
  local.get $38
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:back
  local.tee $39
  local.set $75
  local.get $75
  local.set $40
  local.get $39
  local.set $76
  nop
  local.get $40
  local.tee $39
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $38
  i32.const 13216
  i32.const 12168
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:front
  local.tee $40
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $41
  i32.const 13056
  i32.const 12224
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  local.set $42
  local.get $42
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:front
  local.tee $43
  local.set $77
  local.get $77
  local.set $44
  local.get $43
  local.set $78
  nop
  local.get $44
  local.tee $43
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $42
  i32.const 13056
  i32.const 12288
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#pop
  local.set $79
  nop
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 8
  i32.const 13440
  call $~lib/rt/__allocArray
  local.set $80
  local.get $80
  local.tee $45
  call $assembly/__tests__/runtime.spec/_vectorHasContents
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $44
  i32.const 1
  i32.const 13104
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $46
  i32.const 2
  i32.const 13464
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 0
  i32.const 13560
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#__set
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 8
  i32.const 13584
  call $~lib/rt/__allocArray
  local.set $81
  local.get $81
  local.tee $48
  call $assembly/__tests__/runtime.spec/_vectorHasContents
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $47
  i32.const 1
  i32.const 12944
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $49
  i32.const 2
  i32.const 11632
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  local.set $51
  i32.const 13608
  local.set $82
  local.get $82
  local.set $50
  local.get $51
  local.get $50
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#push
  local.set $52
  local.get $50
  local.set $83
  nop
  local.get $52
  drop
  local.get $0
  i32.const 3
  i32.const 2
  i32.const 8
  i32.const 13632
  call $~lib/rt/__allocArray
  local.set $84
  local.get $84
  local.tee $50
  call $assembly/__tests__/runtime.spec/_vectorHasContents
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $51
  i32.const 1
  i32.const 13664
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $52
  i32.const 3
  i32.const 11632
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  local.set $53
  local.get $53
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#pop
  local.set $85
  nop
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 8
  i32.const 13784
  call $~lib/rt/__allocArray
  local.set $86
  local.get $86
  local.tee $54
  call $assembly/__tests__/runtime.spec/_vectorHasContents
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $53
  i32.const 1
  i32.const 12944
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $55
  i32.const 2
  i32.const 11632
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  i32.const 0
  i32.const 11248
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#constructor
  local.set $56
  local.get $56
  i32.const 0
  i32.ne
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $57
  i32.const 1
  i32.const 11280
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $56
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $58
  i32.const 2
  i32.const 11632
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  i32.const 0
  i32.const 13808
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#constructor
  local.set $59
  local.get $59
  local.set $61
  i32.const 2
  local.set $60
  local.get $61
  local.get $60
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#push
  drop
  local.get $59
  call $~lib/near-runtime-ts/collections/persistentVector/PersistentVector<i32>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $61
  i32.const 1
  i32.const 13848
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  local.set $87
  nop
  local.get $1
  local.set $88
  nop
  local.get $2
  local.set $89
  nop
  local.get $3
  local.set $90
  nop
  local.get $4
  local.set $91
  nop
  local.get $5
  local.set $92
  nop
  local.get $6
  local.set $93
  nop
  local.get $7
  local.set $94
  nop
  local.get $8
  local.set $95
  nop
  local.get $9
  local.set $96
  nop
  local.get $10
  local.set $97
  nop
  local.get $12
  local.set $98
  nop
  local.get $11
  local.set $99
  nop
  local.get $13
  local.set $100
  nop
  local.get $14
  local.set $101
  nop
  local.get $16
  local.set $102
  nop
  local.get $15
  local.set $103
  nop
  local.get $17
  local.set $104
  nop
  local.get $18
  local.set $105
  nop
  local.get $20
  local.set $106
  nop
  local.get $19
  local.set $107
  nop
  local.get $22
  local.set $108
  nop
  local.get $21
  local.set $109
  nop
  local.get $23
  local.set $110
  nop
  local.get $24
  local.set $111
  nop
  local.get $25
  local.set $112
  nop
  local.get $27
  local.set $113
  nop
  local.get $26
  local.set $114
  nop
  local.get $29
  local.set $115
  nop
  local.get $28
  local.set $116
  nop
  local.get $31
  local.set $117
  nop
  local.get $30
  local.set $118
  nop
  local.get $32
  local.set $119
  nop
  local.get $33
  local.set $120
  nop
  local.get $34
  local.set $121
  nop
  local.get $35
  local.set $122
  nop
  local.get $36
  local.set $123
  nop
  local.get $37
  local.set $124
  nop
  local.get $39
  local.set $125
  nop
  local.get $38
  local.set $126
  nop
  local.get $40
  local.set $127
  nop
  local.get $41
  local.set $128
  nop
  local.get $43
  local.set $129
  nop
  local.get $42
  local.set $130
  nop
  local.get $45
  local.set $131
  nop
  local.get $44
  local.set $132
  nop
  local.get $46
  local.set $133
  nop
  local.get $48
  local.set $134
  nop
  local.get $47
  local.set $135
  nop
  local.get $49
  local.set $136
  nop
  local.get $50
  local.set $137
  nop
  local.get $51
  local.set $138
  nop
  local.get $52
  local.set $139
  nop
  local.get $54
  local.set $140
  nop
  local.get $53
  local.set $141
  nop
  local.get $55
  local.set $142
  nop
  local.get $56
  local.set $143
  nop
  local.get $57
  local.set $144
  nop
  local.get $58
  local.set $145
  nop
  local.get $59
  local.set $146
  nop
  local.get $61
  local.set $147
  nop
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|3 (; 380 ;) (type $FUNCSIG$v)
  i32.const 11208
  i32.const 21
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#constructor (; 381 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  local.get $1
  local.set $7
  local.get $7
  drop
  local.get $0
  i32.eqz
  if
   i32.const 20
   i32.const 42
   call $~lib/rt/stub/__alloc
   local.set $8
   local.get $8
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 0
  i32.store offset=16
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  local.tee $2
  local.tee $4
  local.get $3
  i32.load
  local.tee $3
  i32.ne
  if
   local.get $4
   local.set $9
   local.get $9
   drop
   local.get $3
   local.set $10
   nop
  end
  local.get $4
  i32.store
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_FRONT_INDEX_SUFFIX
  call $~lib/string/String.__concat
  local.tee $4
  local.tee $5
  local.get $3
  i32.load offset=4
  local.tee $3
  i32.ne
  if
   local.get $5
   local.set $11
   local.get $11
   drop
   local.get $3
   local.set $12
   nop
  end
  local.get $5
  i32.store offset=4
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_BACK_INDEX_SUFFIX
  call $~lib/string/String.__concat
  local.tee $5
  local.tee $6
  local.get $3
  i32.load offset=8
  local.tee $3
  i32.ne
  if
   local.get $6
   local.set $13
   local.get $13
   drop
   local.get $3
   local.set $14
   nop
  end
  local.get $6
  i32.store offset=8
  local.get $0
  global.get $~lib/builtins/i32.MIN_VALUE
  i32.store offset=12
  local.get $0
  global.get $~lib/builtins/i32.MAX_VALUE
  i32.store offset=16
  local.get $2
  local.set $15
  nop
  local.get $4
  local.set $16
  nop
  local.get $5
  local.set $17
  nop
  local.get $1
  local.set $18
  nop
  local.get $0
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:backIndex (; 382 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=16
  i32.const 2147483647
  i32.eq
  if
   local.get $0
   global.get $~lib/near-runtime-ts/storage/storage
   local.get $0
   i32.load offset=8
   i32.const -1
   call $~lib/near-runtime-ts/storage/Storage#getPrimitive<i32>
   i32.store offset=16
  end
  local.get $0
  i32.load offset=16
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:frontIndex (; 383 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
  i32.const -2147483648
  i32.eq
  if
   local.get $0
   global.get $~lib/near-runtime-ts/storage/storage
   local.get $0
   i32.load offset=4
   i32.const 0
   call $~lib/near-runtime-ts/storage/Storage#getPrimitive<i32>
   i32.store offset=12
  end
  local.get $0
  i32.load offset=12
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length (; 384 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:backIndex
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:frontIndex
  i32.sub
  i32.const 1
  i32.add
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex (; 385 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  i32.const 0
  i32.ge_s
  if (result i32)
   local.get $1
   local.get $0
   call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
   i32.lt_s
  else
   i32.const 0
  end
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:isEmpty (; 386 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  i32.const 0
  i32.eq
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#set:backIndex (; 387 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=16
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  i32.load offset=8
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__unchecked_set (; 388 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  local.get $2
  local.set $8
  local.get $8
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.set $4
  local.get $1
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:frontIndex
  i32.add
  local.set $3
  local.get $4
  i32.load
  local.get $3
  call $~lib/number/I32#toString
  local.tee $5
  call $~lib/string/String.__concat
  local.tee $6
  local.set $9
  local.get $9
  local.set $7
  local.get $5
  local.set $10
  nop
  local.get $6
  local.set $11
  nop
  local.get $7
  local.tee $6
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#set<~lib/string/String>
  local.get $6
  local.set $12
  nop
  local.get $2
  local.set $13
  nop
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#pushBack (; 389 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  local.set $2
  local.get $0
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:backIndex
  i32.const 1
  i32.add
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#set:backIndex
  local.get $0
  local.get $2
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__unchecked_set
  local.get $2
  local.set $3
  local.get $1
  local.set $5
  nop
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__unchecked_get (; 390 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.set $3
  local.get $1
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:frontIndex
  i32.add
  local.set $2
  local.get $3
  i32.load
  local.get $2
  call $~lib/number/I32#toString
  local.tee $4
  call $~lib/string/String.__concat
  local.tee $5
  local.set $7
  local.get $7
  local.set $6
  local.get $4
  local.set $8
  nop
  local.get $5
  local.set $9
  nop
  local.get $6
  local.tee $5
  call $~lib/near-runtime-ts/storage/Storage#getSome<~lib/string/String>
  local.set $4
  local.get $5
  local.set $10
  nop
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__get (; 391 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  i32.eqz
  if
   i32.const 760
   i32.const 14480
   i32.const 101
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__unchecked_get
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back (; 392 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  i32.const 1
  i32.sub
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__get
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front (; 393 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__get
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#set:frontIndex (; 394 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#pushFront (; 395 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $0
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:frontIndex
  i32.const 1
  i32.sub
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#set:frontIndex
  local.get $0
  i32.const 0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__unchecked_set
  i32.const 0
  local.set $2
  local.get $1
  local.set $4
  nop
  local.get $2
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#popFront (; 396 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  i32.const 0
  i32.gt_s
  i32.eqz
  if
   i32.const 15000
   i32.const 14480
   i32.const 154
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__unchecked_get
  local.set $1
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.set $3
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:frontIndex
  local.set $2
  local.get $3
  i32.load
  local.get $2
  call $~lib/number/I32#toString
  local.tee $4
  call $~lib/string/String.__concat
  local.tee $5
  local.set $7
  local.get $7
  local.set $6
  local.get $4
  local.set $8
  nop
  local.get $5
  local.set $9
  nop
  local.get $6
  local.tee $5
  call $~lib/near-runtime-ts/storage/Storage#delete
  local.get $0
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:frontIndex
  i32.const 1
  i32.add
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#set:frontIndex
  local.get $1
  local.set $4
  local.get $5
  local.set $10
  nop
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#popBack (; 397 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  i32.const 1
  i32.sub
  local.set $1
  local.get $1
  i32.const 0
  i32.ge_s
  i32.eqz
  if
   i32.const 15000
   i32.const 14480
   i32.const 195
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__unchecked_get
  local.set $2
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.set $4
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:backIndex
  local.set $3
  local.get $4
  i32.load
  local.get $3
  call $~lib/number/I32#toString
  local.tee $5
  call $~lib/string/String.__concat
  local.tee $6
  local.set $8
  local.get $8
  local.set $7
  local.get $5
  local.set $9
  nop
  local.get $6
  local.set $10
  nop
  local.get $7
  local.tee $6
  call $~lib/near-runtime-ts/storage/Storage#delete
  local.get $0
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:backIndex
  i32.const 1
  i32.sub
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#set:backIndex
  local.get $2
  local.set $5
  local.get $6
  local.set $11
  nop
  local.get $5
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|4~anonymous|0 (; 398 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 i32)
  (local $60 i32)
  (local $61 i32)
  (local $62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 i32)
  (local $66 i32)
  (local $67 i32)
  (local $68 i32)
  (local $69 i32)
  (local $70 i32)
  (local $71 i32)
  (local $72 i32)
  (local $73 i32)
  (local $74 i32)
  (local $75 i32)
  (local $76 i32)
  (local $77 i32)
  (local $78 i32)
  (local $79 i32)
  (local $80 i32)
  (local $81 i32)
  (local $82 i32)
  (local $83 i32)
  (local $84 i32)
  (local $85 i32)
  (local $86 i32)
  (local $87 i32)
  (local $88 i32)
  (local $89 i32)
  (local $90 i32)
  (local $91 i32)
  (local $92 i32)
  (local $93 i32)
  (local $94 i32)
  (local $95 i32)
  (local $96 i32)
  (local $97 i32)
  (local $98 i32)
  (local $99 i32)
  (local $100 i32)
  (local $101 i32)
  (local $102 i32)
  (local $103 i32)
  (local $104 i32)
  (local $105 i32)
  (local $106 i32)
  (local $107 i32)
  (local $108 i32)
  (local $109 i32)
  (local $110 i32)
  (local $111 i32)
  (local $112 i32)
  (local $113 i32)
  (local $114 i32)
  (local $115 i32)
  (local $116 i32)
  (local $117 i32)
  (local $118 i32)
  (local $119 i32)
  (local $120 i32)
  (local $121 i32)
  (local $122 i32)
  (local $123 i32)
  (local $124 i32)
  (local $125 i32)
  (local $126 i32)
  (local $127 i32)
  (local $128 i32)
  (local $129 i32)
  (local $130 i32)
  (local $131 i32)
  (local $132 i32)
  (local $133 i32)
  (local $134 i32)
  (local $135 i32)
  (local $136 i32)
  (local $137 i32)
  (local $138 i32)
  (local $139 i32)
  (local $140 i32)
  (local $141 i32)
  (local $142 i32)
  i32.const 0
  i32.const 13960
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#constructor
  local.set $0
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $1
  i32.const 0
  i32.const 13992
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $2
  i32.const 1
  i32.const 14064
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:isEmpty
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $3
  i32.const 1
  i32.const 14136
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 14232
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#pushBack
  drop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $4
  i32.const 1
  i32.const 14256
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $5
  i32.const 1
  i32.const 14320
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const -1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $6
  i32.const 1
  i32.const 14320
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:isEmpty
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $7
  i32.const 0
  i32.const 14400
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__get
  local.tee $8
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $9
  i32.const 14232
  i32.const 14600
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back
  local.tee $10
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $11
  i32.const 14232
  i32.const 14672
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front
  local.tee $12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $13
  i32.const 14232
  i32.const 14728
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  local.set $14
  local.get $14
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front
  local.tee $15
  local.set $63
  local.get $63
  local.set $16
  local.get $15
  local.set $64
  nop
  local.get $16
  local.tee $15
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $14
  i32.const 14232
  i32.const 14784
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  local.set $16
  local.get $16
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back
  local.tee $17
  local.set $65
  local.get $65
  local.set $18
  local.get $17
  local.set $66
  nop
  local.get $18
  local.tee $17
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $16
  i32.const 14232
  i32.const 14840
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  i32.const 14896
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#pushFront
  drop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $18
  i32.const 2
  i32.const 14256
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $19
  i32.const 1
  i32.const 14320
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $20
  i32.const 1
  i32.const 14920
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:isEmpty
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $21
  i32.const 0
  i32.const 14400
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__get
  local.tee $22
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $23
  i32.const 14232
  i32.const 14600
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__get
  local.tee $24
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $25
  i32.const 14896
  i32.const 14600
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back
  local.tee $26
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $27
  i32.const 14232
  i32.const 14672
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front
  local.tee $28
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $29
  i32.const 14896
  i32.const 14728
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  local.set $30
  local.get $30
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front
  local.tee $31
  local.set $67
  local.get $67
  local.set $32
  local.get $31
  local.set $68
  nop
  local.get $32
  local.tee $31
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $30
  i32.const 14896
  i32.const 14784
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  local.set $32
  local.get $32
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back
  local.tee $33
  local.set $69
  local.get $69
  local.set $34
  local.get $33
  local.set $70
  nop
  local.get $34
  local.tee $33
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $32
  i32.const 14232
  i32.const 14840
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#popFront
  local.set $71
  nop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $34
  i32.const 1
  i32.const 14256
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $35
  i32.const 1
  i32.const 14320
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $36
  i32.const 1
  i32.const 15048
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:isEmpty
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $37
  i32.const 0
  i32.const 14400
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__get
  local.tee $38
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $39
  i32.const 14232
  i32.const 14600
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back
  local.tee $40
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $41
  i32.const 14232
  i32.const 14672
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front
  local.tee $42
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $43
  i32.const 14232
  i32.const 14728
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  local.set $44
  local.get $44
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front
  local.tee $45
  local.set $72
  local.get $72
  local.set $46
  local.get $45
  local.set $73
  nop
  local.get $46
  local.tee $45
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $44
  i32.const 14232
  i32.const 14784
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  local.set $46
  local.get $46
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back
  local.tee $47
  local.set $74
  local.get $74
  local.set $48
  local.get $47
  local.set $75
  nop
  local.get $48
  local.tee $47
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $46
  i32.const 14232
  i32.const 14840
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  i32.const 14896
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#pushFront
  drop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#popBack
  local.set $76
  nop
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $48
  i32.const 1
  i32.const 14256
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $49
  i32.const 1
  i32.const 14320
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#containsIndex
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $50
  i32.const 1
  i32.const 15048
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:isEmpty
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $51
  i32.const 0
  i32.const 14400
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#__get
  local.tee $52
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $53
  i32.const 14896
  i32.const 14600
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back
  local.tee $54
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $55
  i32.const 14896
  i32.const 14672
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front
  local.tee $56
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $57
  i32.const 14896
  i32.const 14728
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  local.set $58
  local.get $58
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:front
  local.tee $59
  local.set $77
  local.get $77
  local.set $60
  local.get $59
  local.set $78
  nop
  local.get $60
  local.tee $59
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $58
  i32.const 14896
  i32.const 14784
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  local.set $60
  local.get $60
  call $~lib/near-runtime-ts/collections/persistentDeque/PersistentDeque<~lib/string/String>#get:back
  local.tee $61
  local.set $79
  local.get $79
  local.set $62
  local.get $61
  local.set $80
  nop
  local.get $62
  local.tee $61
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $60
  i32.const 14896
  i32.const 14840
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  local.set $81
  nop
  local.get $1
  local.set $82
  nop
  local.get $2
  local.set $83
  nop
  local.get $3
  local.set $84
  nop
  local.get $4
  local.set $85
  nop
  local.get $5
  local.set $86
  nop
  local.get $6
  local.set $87
  nop
  local.get $7
  local.set $88
  nop
  local.get $8
  local.set $89
  nop
  local.get $9
  local.set $90
  nop
  local.get $10
  local.set $91
  nop
  local.get $11
  local.set $92
  nop
  local.get $12
  local.set $93
  nop
  local.get $13
  local.set $94
  nop
  local.get $15
  local.set $95
  nop
  local.get $14
  local.set $96
  nop
  local.get $17
  local.set $97
  nop
  local.get $16
  local.set $98
  nop
  local.get $18
  local.set $99
  nop
  local.get $19
  local.set $100
  nop
  local.get $20
  local.set $101
  nop
  local.get $21
  local.set $102
  nop
  local.get $22
  local.set $103
  nop
  local.get $23
  local.set $104
  nop
  local.get $24
  local.set $105
  nop
  local.get $25
  local.set $106
  nop
  local.get $26
  local.set $107
  nop
  local.get $27
  local.set $108
  nop
  local.get $28
  local.set $109
  nop
  local.get $29
  local.set $110
  nop
  local.get $31
  local.set $111
  nop
  local.get $30
  local.set $112
  nop
  local.get $33
  local.set $113
  nop
  local.get $32
  local.set $114
  nop
  local.get $34
  local.set $115
  nop
  local.get $35
  local.set $116
  nop
  local.get $36
  local.set $117
  nop
  local.get $37
  local.set $118
  nop
  local.get $38
  local.set $119
  nop
  local.get $39
  local.set $120
  nop
  local.get $40
  local.set $121
  nop
  local.get $41
  local.set $122
  nop
  local.get $42
  local.set $123
  nop
  local.get $43
  local.set $124
  nop
  local.get $45
  local.set $125
  nop
  local.get $44
  local.set $126
  nop
  local.get $47
  local.set $127
  nop
  local.get $46
  local.set $128
  nop
  local.get $48
  local.set $129
  nop
  local.get $49
  local.set $130
  nop
  local.get $50
  local.set $131
  nop
  local.get $51
  local.set $132
  nop
  local.get $52
  local.set $133
  nop
  local.get $53
  local.set $134
  nop
  local.get $54
  local.set $135
  nop
  local.get $55
  local.set $136
  nop
  local.get $56
  local.set $137
  nop
  local.get $57
  local.set $138
  nop
  local.get $59
  local.set $139
  nop
  local.get $58
  local.set $140
  nop
  local.get $61
  local.set $141
  nop
  local.get $60
  local.set $142
  nop
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|4 (; 399 ;) (type $FUNCSIG$v)
  i32.const 11208
  i32.const 23
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#constructor (; 400 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  i32.eqz
  if
   i32.const 4
   i32.const 44
   call $~lib/rt/stub/__alloc
   local.set $6
   local.get $6
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  local.tee $3
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  local.tee $2
  local.tee $4
  local.get $3
  i32.load
  local.tee $3
  i32.ne
  if
   local.get $4
   local.set $7
   local.get $7
   drop
   local.get $3
   local.set $8
   nop
  end
  local.get $4
  i32.store
  local.get $2
  local.set $9
  nop
  local.get $1
  local.set $10
  nop
  local.get $0
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#constructor (; 401 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  local.get $1
  local.set $8
  local.get $8
  drop
  local.get $0
  i32.eqz
  if
   i32.const 20
   i32.const 43
   call $~lib/rt/stub/__alloc
   local.set $9
   local.get $9
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store8 offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 0
  i32.store offset=16
  local.get $0
  local.tee $4
  i32.const 0
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_RATING_SUFFIX
  call $~lib/string/String.__concat
  local.tee $3
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#constructor
  local.set $5
  local.get $4
  i32.load offset=16
  local.set $10
  nop
  local.get $5
  i32.store offset=16
  local.get $0
  local.tee $4
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  local.tee $5
  local.tee $6
  local.get $4
  i32.load
  local.tee $4
  i32.ne
  if
   local.get $6
   local.set $11
   local.get $11
   drop
   local.get $4
   local.set $12
   nop
  end
  local.get $6
  i32.store
  local.get $0
  local.get $2
  i32.store8 offset=4
  local.get $0
  local.tee $4
  local.get $1
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_LENGTH_SUFFIX
  call $~lib/string/String.__concat
  local.tee $6
  local.tee $7
  local.get $4
  i32.load offset=12
  local.tee $4
  i32.ne
  if
   local.get $7
   local.set $13
   local.get $13
   drop
   local.get $4
   local.set $14
   nop
  end
  local.get $7
  i32.store offset=12
  local.get $0
  i32.const -1
  i32.store offset=8
  local.get $3
  local.set $15
  nop
  local.get $5
  local.set $16
  nop
  local.get $6
  local.set $17
  nop
  local.get $1
  local.set $18
  nop
  local.get $0
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length (; 402 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  i32.load offset=8
  i32.const 0
  i32.lt_s
  if
   local.get $0
   global.get $~lib/near-runtime-ts/storage/storage
   local.get $0
   i32.load offset=12
   i32.const 0
   call $~lib/near-runtime-ts/storage/Storage#getPrimitive<i32>
   i32.store offset=8
  end
  local.get $0
  i32.load offset=8
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:isEmpty (; 403 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length
  i32.const 0
  i32.eq
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#_key (; 404 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/string/String#toString
  local.tee $2
  call $~lib/string/String.__concat
  local.tee $3
  local.set $6
  local.get $6
  local.set $4
  local.get $2
  local.set $7
  nop
  local.get $3
  local.set $8
  nop
  local.get $1
  local.set $9
  nop
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#contains (; 405 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#_key
  local.tee $2
  call $~lib/near-runtime-ts/storage/Storage#contains
  local.set $3
  local.get $2
  local.set $5
  nop
  local.get $1
  local.set $6
  nop
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains (; 406 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $0
  i32.load offset=16
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#contains
  local.set $2
  local.get $1
  local.set $4
  nop
  local.get $2
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#getSome (; 407 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#_key
  local.tee $2
  call $~lib/near-runtime-ts/storage/Storage#getSome<i32>
  local.set $3
  local.get $2
  local.set $5
  nop
  local.get $1
  local.set $6
  nop
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#delete (; 408 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#_key
  local.tee $2
  call $~lib/near-runtime-ts/storage/Storage#delete
  local.get $2
  local.set $4
  nop
  local.get $1
  local.set $5
  nop
 )
 (func $~lib/string/String#padStart (; 409 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  local.get $2
  local.set $11
  local.get $11
  drop
  local.get $0
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $3
  local.get $1
  i32.const 1
  i32.shl
  local.set $4
  local.get $2
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $5
  local.get $4
  local.get $3
  i32.lt_u
  if (result i32)
   i32.const 1
  else
   local.get $5
   i32.eqz
  end
  if
   local.get $0
   local.set $12
   local.get $12
   local.set $6
   local.get $2
   local.set $13
   nop
   local.get $6
   return
  end
  local.get $4
  local.get $3
  i32.sub
  local.set $7
  local.get $4
  i32.const 1
  call $~lib/rt/stub/__alloc
  local.set $8
  local.get $7
  local.get $5
  i32.gt_u
  if
   local.get $7
   i32.const 2
   i32.sub
   local.get $5
   i32.div_u
   local.set $6
   local.get $6
   local.get $5
   i32.mul
   local.set $9
   local.get $7
   local.get $9
   i32.sub
   local.set $10
   local.get $8
   local.get $2
   local.get $5
   local.get $6
   call $~lib/memory/memory.repeat
   local.get $8
   local.get $9
   i32.add
   local.get $2
   local.get $10
   call $~lib/memory/memory.copy
  else
   local.get $8
   local.get $2
   local.get $7
   call $~lib/memory/memory.copy
  end
  local.get $8
  local.get $7
  i32.add
  local.get $0
  local.get $3
  call $~lib/memory/memory.copy
  local.get $8
  local.set $14
  local.get $14
  local.set $10
  local.get $2
  local.set $15
  nop
  local.get $10
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_ratingKey (; 410 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i64.extend_i32_s
  global.get $~lib/near-runtime-ts/collections/index/collections._RATING_OFFSET
  i64.add
  i32.wrap_i64
  local.set $2
  local.get $0
  i32.load8_u offset=4
  if
   global.get $~lib/builtins/u32.MAX_VALUE
   local.get $2
   i32.sub
   local.set $2
  end
  local.get $2
  call $~lib/number/U32#toString
  local.tee $3
  i32.const 10
  i32.const 2656
  call $~lib/string/String#padStart
  local.set $4
  local.get $3
  local.set $5
  nop
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_keySuffix (; 411 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  global.get $~lib/near-runtime-ts/collections/index/collections._KEY_ELEMENT_SUFFIX
  local.get $1
  call $~lib/string/String#toString
  local.tee $2
  call $~lib/string/String.__concat
  local.tee $3
  local.set $6
  local.get $6
  local.set $4
  local.get $2
  local.set $7
  nop
  local.get $3
  local.set $8
  nop
  local.get $1
  local.set $9
  nop
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_orderKey (; 412 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  local.get $2
  local.set $8
  local.get $8
  drop
  local.get $0
  i32.load
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_ratingKey
  local.tee $3
  call $~lib/string/String.__concat
  local.tee $4
  local.get $0
  local.get $2
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_keySuffix
  local.tee $5
  call $~lib/string/String.__concat
  local.tee $6
  local.set $9
  local.get $9
  local.set $7
  local.get $3
  local.set $10
  nop
  local.get $4
  local.set $11
  nop
  local.get $5
  local.set $12
  nop
  local.get $6
  local.set $13
  nop
  local.get $2
  local.set $14
  nop
  local.get $7
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#set:length (; 413 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#delete (; 414 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  if
   local.get $0
   i32.load offset=16
   local.get $1
   call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#getSome
   local.set $2
   local.get $0
   i32.load offset=16
   local.get $1
   call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#delete
   global.get $~lib/near-runtime-ts/storage/storage
   local.get $0
   local.get $2
   local.get $1
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_orderKey
   local.tee $3
   call $~lib/near-runtime-ts/storage/Storage#delete
   local.get $0
   local.get $0
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length
   i32.const 1
   i32.sub
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#set:length
   local.get $3
   local.set $5
   nop
  end
  local.get $1
  local.set $6
  nop
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#constructor (; 415 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 16
   i32.const 46
   call $~lib/rt/stub/__alloc
   local.set $2
   local.get $2
  end
  local.get $1
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
  local.get $1
  i32.store offset=12
  local.get $0
 )
 (func $~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>#constructor (; 416 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $3
  local.get $3
  drop
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 45
   call $~lib/rt/stub/__alloc
   local.set $4
   local.get $4
   local.set $0
  end
  local.get $0
  local.get $1
  local.set $5
  local.get $5
  i32.store
  local.get $0
  local.get $2
  i32.store offset=4
  local.get $1
  local.set $6
  nop
  local.get $0
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__unchecked_set (; 417 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $2
  local.set $5
  local.get $5
  drop
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  local.get $3
  i32.load
  local.set $4
  local.get $2
  local.get $4
  i32.ne
  if
   local.get $3
   local.get $2
   local.set $6
   local.get $6
   i32.store
   local.get $4
   local.set $7
   nop
  end
  local.get $2
  local.set $8
  nop
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__set (; 418 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $2
  local.set $3
  local.get $3
  drop
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    local.get $2
    local.set $4
    nop
    i32.const 760
    i32.const 1560
    i32.const 109
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.const 2
   call $~lib/array/ensureSize
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.store offset=12
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__unchecked_set
  local.get $2
  local.set $5
  nop
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings (; 419 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $1
  local.set $6
  local.get $6
  drop
  i32.const 0
  local.get $1
  local.set $7
  local.get $7
  i32.load offset=12
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#constructor
  local.set $2
  block $break|0
   i32.const 0
   local.set $3
   loop $loop|0
    local.get $3
    local.get $1
    local.set $8
    local.get $8
    i32.load offset=12
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $1
    local.get $3
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $4
    local.get $2
    local.get $3
    i32.const 0
    local.get $4
    local.get $0
    i32.load offset=16
    local.get $4
    call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#getSome
    call $~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>#constructor
    local.tee $5
    call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__set
    local.get $4
    local.set $9
    nop
    local.get $5
    local.set $10
    nop
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $loop|0
   end
   unreachable
  end
  local.get $2
  local.set $3
  local.get $1
  local.set $11
  nop
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop~anonymous|0 (; 420 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  local.set $5
  local.get $5
  drop
  local.get $2
  local.set $6
  local.get $6
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  call $~lib/near-runtime-ts/storage/Storage#getSome<~lib/string/String>
  local.tee $3
  local.set $4
  local.get $3
  local.set $7
  nop
  local.get $0
  local.set $8
  nop
  local.get $2
  local.set $9
  nop
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop (; 421 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  i32.load
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#keys
  local.set $2
  local.get $2
  i32.const 25
  call $~lib/array/Array<~lib/string/String>#map<~lib/string/String>
  local.set $3
  local.get $2
  local.set $4
  nop
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRating (; 422 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $2
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.set $3
  local.get $2
  local.set $4
  nop
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getRating (; 423 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  local.get $0
  i32.load offset=16
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#contains
  if (result i32)
   local.get $0
   i32.load offset=16
   local.get $1
   call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#getSome
  else
   local.get $2
  end
  local.set $3
  local.get $1
  local.set $5
  nop
  local.get $3
 )
 (func $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#set (; 424 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.set $4
  local.get $4
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#_key
  local.tee $3
  local.get $2
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
  local.get $3
  local.set $5
  nop
  local.get $1
  local.set $6
  nop
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#setRating (; 425 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.set $5
  local.get $5
  drop
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  if
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getRating
   local.set $3
   global.get $~lib/near-runtime-ts/storage/storage
   local.get $0
   local.get $3
   local.get $1
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_orderKey
   local.tee $4
   call $~lib/near-runtime-ts/storage/Storage#delete
   local.get $4
   local.set $6
   nop
  else
   local.get $0
   local.get $0
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length
   i32.const 1
   i32.add
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#set:length
  end
  local.get $0
  i32.load offset=16
  local.get $1
  local.get $2
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#set
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $2
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_orderKey
  local.tee $4
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#set<~lib/string/String>
  local.get $4
  local.set $7
  nop
  local.get $1
  local.set $8
  nop
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__get (; 426 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 760
   i32.const 1560
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $4
  local.get $1
  local.set $5
  i32.const 0
  local.set $6
  local.get $4
  i32.load offset=4
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $6
  local.get $6
  local.set $2
  local.get $2
  i32.eqz
  if
   local.get $2
   local.set $3
   nop
   i32.const 4072
   i32.const 1560
   i32.const 97
   i32.const 39
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey~anonymous|0 (; 427 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  local.set $5
  local.get $5
  drop
  local.get $2
  local.set $6
  local.get $6
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  call $~lib/near-runtime-ts/storage/Storage#getSome<~lib/string/String>
  local.tee $3
  local.set $4
  local.get $3
  local.set $7
  nop
  local.get $0
  local.set $8
  nop
  local.get $2
  local.set $9
  nop
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey (; 428 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  local.get $2
  local.set $12
  local.get $12
  drop
  local.get $0
  local.get $2
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  i32.eqz
  if
   i32.const 16456
   local.get $2
   call $~lib/string/String.__concat
   local.tee $3
   i32.const 16512
   call $~lib/string/String.__concat
   local.tee $4
   i32.const 16560
   i32.const 149
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $2
  i32.const 0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getRating
  local.set $5
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $5
  local.get $2
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_orderKey
  local.tee $6
  local.get $0
  i32.load
  i32.const 1
  global.set $~lib/argc
  i32.const 255
  i32.const 0
  call $~lib/string/String.fromCharCode|trampoline
  local.tee $7
  call $~lib/string/String.__concat
  local.tee $8
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#keyRange
  local.set $9
  local.get $9
  i32.const 1
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<~lib/string/String>#slice
  local.tee $10
  i32.const 26
  call $~lib/array/Array<~lib/string/String>#map<~lib/string/String>
  local.set $11
  local.get $3
  local.set $13
  nop
  local.get $4
  local.set $14
  nop
  local.get $6
  local.set $15
  nop
  local.get $7
  local.set $16
  nop
  local.get $8
  local.set $17
  nop
  local.get $9
  local.set $18
  nop
  local.get $10
  local.set $19
  nop
  local.get $2
  local.set $20
  nop
  local.get $11
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRatingFromKey (; 429 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $2
  local.set $5
  local.get $5
  drop
  local.get $0
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey
  local.tee $3
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.set $4
  local.get $3
  local.set $6
  nop
  local.get $2
  local.set $7
  nop
  local.get $4
 )
 (func $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#incrementRating (; 430 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $1
  local.set $6
  local.get $6
  drop
  i32.const 0
  local.set $3
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  if
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getRating
   local.set $3
   global.get $~lib/near-runtime-ts/storage/storage
   local.get $0
   local.get $3
   local.get $1
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_orderKey
   local.tee $4
   call $~lib/near-runtime-ts/storage/Storage#delete
   local.get $4
   local.set $7
   nop
  else
   local.get $0
   local.get $0
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length
   i32.const 1
   i32.add
   call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#set:length
  end
  local.get $3
  local.get $2
  i32.add
  local.set $4
  local.get $0
  i32.load offset=16
  local.get $1
  local.get $4
  call $~lib/near-runtime-ts/collections/persistentMap/PersistentMap<~lib/string/String,i32>#set
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $4
  local.get $1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#_orderKey
  local.tee $5
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#set<~lib/string/String>
  local.get $5
  local.set $8
  nop
  local.get $1
  local.set $9
  nop
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|5~anonymous|0 (; 431 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 i32)
  (local $60 i32)
  (local $61 i32)
  (local $62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 i32)
  (local $66 i32)
  (local $67 i32)
  (local $68 i32)
  (local $69 i32)
  (local $70 i32)
  (local $71 i32)
  (local $72 i32)
  (local $73 i32)
  (local $74 i32)
  (local $75 i32)
  (local $76 i32)
  (local $77 i32)
  (local $78 i32)
  (local $79 i32)
  (local $80 i32)
  (local $81 i32)
  (local $82 i32)
  (local $83 i32)
  (local $84 i32)
  (local $85 i32)
  (local $86 i32)
  (local $87 i32)
  (local $88 i32)
  (local $89 i32)
  (local $90 i32)
  (local $91 i32)
  (local $92 i32)
  (local $93 i32)
  (local $94 i32)
  (local $95 i32)
  (local $96 i32)
  (local $97 i32)
  (local $98 i32)
  (local $99 i32)
  (local $100 i32)
  (local $101 i32)
  (local $102 i32)
  (local $103 i32)
  (local $104 i32)
  (local $105 i32)
  (local $106 i32)
  (local $107 i32)
  (local $108 i32)
  (local $109 i32)
  (local $110 i32)
  (local $111 i32)
  (local $112 i32)
  (local $113 i32)
  (local $114 i32)
  (local $115 i32)
  (local $116 i32)
  (local $117 i32)
  (local $118 i32)
  (local $119 i32)
  (local $120 i32)
  (local $121 i32)
  (local $122 i32)
  (local $123 i32)
  (local $124 i32)
  (local $125 i32)
  (local $126 i32)
  (local $127 i32)
  (local $128 i32)
  (local $129 i32)
  (local $130 i32)
  (local $131 i32)
  (local $132 i32)
  (local $133 i32)
  (local $134 i32)
  (local $135 i32)
  (local $136 i32)
  (local $137 i32)
  (local $138 i32)
  (local $139 i32)
  (local $140 i32)
  (local $141 i32)
  (local $142 i32)
  (local $143 i32)
  (local $144 i32)
  (local $145 i32)
  (local $146 i32)
  (local $147 i32)
  (local $148 i32)
  (local $149 i32)
  (local $150 i32)
  (local $151 i32)
  (local $152 i32)
  (local $153 i32)
  (local $154 i32)
  (local $155 i32)
  (local $156 i32)
  (local $157 i32)
  (local $158 i32)
  (local $159 i32)
  (local $160 i32)
  (local $161 i32)
  (local $162 i32)
  (local $163 i32)
  (local $164 i32)
  (local $165 i32)
  (local $166 i32)
  (local $167 i32)
  (local $168 i32)
  (local $169 i32)
  (local $170 i32)
  (local $171 i32)
  (local $172 i32)
  (local $173 i32)
  (local $174 i32)
  (local $175 i32)
  (local $176 i32)
  (local $177 i32)
  (local $178 i32)
  (local $179 i32)
  (local $180 i32)
  (local $181 i32)
  (local $182 i32)
  (local $183 i32)
  (local $184 i32)
  (local $185 i32)
  (local $186 i32)
  (local $187 i32)
  (local $188 i32)
  (local $189 i32)
  (local $190 i32)
  (local $191 i32)
  (local $192 i32)
  (local $193 i32)
  (local $194 i32)
  (local $195 i32)
  (local $196 i32)
  (local $197 i32)
  (local $198 i32)
  (local $199 i32)
  (local $200 i32)
  (local $201 i32)
  (local $202 i32)
  (local $203 i32)
  (local $204 i32)
  (local $205 i32)
  (local $206 i32)
  (local $207 i32)
  (local $208 i32)
  (local $209 i32)
  (local $210 i32)
  (local $211 i32)
  (local $212 i32)
  (local $213 i32)
  (local $214 i32)
  (local $215 i32)
  (local $216 i32)
  (local $217 i32)
  (local $218 i32)
  (local $219 i32)
  (local $220 i32)
  (local $221 i32)
  (local $222 i32)
  (local $223 i32)
  (local $224 i32)
  (local $225 i32)
  (local $226 i32)
  (local $227 i32)
  (local $228 i32)
  (local $229 i32)
  (local $230 i32)
  (local $231 i32)
  (local $232 i32)
  (local $233 i32)
  i32.const 0
  i32.const 15160
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.ne
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $1
  i32.const 1
  i32.const 15192
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:isEmpty
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $2
  i32.const 1
  i32.const 15232
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $3
  i32.const 0
  i32.const 15328
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 2224
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $4
  i32.const 1
  i32.const 15400
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 2224
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#delete
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $5
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $6
  local.set $103
  local.get $103
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $7
  i32.const 0
  i32.const 15496
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $8
  local.set $104
  local.get $104
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $9
  i32.const 0
  i32.const 15600
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRating
  local.tee $10
  local.set $105
  local.get $105
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $11
  i32.const 0
  i32.const 15712
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 15816
  i32.const 5
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#setRating
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:isEmpty
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $12
  i32.const 1
  i32.const 15840
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $13
  i32.const 1
  i32.const 15920
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 2224
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $14
  i32.const 1
  i32.const 15976
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 15816
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $15
  i32.const 1
  i32.const 16056
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 2224
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#delete
  local.get $0
  i32.const 1
  i32.const 2
  i32.const 8
  i32.const 16176
  call $~lib/rt/__allocArray
  local.set $106
  local.get $106
  local.tee $17
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $16
  local.set $107
  local.get $107
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $18
  i32.const 1
  i32.const 16200
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 1
  i32.const 2
  i32.const 8
  i32.const 16280
  call $~lib/rt/__allocArray
  local.set $108
  local.get $108
  local.tee $20
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $19
  i32.const 0
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__get
  local.tee $21
  i32.load offset=4
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $22
  i32.const 5
  i32.const 16200
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $23
  local.set $109
  local.get $109
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $24
  i32.const 1
  i32.const 16304
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $25
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $26
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $27
  i32.const 15816
  i32.const 16400
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  i32.const 10
  i32.const 15816
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey
  local.tee $28
  local.set $110
  local.get $110
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $29
  i32.const 0
  i32.const 16680
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRating
  local.tee $30
  local.set $111
  local.get $111
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $31
  i32.const 1
  i32.const 16768
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 10
  i32.const 15816
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRatingFromKey
  local.tee $32
  local.set $112
  local.get $112
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $33
  i32.const 0
  i32.const 16896
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 17008
  i32.const 5
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#setRating
  local.get $0
  i32.const 15816
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#incrementRating
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:isEmpty
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $34
  i32.const 1
  i32.const 15840
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $35
  i32.const 2
  i32.const 15920
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 2224
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $36
  i32.const 1
  i32.const 15976
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 17008
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $37
  i32.const 1
  i32.const 16056
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 15816
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $38
  i32.const 1
  i32.const 16056
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 2224
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#delete
  local.get $0
  i32.const 1
  i32.const 2
  i32.const 8
  i32.const 17032
  call $~lib/rt/__allocArray
  local.set $113
  local.get $113
  local.tee $40
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $39
  local.set $114
  local.get $114
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $41
  i32.const 1
  i32.const 16200
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 8
  i32.const 17056
  call $~lib/rt/__allocArray
  local.set $115
  local.get $115
  local.tee $43
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $42
  local.set $116
  local.get $116
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $44
  i32.const 2
  i32.const 16200
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 8
  i32.const 17080
  call $~lib/rt/__allocArray
  local.set $117
  local.get $117
  local.tee $46
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $45
  i32.const 0
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__get
  local.tee $47
  i32.load offset=4
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $48
  i32.const 6
  i32.const 16200
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 2
  i32.const 2
  i32.const 8
  i32.const 17104
  call $~lib/rt/__allocArray
  local.set $118
  local.get $118
  local.tee $50
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $49
  i32.const 1
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__get
  local.tee $51
  i32.load offset=4
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $52
  i32.const 5
  i32.const 16200
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $53
  local.set $119
  local.get $119
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $54
  i32.const 2
  i32.const 17128
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $55
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $56
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $57
  i32.const 15816
  i32.const 16400
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $58
  i32.const 1
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $59
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $60
  i32.const 17008
  i32.const 16400
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $61
  local.set $120
  local.get $120
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $62
  i32.const 1
  i32.const 17200
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $63
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $64
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $65
  i32.const 15816
  i32.const 16400
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  i32.const 10
  i32.const 17008
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey
  local.tee $66
  local.set $121
  local.get $121
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $67
  i32.const 0
  i32.const 16680
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 10
  i32.const 15816
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey
  local.tee $68
  local.set $122
  local.get $122
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $69
  i32.const 1
  i32.const 16680
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 10
  i32.const 15816
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey
  local.tee $70
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $71
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $72
  i32.const 17008
  i32.const 16680
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRating
  local.tee $73
  local.set $123
  local.get $123
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $74
  i32.const 2
  i32.const 16768
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRating
  local.tee $75
  i32.const 0
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__get
  local.tee $76
  i32.load offset=4
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $77
  i32.const 6
  i32.const 16768
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRating
  local.tee $78
  i32.const 1
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__get
  local.tee $79
  i32.load offset=4
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $80
  i32.const 5
  i32.const 16768
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 15816
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#delete
  local.get $0
  i32.const 17008
  i32.const 1
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#incrementRating
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:isEmpty
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $81
  i32.const 1
  i32.const 15840
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#get:length
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $82
  i32.const 1
  i32.const 15920
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 2224
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $83
  i32.const 1
  i32.const 15976
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 17008
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#contains
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.tee $84
  i32.const 1
  i32.const 16056
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $0
  i32.const 2224
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#delete
  local.get $0
  i32.const 1
  i32.const 2
  i32.const 8
  i32.const 17312
  call $~lib/rt/__allocArray
  local.set $124
  local.get $124
  local.tee $86
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $85
  local.set $125
  local.get $125
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $87
  i32.const 1
  i32.const 16200
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 1
  i32.const 2
  i32.const 8
  i32.const 17336
  call $~lib/rt/__allocArray
  local.set $126
  local.get $126
  local.tee $89
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#keysToRatings
  local.tee $88
  i32.const 0
  call $~lib/array/Array<~lib/near-runtime-ts/collections/index/collections.MapEntry<~lib/string/String,i32>>#__get
  local.tee $90
  i32.load offset=4
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $91
  i32.const 6
  i32.const 16200
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $92
  local.set $127
  local.get $127
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $93
  i32.const 1
  i32.const 16304
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTop
  local.tee $94
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.tee $95
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $96
  i32.const 17008
  i32.const 16400
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  i32.const 10
  i32.const 17008
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopFromKey
  local.tee $97
  local.set $128
  local.get $128
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $98
  i32.const 0
  i32.const 16680
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 10
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRating
  local.tee $99
  local.set $129
  local.get $129
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $100
  i32.const 1
  i32.const 16768
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  i32.const 10
  i32.const 17008
  call $~lib/near-runtime-ts/collections/persistentTopn/PersistentTopN<~lib/string/String>#getTopWithRatingFromKey
  local.tee $101
  local.set $130
  local.get $130
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $102
  i32.const 0
  i32.const 16896
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $0
  local.set $131
  nop
  local.get $1
  local.set $132
  nop
  local.get $2
  local.set $133
  nop
  local.get $3
  local.set $134
  nop
  local.get $4
  local.set $135
  nop
  local.get $5
  local.set $136
  nop
  local.get $6
  local.set $137
  nop
  local.get $7
  local.set $138
  nop
  local.get $8
  local.set $139
  nop
  local.get $9
  local.set $140
  nop
  local.get $10
  local.set $141
  nop
  local.get $11
  local.set $142
  nop
  local.get $12
  local.set $143
  nop
  local.get $13
  local.set $144
  nop
  local.get $14
  local.set $145
  nop
  local.get $15
  local.set $146
  nop
  local.get $17
  local.set $147
  nop
  local.get $16
  local.set $148
  nop
  local.get $18
  local.set $149
  nop
  local.get $20
  local.set $150
  nop
  local.get $19
  local.set $151
  nop
  local.get $21
  local.set $152
  nop
  local.get $22
  local.set $153
  nop
  local.get $23
  local.set $154
  nop
  local.get $24
  local.set $155
  nop
  local.get $25
  local.set $156
  nop
  local.get $26
  local.set $157
  nop
  local.get $27
  local.set $158
  nop
  local.get $28
  local.set $159
  nop
  local.get $29
  local.set $160
  nop
  local.get $30
  local.set $161
  nop
  local.get $31
  local.set $162
  nop
  local.get $32
  local.set $163
  nop
  local.get $33
  local.set $164
  nop
  local.get $34
  local.set $165
  nop
  local.get $35
  local.set $166
  nop
  local.get $36
  local.set $167
  nop
  local.get $37
  local.set $168
  nop
  local.get $38
  local.set $169
  nop
  local.get $40
  local.set $170
  nop
  local.get $39
  local.set $171
  nop
  local.get $41
  local.set $172
  nop
  local.get $43
  local.set $173
  nop
  local.get $42
  local.set $174
  nop
  local.get $44
  local.set $175
  nop
  local.get $46
  local.set $176
  nop
  local.get $45
  local.set $177
  nop
  local.get $47
  local.set $178
  nop
  local.get $48
  local.set $179
  nop
  local.get $50
  local.set $180
  nop
  local.get $49
  local.set $181
  nop
  local.get $51
  local.set $182
  nop
  local.get $52
  local.set $183
  nop
  local.get $53
  local.set $184
  nop
  local.get $54
  local.set $185
  nop
  local.get $55
  local.set $186
  nop
  local.get $56
  local.set $187
  nop
  local.get $57
  local.set $188
  nop
  local.get $58
  local.set $189
  nop
  local.get $59
  local.set $190
  nop
  local.get $60
  local.set $191
  nop
  local.get $61
  local.set $192
  nop
  local.get $62
  local.set $193
  nop
  local.get $63
  local.set $194
  nop
  local.get $64
  local.set $195
  nop
  local.get $65
  local.set $196
  nop
  local.get $66
  local.set $197
  nop
  local.get $67
  local.set $198
  nop
  local.get $68
  local.set $199
  nop
  local.get $69
  local.set $200
  nop
  local.get $70
  local.set $201
  nop
  local.get $71
  local.set $202
  nop
  local.get $72
  local.set $203
  nop
  local.get $73
  local.set $204
  nop
  local.get $74
  local.set $205
  nop
  local.get $75
  local.set $206
  nop
  local.get $76
  local.set $207
  nop
  local.get $77
  local.set $208
  nop
  local.get $78
  local.set $209
  nop
  local.get $79
  local.set $210
  nop
  local.get $80
  local.set $211
  nop
  local.get $81
  local.set $212
  nop
  local.get $82
  local.set $213
  nop
  local.get $83
  local.set $214
  nop
  local.get $84
  local.set $215
  nop
  local.get $86
  local.set $216
  nop
  local.get $85
  local.set $217
  nop
  local.get $87
  local.set $218
  nop
  local.get $89
  local.set $219
  nop
  local.get $88
  local.set $220
  nop
  local.get $90
  local.set $221
  nop
  local.get $91
  local.set $222
  nop
  local.get $92
  local.set $223
  nop
  local.get $93
  local.set $224
  nop
  local.get $94
  local.set $225
  nop
  local.get $95
  local.set $226
  nop
  local.get $96
  local.set $227
  nop
  local.get $97
  local.set $228
  nop
  local.get $98
  local.set $229
  nop
  local.get $99
  local.set $230
  nop
  local.get $100
  local.set $231
  nop
  local.get $101
  local.set $232
  nop
  local.get $102
  local.set $233
  nop
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|5 (; 432 ;) (type $FUNCSIG$v)
  i32.const 11208
  i32.const 27
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#constructor (; 433 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 16
   i32.const 48
   call $~lib/rt/stub/__alloc
   local.set $2
   local.get $2
  end
  local.get $1
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
  local.get $1
  i32.store offset=12
  local.get $0
 )
 (func $~lib/near-runtime-ts/contract/ContractPromiseResult#constructor (; 434 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 47
   call $~lib/rt/stub/__alloc
   local.set $1
   local.get $1
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#__unchecked_set (; 435 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $2
  local.set $5
  local.get $5
  drop
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  local.get $3
  i32.load
  local.set $4
  local.get $2
  local.get $4
  i32.ne
  if
   local.get $3
   local.get $2
   local.set $6
   local.get $6
   i32.store
   local.get $4
   local.set $7
   nop
  end
  local.get $2
  local.set $8
  nop
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#__set (; 436 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $2
  local.set $3
  local.get $3
  drop
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    local.get $2
    local.set $4
    nop
    i32.const 760
    i32.const 1560
    i32.const 109
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.const 2
   call $~lib/array/ensureSize
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.store offset=12
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#__unchecked_set
  local.get $2
  local.set $5
  nop
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#__get (; 437 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 760
   i32.const 1560
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $4
  local.get $1
  local.set $5
  i32.const 0
  local.set $6
  local.get $4
  i32.load offset=4
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $6
  local.get $6
  local.set $2
  local.get $2
  i32.eqz
  if
   local.get $2
   local.set $3
   nop
   i32.const 4072
   i32.const 1560
   i32.const 97
   i32.const 39
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
 )
 (func $~lib/near-runtime-ts/contract/ContractPromise.getResults (; 438 ;) (type $FUNCSIG$i) (result i32)
  (local $0 i64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  call $~lib/near-runtime-ts/runtime_api/runtime_api.promise_results_count
  local.set $0
  i32.const 0
  local.get $0
  i32.wrap_i64
  call $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#constructor
  local.set $1
  block $break|0
   i32.const 0
   local.set $2
   loop $loop|0
    local.get $2
    i64.extend_i32_s
    local.get $0
    i64.lt_s
    i32.eqz
    br_if $break|0
    block $continue|0
     local.get $2
     i64.extend_i32_s
     i64.const 0
     call $~lib/near-runtime-ts/runtime_api/runtime_api.promise_result
     i32.wrap_i64
     local.set $3
     local.get $3
     i32.const 1
     i32.eq
     local.set $4
     local.get $4
     i32.eqz
     if
      local.get $1
      local.get $2
      i32.const 0
      call $~lib/near-runtime-ts/contract/ContractPromiseResult#constructor
      local.tee $5
      call $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#__set
      local.get $1
      local.get $2
      call $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#__get
      local.tee $6
      local.get $3
      i32.store
      local.get $5
      local.set $7
      nop
      local.get $6
      local.set $8
      nop
      br $continue|0
     end
     i64.const 0
     call $~lib/near-runtime-ts/util/util.read_register
     local.set $6
     local.get $1
     local.get $2
     i32.const 8
     i32.const 47
     call $~lib/rt/stub/__alloc
     local.set $9
     local.get $9
     local.set $5
     local.get $5
     local.get $3
     i32.store
     local.get $5
     local.get $6
     i32.store offset=4
     local.get $5
     call $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromiseResult>#__set
     local.get $6
     local.set $10
     nop
     local.get $5
     local.set $11
     nop
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $loop|0
   end
   unreachable
  end
  local.get $1
 )
 (func $~lib/polyfills/bswap<u64> (; 439 ;) (type $FUNCSIG$jj) (param $0 i64) (result i64)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  local.get $0
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.set $1
  local.get $0
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  local.set $2
  local.get $1
  local.get $2
  i64.or
  local.set $3
  local.get $3
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.set $1
  local.get $3
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  local.set $2
  local.get $1
  local.get $2
  i64.or
  i64.const 32
  i64.rotr
  return
 )
 (func $~lib/bignum/integer/u128/u128#toArrayBuffer (; 440 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $2
  if
   local.get $0
   local.set $3
   local.get $1
   local.set $4
   local.get $4
   local.get $3
   i64.load offset=8
   call $~lib/polyfills/bswap<u64>
   i64.store
   local.get $4
   local.get $3
   i64.load
   call $~lib/polyfills/bswap<u64>
   i64.store offset=8
  else
   local.get $0
   local.set $5
   local.get $1
   local.set $6
   local.get $6
   local.get $5
   i64.load
   i64.store
   local.get $6
   local.get $5
   i64.load offset=8
   i64.store offset=8
  end
 )
 (func $~lib/near-runtime-ts/contract/ContractPromise.create (; 441 ;) (type $FUNCSIG$iiiiji) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i64) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i64)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  local.get $0
  local.set $12
  local.get $12
  drop
  local.get $1
  local.set $13
  local.get $13
  drop
  local.get $2
  local.set $14
  local.get $14
  drop
  local.get $4
  local.set $15
  local.get $15
  drop
  local.get $0
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $5
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $6
  local.get $4
  local.set $7
  i32.const 0
  local.set $8
  i32.const 0
  i32.const 16
  call $~lib/typedarray/Uint8Array#constructor
  local.set $9
  local.get $9
  i32.load offset=4
  local.set $10
  local.get $7
  local.get $10
  local.get $8
  call $~lib/bignum/integer/u128/u128#toArrayBuffer
  local.get $9
  local.set $10
  local.get $5
  i32.load offset=8
  i64.extend_i32_s
  local.get $5
  i32.load offset=4
  i64.extend_i32_u
  local.get $6
  i32.load offset=8
  i64.extend_i32_s
  local.get $6
  i32.load offset=4
  i64.extend_i32_u
  local.get $2
  i32.load offset=8
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  local.get $10
  i32.load offset=4
  i64.extend_i32_u
  local.get $3
  call $~lib/near-runtime-ts/runtime_api/runtime_api.promise_create
  local.set $11
  i32.const 8
  i32.const 49
  call $~lib/rt/stub/__alloc
  local.set $16
  local.get $16
  local.set $9
  local.get $9
  local.get $11
  i64.store
  local.get $9
  local.set $17
  local.get $17
  local.set $8
  local.get $5
  local.set $18
  nop
  local.get $6
  local.set $19
  nop
  local.get $10
  local.set $20
  nop
  local.get $9
  local.set $21
  nop
  local.get $0
  local.set $22
  nop
  local.get $1
  local.set $23
  nop
  local.get $2
  local.set $24
  nop
  local.get $4
  local.set $25
  nop
  local.get $8
 )
 (func $~lib/bignum/integer/u128/u128#constructor (; 442 ;) (type $FUNCSIG$iijj) (param $0 i32) (param $1 i64) (param $2 i64) (result i32)
  (local $3 i32)
  local.get $0
  i32.eqz
  if
   i32.const 16
   i32.const 5
   call $~lib/rt/stub/__alloc
   local.set $3
   local.get $3
   local.set $0
  end
  local.get $0
  local.get $1
  i64.store
  local.get $0
  local.get $2
  i64.store offset=8
  local.get $0
 )
 (func $~lib/near-runtime-ts/contract/ContractPromise.create|trampoline (; 443 ;) (type $FUNCSIG$iiiiji) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i64) (param $4 i32) (result i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~lib/argc
     i32.const 4
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i64.const 0
   local.set $5
   i32.const 0
   local.get $5
   i64.const 0
   call $~lib/bignum/integer/u128/u128#constructor
   local.tee $6
   local.set $4
  end
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $~lib/near-runtime-ts/contract/ContractPromise.create
  local.set $7
  local.get $6
  local.set $8
  nop
  local.get $7
 )
 (func $~lib/near-runtime-ts/contract/ContractPromise#then (; 444 ;) (type $FUNCSIG$iiiiiji) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i64) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i64)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  local.get $1
  local.set $13
  local.get $13
  drop
  local.get $2
  local.set $14
  local.get $14
  drop
  local.get $3
  local.set $15
  local.get $15
  drop
  local.get $5
  local.set $16
  local.get $16
  drop
  local.get $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $6
  local.get $2
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $7
  local.get $5
  local.set $8
  i32.const 0
  local.set $9
  i32.const 0
  i32.const 16
  call $~lib/typedarray/Uint8Array#constructor
  local.set $10
  local.get $10
  i32.load offset=4
  local.set $11
  local.get $8
  local.get $11
  local.get $9
  call $~lib/bignum/integer/u128/u128#toArrayBuffer
  local.get $10
  local.set $11
  local.get $0
  i64.load
  local.get $6
  i32.load offset=8
  i64.extend_i32_s
  local.get $6
  i32.load offset=4
  i64.extend_i32_u
  local.get $7
  i32.load offset=8
  i64.extend_i32_s
  local.get $7
  i32.load offset=4
  i64.extend_i32_u
  local.get $3
  i32.load offset=8
  i64.extend_i32_s
  local.get $3
  i32.load offset=4
  i64.extend_i32_u
  local.get $11
  i32.load offset=4
  i64.extend_i32_u
  local.get $4
  call $~lib/near-runtime-ts/runtime_api/runtime_api.promise_then
  local.set $12
  i32.const 8
  i32.const 49
  call $~lib/rt/stub/__alloc
  local.set $17
  local.get $17
  local.set $10
  local.get $10
  local.get $12
  i64.store
  local.get $10
  local.set $18
  local.get $18
  local.set $9
  local.get $6
  local.set $19
  nop
  local.get $7
  local.set $20
  nop
  local.get $11
  local.set $21
  nop
  local.get $10
  local.set $22
  nop
  local.get $1
  local.set $23
  nop
  local.get $2
  local.set $24
  nop
  local.get $3
  local.set $25
  nop
  local.get $5
  local.set $26
  nop
  local.get $9
 )
 (func $~lib/near-runtime-ts/contract/ContractPromise#then|trampoline (; 445 ;) (type $FUNCSIG$iiiiiji) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i64) (param $5 i32) (result i32)
  (local $6 i64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~lib/argc
     i32.const 4
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i64.const 0
   local.set $6
   i32.const 0
   local.get $6
   i64.const 0
   call $~lib/bignum/integer/u128/u128#constructor
   local.tee $7
   local.set $5
  end
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  call $~lib/near-runtime-ts/contract/ContractPromise#then
  local.set $8
  local.get $7
  local.set $9
  nop
  local.get $8
 )
 (func $~lib/array/Array<u64>#constructor (; 446 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 16
   i32.const 51
   call $~lib/rt/stub/__alloc
   local.set $2
   local.get $2
  end
  local.get $1
  i32.const 3
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
  local.get $1
  i32.store offset=12
  local.get $0
 )
 (func $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromise>#__get (; 447 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 760
   i32.const 1560
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $4
  local.get $1
  local.set $5
  i32.const 0
  local.set $6
  local.get $4
  i32.load offset=4
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $6
  local.get $6
  local.set $2
  local.get $2
  i32.eqz
  if
   local.get $2
   local.set $3
   nop
   i32.const 4072
   i32.const 1560
   i32.const 97
   i32.const 39
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
 )
 (func $~lib/array/Array<u64>#__set (; 448 ;) (type $FUNCSIG$viij) (param $0 i32) (param $1 i32) (param $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 760
    i32.const 1560
    i32.const 109
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.const 3
   call $~lib/array/ensureSize
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.store offset=12
  end
  local.get $0
  local.set $3
  local.get $1
  local.set $4
  local.get $2
  local.set $5
  local.get $3
  i32.load offset=4
  local.get $4
  i32.const 3
  i32.shl
  i32.add
  local.get $5
  i64.store
 )
 (func $~lib/near-runtime-ts/contract/ContractPromise.all (; 449 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  local.get $0
  local.set $5
  local.get $5
  drop
  local.get $0
  local.set $6
  local.get $6
  i32.load offset=12
  i32.const 0
  i32.gt_s
  i32.eqz
  if
   i32.const 0
   i32.const 17560
   i32.const 260
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.get $0
  local.set $7
  local.get $7
  i32.load offset=12
  call $~lib/array/Array<u64>#constructor
  local.set $1
  block $break|0
   i32.const 0
   local.set $2
   loop $loop|0
    local.get $2
    local.get $0
    local.set $8
    local.get $8
    i32.load offset=12
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $1
    local.get $2
    local.get $0
    local.get $2
    call $~lib/array/Array<~lib/near-runtime-ts/contract/ContractPromise>#__get
    local.tee $3
    i64.load
    call $~lib/array/Array<u64>#__set
    local.get $3
    local.set $9
    nop
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $loop|0
   end
   unreachable
  end
  local.get $1
  i32.load offset=4
  i64.extend_i32_u
  local.get $1
  local.set $10
  local.get $10
  i32.load offset=12
  i64.extend_i32_s
  call $~lib/near-runtime-ts/runtime_api/runtime_api.promise_and
  local.set $4
  i32.const 8
  i32.const 49
  call $~lib/rt/stub/__alloc
  local.set $11
  local.get $11
  local.set $2
  local.get $2
  local.get $4
  i64.store
  local.get $2
  local.set $12
  local.get $12
  local.set $3
  local.get $1
  local.set $13
  nop
  local.get $2
  local.set $14
  nop
  local.get $0
  local.set $15
  nop
  local.get $3
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|6~anonymous|0 (; 450 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  call $~lib/near-runtime-ts/contract/ContractPromise.getResults
  local.set $0
  local.get $0
  local.set $8
  local.get $8
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $1
  i32.const 0
  i32.const 17392
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  i32.const 4
  global.set $~lib/argc
  i32.const 17456
  i32.const 17520
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $2
  i64.const 10000000000000
  i32.const 0
  call $~lib/near-runtime-ts/contract/ContractPromise.create|trampoline
  local.set $3
  i32.const 4
  global.set $~lib/argc
  local.get $3
  i32.const 17456
  i32.const 17520
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $4
  i64.const 10000000000000
  i32.const 0
  call $~lib/near-runtime-ts/contract/ContractPromise#then|trampoline
  local.set $5
  i32.const 1
  i32.const 2
  i32.const 50
  i32.const 0
  call $~lib/rt/__allocArray
  local.set $6
  local.get $6
  i32.load offset=4
  local.set $7
  local.get $7
  local.get $5
  local.set $9
  local.get $9
  i32.store
  local.get $6
  call $~lib/near-runtime-ts/contract/ContractPromise.all
  local.set $7
  local.get $0
  local.set $10
  nop
  local.get $1
  local.set $11
  nop
  local.get $2
  local.set $12
  nop
  local.get $3
  local.set $13
  nop
  local.get $4
  local.set $14
  nop
  local.get $5
  local.set $15
  nop
  local.get $7
  local.set $16
  nop
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|6 (; 451 ;) (type $FUNCSIG$v)
  i32.const 11208
  i32.const 29
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
 )
 (func $~lib/near-runtime-ts/math/math.sha256 (; 452 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  local.get $0
  i32.load offset=8
  i64.extend_i32_s
  local.get $0
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.sha256
  i64.const 0
  call $~lib/near-runtime-ts/util/util.read_register
  local.set $1
  local.get $0
  local.set $3
  nop
  local.get $1
  return
 )
 (func $~lib/near-runtime-ts/math/math._uint8ArrayToU32 (; 453 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  local.get $0
  i32.const 0
  i32.ne
  if (result i32)
   local.get $0
   local.set $3
   local.get $3
   i32.load offset=8
   i32.const 4
   i32.ge_s
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 17664
   i32.const 17760
   i32.const 34
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 255
  local.get $0
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.and
  i32.const 24
  i32.shl
  i32.const 255
  local.get $0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.and
  i32.const 16
  i32.shl
  i32.or
  i32.const 255
  local.get $0
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.and
  i32.const 8
  i32.shl
  i32.or
  i32.const 255
  local.get $0
  i32.const 3
  call $~lib/typedarray/Uint8Array#__get
  i32.and
  i32.const 0
  i32.shl
  i32.or
  local.set $1
  local.get $0
  local.set $4
  nop
  local.get $1
 )
 (func $~lib/near-runtime-ts/math/math.hash32Bytes (; 454 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  local.set $3
  local.get $3
  drop
  local.get $0
  call $~lib/near-runtime-ts/math/math.sha256
  local.tee $1
  call $~lib/near-runtime-ts/math/math._uint8ArrayToU32
  local.set $2
  local.get $1
  local.set $4
  nop
  local.get $0
  local.set $5
  nop
  local.get $2
 )
 (func $~lib/near-runtime-ts/math/math.hash<~lib/string/String> (; 455 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  local.set $4
  local.get $4
  drop
  local.get $0
  call $~lib/string/String#toString
  local.tee $1
  call $~lib/near-runtime-ts/util/util.stringToBytes
  local.set $2
  local.get $2
  call $~lib/near-runtime-ts/math/math.sha256
  local.set $3
  local.get $1
  local.set $5
  nop
  local.get $2
  local.set $6
  nop
  local.get $0
  local.set $7
  nop
  local.get $3
 )
 (func $~lib/near-runtime-ts/math/math.hash32<~lib/string/String> (; 456 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  local.set $3
  local.get $3
  drop
  local.get $0
  call $~lib/near-runtime-ts/math/math.hash<~lib/string/String>
  local.tee $1
  call $~lib/near-runtime-ts/math/math._uint8ArrayToU32
  local.set $2
  local.get $1
  local.set $4
  nop
  local.get $0
  local.set $5
  nop
  local.get $2
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u8>#constructor (; 457 ;) (type $FUNCSIG$iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  i32.eqz
  if
   i32.const 5
   i32.const 52
   call $~lib/rt/stub/__alloc
   local.set $2
   local.get $2
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store8 offset=4
  local.get $0
  local.get $1
  i32.store8 offset=4
  local.get $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u8> (; 458 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  i32.const 0
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u8>#constructor
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.report<u8> (; 459 ;) (type $FUNCSIG$vi) (param $0 i32)
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
  i32.const 3
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.type
  local.get $0
  drop
  i32.const 0
  if (result i32)
   i32.const 1
  else
   local.get $0
   drop
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   local.get $0
   drop
   i32.const 0
  end
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.signed
  local.get $0
  i32.const 255
  i32.and
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.integer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<u8> (; 460 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.ready
  i32.eqz
  if
   call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportInvalidExpectCall
   return
  end
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/getStackTrace
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
  local.get $1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
  i32.const 3
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.type
  local.get $0
  drop
  i32.const 0
  if (result i32)
   i32.const 1
  else
   local.get $0
   drop
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   local.get $0
   drop
   i32.const 0
  end
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.signed
  local.get $0
  i32.const 255
  i32.and
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.integer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<u8> (; 461 ;) (type $FUNCSIG$viiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $3
  local.set $4
  local.get $4
  drop
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.report<u8>
  local.get $1
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.report<u8>
  local.get $2
  local.get $1
  i32.const 255
  i32.and
  local.get $0
  i32.const 255
  i32.and
  i32.eq
  i32.xor
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/assert/assert
  local.get $3
  local.set $5
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u8>#toBe (; 462 ;) (type $FUNCSIG$viii) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  local.set $3
  local.get $3
  drop
  local.get $0
  i32.load8_u offset=4
  local.get $1
  local.get $0
  i32.load
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/comparison/exactComparison/exactComparison<u8>
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.clear
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.clear
  local.get $2
  local.set $4
  nop
 )
 (func $~lib/near-runtime-ts/math/math.randomBuffer (; 463 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  i32.const 0
  local.set $2
  local.get $0
  local.set $4
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 376
  call $~lib/near-runtime-ts/storage/Storage#contains
  i32.eqz
  if (result i32)
   i32.const 1
  else
   global.get $~lib/near-runtime-ts/storage/storage
   i32.const 376
   call $~lib/near-runtime-ts/storage/Storage#getSome<i32>
   i64.extend_i32_s
   call $~lib/near-runtime-ts/runtime_api/runtime_api.block_index
   i64.ne
  end
  if
   call $~lib/near-runtime-ts/runtime_api/runtime_api.block_index
   i32.wrap_i64
   i64.extend_i32_s
   local.set $1
   global.get $~lib/near-runtime-ts/storage/storage
   global.get $~lib/near-runtime-ts/math/math._BLOCK_INDEX_SEED_AT_KEY
   local.get $1
   call $~lib/near-runtime-ts/storage/Storage#set<u64>
   block $__inlined_func$~lib/near-runtime-ts/math/math.randomSeed (result i32)
    i64.const 0
    call $~lib/near-runtime-ts/runtime_api/runtime_api.random_seed
    i64.const 0
    call $~lib/near-runtime-ts/util/util.read_register
    br $__inlined_func$~lib/near-runtime-ts/math/math.randomSeed
   end
   local.set $5
   local.get $2
   local.set $8
   nop
   local.get $5
   local.set $2
   global.get $~lib/near-runtime-ts/storage/storage
   global.get $~lib/near-runtime-ts/math/math._RANDOM_BUFFER_KEY
   local.get $2
   call $~lib/near-runtime-ts/storage/Storage#setBytes
   i32.const 0
   local.set $3
   global.get $~lib/near-runtime-ts/storage/storage
   global.get $~lib/near-runtime-ts/math/math._RANDOM_BUFFER_INDEX_KEY
   local.get $3
   call $~lib/near-runtime-ts/storage/Storage#set<i32>
  else
   global.get $~lib/near-runtime-ts/storage/storage
   global.get $~lib/near-runtime-ts/math/math._RANDOM_BUFFER_KEY
   call $~lib/near-runtime-ts/storage/Storage#getBytes
   local.tee $5
   if (result i32)
    local.get $5
   else
    unreachable
   end
   local.tee $5
   local.get $2
   local.tee $6
   i32.ne
   if
    local.get $5
    local.set $9
    local.get $9
    drop
    local.get $6
    local.set $10
    nop
   end
   local.get $5
   local.set $2
   global.get $~lib/near-runtime-ts/storage/storage
   global.get $~lib/near-runtime-ts/math/math._RANDOM_BUFFER_INDEX_KEY
   i32.const 0
   call $~lib/near-runtime-ts/storage/Storage#getPrimitive<i32>
   local.set $3
  end
  i32.const 0
  local.get $0
  call $~lib/typedarray/Uint8Array#constructor
  local.set $5
  block $break|0
   i32.const 0
   local.set $6
   loop $loop|0
    local.get $6
    local.get $4
    i32.lt_s
    i32.eqz
    br_if $break|0
    local.get $5
    local.get $6
    local.get $2
    local.get $3
    call $~lib/typedarray/Uint8Array#__get
    call $~lib/typedarray/Uint8Array#__set
    local.get $3
    local.get $2
    local.set $11
    local.get $11
    i32.load offset=8
    i32.const 1
    i32.sub
    i32.eq
    if
     local.get $2
     call $~lib/near-runtime-ts/math/math.sha256
     local.set $7
     local.get $2
     local.set $12
     nop
     local.get $7
     local.set $2
     global.get $~lib/near-runtime-ts/storage/storage
     global.get $~lib/near-runtime-ts/math/math._RANDOM_BUFFER_KEY
     local.get $2
     call $~lib/near-runtime-ts/storage/Storage#setBytes
     i32.const 0
     local.set $3
     global.get $~lib/near-runtime-ts/storage/storage
     global.get $~lib/near-runtime-ts/math/math._RANDOM_BUFFER_INDEX_KEY
     local.get $3
     call $~lib/near-runtime-ts/storage/Storage#set<i32>
    else
     local.get $3
     i32.const 1
     i32.add
     local.set $3
    end
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $loop|0
   end
   unreachable
  end
  global.get $~lib/near-runtime-ts/storage/storage
  global.get $~lib/near-runtime-ts/math/math._RANDOM_BUFFER_INDEX_KEY
  local.get $3
  call $~lib/near-runtime-ts/storage/Storage#set<i32>
  local.get $5
  local.set $6
  local.get $2
  local.set $13
  nop
  local.get $6
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|7~anonymous|0 (; 464 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  call $assembly/__tests__/util/_testBytes
  local.set $0
  local.get $0
  call $~lib/near-runtime-ts/math/math.hash32Bytes
  local.set $1
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u32>
  local.tee $2
  i32.const -701271954
  i32.const 17832
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u32>#toBe
  i32.const 17872
  call $~lib/near-runtime-ts/math/math.hash32<~lib/string/String>
  local.set $3
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u32>
  local.tee $4
  i32.const -900924094
  i32.const 17904
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u32>#toBe
  i32.const 17872
  call $~lib/near-runtime-ts/math/math.hash<~lib/string/String>
  local.set $5
  i32.const 3
  i32.const 2
  i32.const 14
  i32.const 17968
  call $~lib/rt/__allocArray
  local.set $17
  local.get $17
  local.tee $7
  local.set $18
  local.get $18
  local.set $6
  local.get $5
  local.set $19
  local.get $19
  i32.load offset=8
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.tee $8
  i32.const 32
  i32.const 18000
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  local.get $5
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u8>
  local.tee $9
  i32.const 202
  i32.const 18080
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u8>#toBe
  local.get $5
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u8>
  local.tee $10
  i32.const 76
  i32.const 18080
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u8>#toBe
  local.get $5
  i32.const 31
  call $~lib/typedarray/Uint8Array#__get
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u8>
  local.tee $11
  i32.const 184
  i32.const 18080
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u8>#toBe
  i32.const 14
  call $~lib/near-runtime-ts/math/math.randomBuffer
  local.set $12
  i32.const 14
  call $~lib/near-runtime-ts/math/math.randomBuffer
  local.set $13
  i32.const 14
  call $~lib/near-runtime-ts/math/math.randomBuffer
  local.set $14
  i32.const 32
  call $~lib/near-runtime-ts/math/math.randomBuffer
  local.set $15
  i32.const 35
  call $~lib/near-runtime-ts/math/math.randomBuffer
  local.set $16
  local.get $0
  local.set $20
  nop
  local.get $2
  local.set $21
  nop
  local.get $4
  local.set $22
  nop
  local.get $5
  local.set $23
  nop
  local.get $7
  local.set $24
  nop
  local.get $6
  local.set $25
  nop
  local.get $8
  local.set $26
  nop
  local.get $9
  local.set $27
  nop
  local.get $10
  local.set $28
  nop
  local.get $11
  local.set $29
  nop
  local.get $12
  local.set $30
  nop
  local.get $13
  local.set $31
  nop
  local.get $14
  local.set $32
  nop
  local.get $15
  local.set $33
  nop
  local.get $16
  local.set $34
  nop
 )
 (func $start:assembly/__tests__/runtime.spec~anonymous|7 (; 465 ;) (type $FUNCSIG$v)
  i32.const 11208
  i32.const 31
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
 )
 (func $start:assembly/__tests__/runtime.spec (; 466 ;) (type $FUNCSIG$v)
  call $start:~lib/near-runtime-ts/index
  i32.const 560
  i32.const 3
  call $node_modules/@as-pect/assembly/assembly/internal/Describe/describe
  call $start:~lib/assemblyscript-json/decoder
  i32.const 0
  call $nearFile/Handler#constructor
  global.set $nearFile/JSON.handler
  i32.const 0
  global.get $nearFile/JSON.handler
  call $~lib/assemblyscript-json/decoder/JSONDecoder<nearFile/Handler>#constructor
  global.set $nearFile/JSON.decoder
  i32.const 1864
  i32.const 14
  call $node_modules/@as-pect/assembly/assembly/internal/Describe/describe
  i32.const 8600
  i32.const 20
  call $node_modules/@as-pect/assembly/assembly/internal/Describe/describe
  i32.const 11176
  i32.const 22
  call $node_modules/@as-pect/assembly/assembly/internal/Describe/describe
  i32.const 13928
  i32.const 24
  call $node_modules/@as-pect/assembly/assembly/internal/Describe/describe
  i32.const 15136
  i32.const 28
  call $node_modules/@as-pect/assembly/assembly/internal/Describe/describe
  i32.const 17360
  i32.const 30
  call $node_modules/@as-pect/assembly/assembly/internal/Describe/describe
  i32.const 17640
  i32.const 32
  call $node_modules/@as-pect/assembly/assembly/internal/Describe/describe
 )
 (func $~lib/near-runtime-ts/contract/Context#_readRegisterContentsAsString (; 467 ;) (type $FUNCSIG$iij) (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  call $~lib/near-runtime-ts/util/util.read_register
  local.tee $2
  call $~lib/near-runtime-ts/util/util.bytesToString
  local.tee $3
  if (result i32)
   local.get $3
  else
   unreachable
  end
  local.set $4
  local.get $4
  local.set $3
  local.get $2
  local.set $5
  nop
  local.get $3
 )
 (func $assembly/__tests__/runtime.spec/contextTests (; 468 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/near-runtime-ts/contract/context
  local.set $4
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.signer_account_id
  local.get $4
  i64.const 0
  call $~lib/near-runtime-ts/contract/Context#_readRegisterContentsAsString
  local.tee $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $1
  i32.const 18152
  i32.const 18176
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  i32.const 18216
  call $assembly/index/setCurrent_account_id
  global.get $~lib/near-runtime-ts/contract/context
  local.set $5
  i64.const 0
  call $~lib/near-runtime-ts/runtime_api/runtime_api.current_account_id
  local.get $5
  i64.const 0
  call $~lib/near-runtime-ts/contract/Context#_readRegisterContentsAsString
  local.tee $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.tee $3
  i32.const 18216
  i32.const 18264
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  local.set $6
  nop
  local.get $1
  local.set $7
  nop
  local.get $2
  local.set $8
  nop
  local.get $3
  local.set $9
  nop
 )
 (func $nearFile/getInput (; 469 ;) (type $FUNCSIG$i) (result i32)
  (local $0 i64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  i64.const 0
  call $nearFile/input
  i64.const 0
  call $nearFile/register_len
  local.set $0
  local.get $0
  i64.const 4294967295
  i64.eq
  if
   call $nearFile/panic
  end
  i32.const 0
  local.get $0
  i32.wrap_i64
  call $~lib/typedarray/Uint8Array#constructor
  local.set $1
  i64.const 0
  local.get $1
  i32.load
  i64.extend_i32_u
  call $nearFile/read_register
  local.get $1
  call $nearFile/JSON.parse
  local.set $2
  local.get $1
  local.set $3
  nop
  local.get $2
 )
 (func $nearFile/encode<~lib/string/String,~lib/typedarray/Uint8Array> (; 470 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $0
  local.set $5
  local.get $5
  drop
  local.get $1
  local.set $6
  local.get $6
  drop
  local.get $2
  local.set $7
  local.get $7
  drop
  local.get $0
  i32.const 0
  call $~lib/string/String.__eq
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   local.get $2
   local.get $1
   local.get $0
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setString
  end
  i32.const 0
  local.set $3
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
  local.set $4
  local.get $0
  local.set $8
  nop
  local.get $1
  local.set $9
  nop
  local.get $2
  local.set $10
  nop
  local.get $3
  local.set $11
  nop
  local.get $4
  return
 )
 (func $nearFile/encode<~lib/string/String,~lib/typedarray/Uint8Array>|trampoline (; 471 ;) (type $FUNCSIG$iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~lib/argc
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 1008
    local.set $1
   end
   i32.const 0
   call $nearFile/JSONEncoder#constructor
   local.tee $3
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $nearFile/encode<~lib/string/String,~lib/typedarray/Uint8Array>
  local.set $4
  local.get $3
  local.set $5
  nop
  local.get $4
 )
 (func $assembly/__tests__/runtime.spec/__wrapper_simple (; 472 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  call $nearFile/getInput
  local.set $0
  local.get $0
  i32.const 18320
  call $nearFile/decode<~lib/string/String,nearFile/Obj>
  local.tee $1
  local.set $8
  i32.const 0
  local.set $9
  local.get $8
  local.set $9
  local.get $9
  drop
  local.get $8
  local.set $2
  i32.const 1
  global.set $~lib/argc
  local.get $2
  i32.const 1008
  i32.const 0
  call $nearFile/encode<~lib/string/String,~lib/typedarray/Uint8Array>|trampoline
  local.set $3
  local.get $3
  i32.load offset=8
  i64.extend_i32_s
  local.get $3
  i32.load
  i64.extend_i32_u
  call $nearFile/value_return
  local.get $0
  local.set $4
  nop
  local.get $1
  local.set $5
  nop
  local.get $2
  local.set $6
  nop
  local.get $3
  local.set $7
  nop
 )
 (func $assembly/__tests__/runtime.spec/setKeyValue (; 473 ;) (type $FUNCSIG$vii) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  local.get $1
  local.set $3
  local.get $3
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  local.get $1
  call $~lib/near-runtime-ts/storage/Storage#set<~lib/string/String>
  local.get $0
  local.set $4
  nop
  local.get $1
  local.set $5
  nop
 )
 (func $assembly/__tests__/runtime.spec/__wrapper_setKeyValue (; 474 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  call $nearFile/getInput
  local.set $0
  local.get $0
  i32.const 18344
  call $nearFile/decode<~lib/string/String,nearFile/Obj>
  local.tee $1
  local.get $0
  i32.const 18368
  call $nearFile/decode<~lib/string/String,nearFile/Obj>
  local.tee $2
  call $assembly/__tests__/runtime.spec/setKeyValue
  local.get $0
  local.set $3
  nop
  local.get $1
  local.set $4
  nop
  local.get $2
  local.set $5
  nop
 )
 (func $assembly/__tests__/runtime.spec/getValueByKey (; 475 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $2
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  local.get $0
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#get<~lib/string/String>
  local.set $1
  local.get $0
  local.set $3
  nop
  local.get $1
 )
 (func $assembly/__tests__/runtime.spec/__wrapper_getValueByKey (; 476 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  call $nearFile/getInput
  local.set $0
  local.get $0
  i32.const 18344
  call $nearFile/decode<~lib/string/String,nearFile/Obj>
  local.tee $1
  call $assembly/__tests__/runtime.spec/getValueByKey
  local.set $2
  i32.const 1
  global.set $~lib/argc
  local.get $2
  i32.const 1008
  i32.const 0
  call $nearFile/encode<~lib/string/String,~lib/typedarray/Uint8Array>|trampoline
  local.set $3
  local.get $3
  i32.load offset=8
  i64.extend_i32_s
  local.get $3
  i32.load
  i64.extend_i32_u
  call $nearFile/value_return
  local.get $0
  local.set $4
  nop
  local.get $1
  local.set $5
  nop
  local.get $2
  local.set $6
  nop
  local.get $3
  local.set $7
  nop
 )
 (func $assembly/__tests__/runtime.spec/__wrapper_setValue (; 477 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  call $nearFile/getInput
  local.set $0
  local.get $0
  i32.const 18368
  call $nearFile/decode<~lib/string/String,nearFile/Obj>
  local.tee $1
  local.set $8
  i32.const 0
  local.set $9
  local.get $8
  local.set $9
  local.get $9
  drop
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 18400
  local.get $8
  call $~lib/near-runtime-ts/storage/Storage#set<~lib/string/String>
  local.get $8
  local.set $2
  i32.const 1
  global.set $~lib/argc
  local.get $2
  i32.const 1008
  i32.const 0
  call $nearFile/encode<~lib/string/String,~lib/typedarray/Uint8Array>|trampoline
  local.set $3
  local.get $3
  i32.load offset=8
  i64.extend_i32_s
  local.get $3
  i32.load
  i64.extend_i32_u
  call $nearFile/value_return
  local.get $0
  local.set $4
  nop
  local.get $1
  local.set $5
  nop
  local.get $2
  local.set $6
  nop
  local.get $3
  local.set $7
  nop
 )
 (func $assembly/__tests__/runtime.spec/__wrapper_getValue (; 478 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/near-runtime-ts/storage/storage
  i32.const 18400
  i32.const 0
  call $~lib/near-runtime-ts/storage/Storage#get<~lib/string/String>
  local.set $0
  i32.const 1
  global.set $~lib/argc
  local.get $0
  i32.const 1008
  i32.const 0
  call $nearFile/encode<~lib/string/String,~lib/typedarray/Uint8Array>|trampoline
  local.set $1
  local.get $1
  i32.load offset=8
  i64.extend_i32_s
  local.get $1
  i32.load
  i64.extend_i32_u
  call $nearFile/value_return
  local.get $0
  local.set $2
  nop
  local.get $1
  local.set $3
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/index/__ready (; 479 ;) (type $FUNCSIG$v)
  i32.const 1
  global.set $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.ready
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/call/__call (; 480 ;) (type $FUNCSIG$vi) (param $0 i32)
  i32.const 0
  global.set $~lib/argc
  local.get $0
  call_indirect (type $FUNCSIG$v)
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Actual/__sendActual (; 481 ;) (type $FUNCSIG$v)
  (local $0 i32)
  block $break|0
   block $case9|0
    block $case8|0
     block $case7|0
      block $case6|0
       block $case5|0
        block $case4|0
         block $case3|0
          block $case2|0
           block $case1|0
            block $case0|0
             global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.type
             local.set $0
             local.get $0
             i32.const 0
             i32.eq
             br_if $case0|0
             local.get $0
             i32.const 6
             i32.eq
             br_if $case1|0
             local.get $0
             i32.const 2
             i32.eq
             br_if $case2|0
             local.get $0
             i32.const 3
             i32.eq
             br_if $case3|0
             local.get $0
             i32.const 1
             i32.eq
             br_if $case4|0
             local.get $0
             i32.const 4
             i32.eq
             br_if $case5|0
             local.get $0
             i32.const 5
             i32.eq
             br_if $case6|0
             local.get $0
             i32.const 10
             i32.eq
             br_if $case7|0
             local.get $0
             i32.const 11
             i32.eq
             br_if $case8|0
             local.get $0
             i32.const 12
             i32.eq
             br_if $case9|0
             br $break|0
            end
            return
           end
           global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference
           global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
           call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualArray
           br $break|0
          end
          global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.float
          i32.const 1
          global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
          call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualFloat
          br $break|0
         end
         global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.integer
         global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.signed
         global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
         call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualInteger
         br $break|0
        end
        global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
        call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualNull
        br $break|0
       end
       global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference
       global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.offset
       global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
       call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualReferenceExternal
       br $break|0
      end
      global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference
      global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
      call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualString
      br $break|0
     end
     global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.reference
     global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.signed
     global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
     call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualLong
     br $break|0
    end
    global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.integer
    global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
    call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualBool
    br $break|0
   end
   global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.integer
   global.get $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.stackTrace
   call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/reportActualFunction
   br $break|0
  end
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/report/Expected/__sendExpected (; 482 ;) (type $FUNCSIG$v)
  (local $0 i32)
  block $break|0
   block $case11|0
    block $case10|0
     block $case9|0
      block $case8|0
       block $case7|0
        block $case6|0
         block $case5|0
          block $case4|0
           block $case3|0
            block $case2|0
             block $case1|0
              block $case0|0
               global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.type
               local.set $0
               local.get $0
               i32.const 6
               i32.eq
               br_if $case0|0
               local.get $0
               i32.const 2
               i32.eq
               br_if $case1|0
               local.get $0
               i32.const 3
               i32.eq
               br_if $case2|0
               local.get $0
               i32.const 1
               i32.eq
               br_if $case3|0
               local.get $0
               i32.const 4
               i32.eq
               br_if $case4|0
               local.get $0
               i32.const 5
               i32.eq
               br_if $case5|0
               local.get $0
               i32.const 7
               i32.eq
               br_if $case6|0
               local.get $0
               i32.const 9
               i32.eq
               br_if $case7|0
               local.get $0
               i32.const 8
               i32.eq
               br_if $case8|0
               local.get $0
               i32.const 10
               i32.eq
               br_if $case9|0
               local.get $0
               i32.const 11
               i32.eq
               br_if $case10|0
               local.get $0
               i32.const 12
               i32.eq
               br_if $case11|0
               br $break|0
              end
              global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
              global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
              global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
              call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedArray
              br $break|0
             end
             global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.float
             i32.const 1
             global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
             global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
             call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedFloat
             br $break|0
            end
            global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.integer
            global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.signed
            global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
            global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
            call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedInteger
            br $break|0
           end
           global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
           global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
           call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedNull
           br $break|0
          end
          global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
          global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.offset
          global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
          global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
          call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedReferenceExternal
          br $break|0
         end
         global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
         global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
         global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
         call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedString
         br $break|0
        end
        global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
        global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
        call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedFalsy
        br $break|0
       end
       global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
       global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
       call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedFinite
       br $break|0
      end
      global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
      global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
      call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedTruthy
      br $break|0
     end
     global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
     global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.signed
     global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
     global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
     call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedLong
     br $break|0
    end
    global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.integer
    global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
    global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
    call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedBool
    br $break|0
   end
   global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.reference
   global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.negated
   global.get $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.stackTrace
   call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/reportExpectedFunction
  end
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/log/__ignoreLogs (; 483 ;) (type $FUNCSIG$vi) (param $0 i32)
  local.get $0
  i32.const 0
  i32.ne
  global.set $node_modules/@as-pect/assembly/assembly/internal/log/ignoreLogs
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/RTrace/__disableRTrace (; 484 ;) (type $FUNCSIG$v)
  i32.const 0
  global.set $node_modules/@as-pect/assembly/assembly/internal/RTrace/RTrace.enabled
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/RTrace/__getUsizeArrayId (; 485 ;) (type $FUNCSIG$i) (result i32)
  i32.const 53
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/__cleanup (; 486 ;) (type $FUNCSIG$v)
  call $node_modules/@as-pect/assembly/assembly/internal/report/Expected/Expected.clear
  call $node_modules/@as-pect/assembly/assembly/internal/report/Actual/Actual.clear
 )
 (func $start (; 487 ;) (type $FUNCSIG$v)
  global.get $~lib/started
  if
   return
  else
   i32.const 1
   global.set $~lib/started
  end
  global.get $~lib/heap/__heap_base
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  global.set $~lib/rt/stub/startOffset
  global.get $~lib/rt/stub/startOffset
  global.set $~lib/rt/stub/offset
  call $start:assembly/__tests__/runtime.spec
 )
 (func $null (; 488 ;) (type $FUNCSIG$v)
 )
)
